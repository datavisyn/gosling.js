{"version":3,"file":"gosling.js","sources":["../src/gosling-schema/validate.ts","../src/core/utils/template.ts","../src/gosling-theme/light.ts","../src/gosling-theme/dark.ts","../src/gosling-theme/warm.ts","../src/gosling-theme/ggplot.ts","../src/gosling-theme/igv.ts","../src/gosling-theme/ensembl.ts","../src/gosling-theme/jbrowse.ts","../src/gosling-theme/ucsc.ts","../src/gosling-theme/washu.ts","../src/gosling-theme/excel.ts","../src/gosling-theme/google.ts","../src/gosling-theme/index.ts","../src/core/utils/define-plugin-track.ts","../src/tracks/gosling-genomic-axis/axis-track.ts","../src/tracks/gosling-brush/brush-track.ts","../src/tracks/gosling-brush/linear-brush-model.ts","../src/tracks/gosling-track/gosling-mouse-event/polygon.ts","../src/tracks/gosling-track/gosling-mouse-event/mouse-event-model.ts","../src/data-fetchers/bam/bam-data-fetcher.ts","../src/data-fetchers/vcf/vcf-data-fetcher.ts","../node_modules/.pnpm/@gmod+bbi@3.0.1/node_modules/@gmod/bbi/esm/bigint-polyfill/pure.js","../node_modules/.pnpm/@gmod+bbi@3.0.1/node_modules/@gmod/bbi/esm/bigint-polyfill/polyfill.js","../node_modules/.pnpm/binary-parser@2.2.1/node_modules/binary-parser/dist/esm/binary_parser.mjs","../node_modules/.pnpm/abortcontroller-polyfill@1.7.5/node_modules/abortcontroller-polyfill/dist/cjs-ponyfill.js","../node_modules/.pnpm/abortable-promise-cache@1.5.0/node_modules/abortable-promise-cache/esm/abortcontroller-ponyfill.js","../node_modules/.pnpm/abortable-promise-cache@1.5.0/node_modules/abortable-promise-cache/esm/AggregateAbortController.js","../node_modules/.pnpm/abortable-promise-cache@1.5.0/node_modules/abortable-promise-cache/esm/AggregateStatusReporter.js","../node_modules/.pnpm/abortable-promise-cache@1.5.0/node_modules/abortable-promise-cache/esm/AbortablePromiseCache.js","../node_modules/.pnpm/abortable-promise-cache@1.5.0/node_modules/abortable-promise-cache/esm/index.js","../node_modules/.pnpm/@gmod+bbi@3.0.1/node_modules/@gmod/bbi/esm/range.js","../node_modules/.pnpm/pako@2.1.0/node_modules/pako/dist/pako.esm.mjs","../node_modules/.pnpm/@gmod+bbi@3.0.1/node_modules/@gmod/bbi/esm/unzip-pako.js","../node_modules/.pnpm/@gmod+bbi@3.0.1/node_modules/@gmod/bbi/esm/util.js","../node_modules/.pnpm/@gmod+bbi@3.0.1/node_modules/@gmod/bbi/esm/blockView.js","../node_modules/.pnpm/tslib@2.6.2/node_modules/tslib/tslib.es6.mjs","../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/isFunction.js","../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/createErrorClass.js","../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/UnsubscriptionError.js","../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/arrRemove.js","../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/Subscription.js","../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/config.js","../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/scheduler/timeoutProvider.js","../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/reportUnhandledError.js","../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/noop.js","../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/errorContext.js","../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/Subscriber.js","../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/symbol/observable.js","../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/identity.js","../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/pipe.js","../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/Observable.js","../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/lift.js","../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/util/EmptyError.js","../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/firstValueFrom.js","../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/scanInternals.js","../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/reduce.js","../node_modules/.pnpm/rxjs@7.8.1/node_modules/rxjs/dist/esm5/internal/operators/toArray.js","../node_modules/.pnpm/@gmod+bbi@3.0.1/node_modules/@gmod/bbi/esm/bbi.js","../node_modules/.pnpm/@gmod+bbi@3.0.1/node_modules/@gmod/bbi/esm/bigwig.js","../src/data-fetchers/bigwig/bigwig-data-fetcher.ts","../src/core/utils/data-transform.ts","../src/data-fetchers/csv/csv-data-fetcher.ts","../src/data-fetchers/json/json-data-fetcher.ts","../src/data-fetchers/gff/gff-data-fetcher.ts","../src/data-fetchers/bed/bed-data-fetcher.ts","../src/tracks/gosling-track/data-abstraction.ts","../src/core/utils/scales.ts","../src/core/example/hg-view-config-1.ts","../src/compiler/higlass-model.ts","../src/core/utils/semantic-zoom.ts","../src/core/channel/index.ts","../src/core/utils/theme.ts","../src/tracks/gosling-track/gosling-track-model.ts","../src/api/pubsub.ts","../src/tracks/gosling-track/gosling-track.ts","../src/tracks/dummy-track/dummy-track.ts","../src/core/init.ts","../src/compiler/bounding-box.ts","../src/core/utils/index.ts","../src/compiler/gosling-to-higlass.ts","../src/core/utils/linking.ts","../src/api/track-and-view-ids.ts","../src/api/api-data.ts","../src/compiler/create-higlass-models.ts","../src/compiler/responsive.ts","../src/compiler/compile.ts","../src/core/higlass-component-wrapper.tsx","../src/api/api.ts","../src/core/utils/omit-deep.ts","../src/core/utils/higlass-zoom-config.ts","../src/core/gosling-component.tsx","../node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/client.js","../src/core/gosling-embed.ts"],"sourcesContent":["import Ajv from 'ajv';\nimport type { SingleTrack, ChannelDeep, ChannelTypes, OverlaidTrack, Track } from './gosling.schema';\nimport { IsChannelDeep } from './gosling.schema.guards';\nimport { resolveSuperposedTracks } from '../core/utils/overlay';\nimport GoslingSchema from './gosling.schema.json';\n\nexport interface Validity {\n    message: string;\n    state: 'success' | 'warn' | 'error';\n    details?: string;\n}\n\nexport function validateGoslingSpec(spec: any): Validity {\n    return validateSpec(GoslingSchema, spec);\n}\n\n/**\n *\n */\nexport function validateSpec(schema: any, spec: any, silence = false): Validity {\n    const validate = new Ajv({ extendRefs: true }).compile(schema);\n    const valid = validate(spec);\n\n    let message = '';\n    let details = '';\n\n    if (validate.errors) {\n        details = JSON.stringify(validate.errors, null, 2);\n\n        if (!silence) {\n            console.warn(details);\n        }\n\n        message = '⚠️ Some properties are incorrectly used.';\n    }\n\n    return { state: valid ? 'success' : 'warn', message, details };\n}\n\nexport function validateTrack(track: Track) {\n    let valid = true;\n    const errorMessages: string[] = [];\n\n    const resolvedTrack = resolveSuperposedTracks(track);\n\n    resolvedTrack.forEach(spec => {\n        // Validate with json schema\n        // ...\n\n        // Additionally, validate the schema with the aspects that cannot be validated by the json schema\n        if (!getGenomicChannelFromTrack(spec) && spec.mark !== 'brush' && spec.mark !== 'rule') {\n            // as an exception, brush and rule can encode no genomic data\n            errorMessages.push('genomic type is not encoded to either a x- or y- axis');\n            // EXPERIMENTAL: we are removing this rule in our spec.\n            valid = false;\n        }\n\n        // combination of visual mark and channel\n        const color = spec.color;\n        if (spec.mark === 'line' && IsChannelDeep(color) && color.type === 'quantitative') {\n            errorMessages.push('`line` mark cannot be used with `quantitative` value');\n            valid = false;\n        }\n\n        /**\n         * Linking\n         */\n        // are the linking used for same visual channels (do not work betwee `x` and `size`)\n    });\n\n    return { valid, errorMessages };\n}\n\n/**\n * Find an axis channel that is encoded with genomic coordinate.\n * `undefined` if not found.\n */\nexport function getGenomicChannelFromTrack(track: SingleTrack | OverlaidTrack): ChannelDeep | undefined {\n    // we do not support using two genomic coordinates yet\n    let genomicChannel: ChannelDeep | undefined = undefined;\n    ['x', 'y', 'xe', 'ye', 'x1', 'y1', 'x1e', 'y1e'].reverse().forEach(channelType => {\n        const channel = track[channelType as keyof typeof ChannelTypes];\n        if (IsChannelDeep(channel) && channel.type === 'genomic') {\n            genomicChannel = channel;\n        }\n    });\n    return genomicChannel;\n}\n\n/**\n * Find an axis channel that is encoded with genomic coordinate and return 'x' or 'y'.\n * `undefined` if not found.\n */\nexport function getGenomicChannelKeyFromTrack(\n    track: SingleTrack | OverlaidTrack\n): 'x' | 'xe' | 'y' | 'ye' | 'x1' | 'y1' | 'x1e' | 'y1e' | undefined {\n    // we do not support using two genomic coordinates yet\n    let genomicChannelKey: string | undefined = undefined;\n    ['x', 'xe', 'y', 'ye', 'x1', 'y1', 'x1e', 'y1e'].reverse().forEach(channelKey => {\n        const channel = track[channelKey as keyof typeof ChannelTypes];\n        if (IsChannelDeep(channel) && channel.type === 'genomic') {\n            genomicChannelKey = channelKey;\n        }\n    });\n    return genomicChannelKey;\n}\n","import type {\n    CustomChannelDef,\n    DataTransform,\n    DataTransformWithBase,\n    GoslingSpec,\n    OverlaidTracks,\n    TemplateTrackDef,\n    TemplateTrackMappingDef,\n    Track\n} from '@gosling-lang/gosling-schema';\nimport { IsTemplateTrack } from '@gosling-lang/gosling-schema';\nimport { traverseTracks } from '../../compiler/spec-preprocess';\n\n/**\n * Track templates officially supported by Gosling.js.\n */\nexport const GoslingTemplates: TemplateTrackDef[] = [\n    {\n        name: 'gene',\n        channels: [\n            { name: 'startPosition', type: 'genomic', required: true },\n            { name: 'endPosition', type: 'genomic', required: true },\n            { name: 'strandColor', type: 'nominal', required: true },\n            { name: 'strandRow', type: 'nominal', required: true },\n            { name: 'opacity', type: 'value', required: false },\n            { name: 'geneHeight', type: 'value', required: false },\n            { name: 'geneLabel', type: 'nominal', required: true },\n            { name: 'geneLabelColor', type: 'nominal', required: true },\n            { name: 'geneLabelFontSize', type: 'value', required: false },\n            { name: 'geneLabelStroke', type: 'value', required: false },\n            { name: 'geneLabelStrokeThickness', type: 'value', required: false },\n            { name: 'geneLabelOpacity', type: 'value', required: false },\n            { name: 'type', type: 'nominal', required: true } // either 'gene' or 'exon'\n        ],\n        mapping: [\n            {\n                dataTransform: [\n                    { type: 'filter', base: 'type', oneOf: ['gene'] },\n                    { type: 'filter', base: 'strandColor', oneOf: ['-'] }\n                ],\n                mark: 'triangleLeft',\n                x: { base: 'startPosition', type: 'genomic' },\n                size: { base: 'geneHeight', value: 12 },\n                row: { base: 'strandRow', type: 'nominal', domain: ['+', '-'] },\n                color: { base: 'strandColor', type: 'nominal', domain: ['+', '-'], range: ['blue', 'red'] },\n                opacity: { base: 'opacity', value: 0.4 },\n                style: { align: 'right' }\n            },\n            {\n                dataTransform: [\n                    { type: 'filter', base: 'type', oneOf: ['gene'] },\n                    { type: 'filter', base: 'strandColor', oneOf: ['+'] }\n                ],\n                mark: 'triangleRight',\n                x: { base: 'endPosition', type: 'genomic' },\n                size: { base: 'geneHeight', value: 12 },\n                row: { base: 'strandRow', type: 'nominal', domain: ['+', '-'] },\n                color: { base: 'strandColor', type: 'nominal', domain: ['+', '-'], range: ['blue', 'red'] },\n                opacity: { base: 'opacity', value: 0.4 },\n                style: { align: 'left' }\n            },\n            {\n                dataTransform: [{ type: 'filter', base: 'type', oneOf: ['exon'] }],\n                mark: 'rect',\n                x: { base: 'startPosition', type: 'genomic' },\n                xe: { base: 'endPosition', type: 'genomic' },\n                size: { base: 'geneHeight', value: 12 },\n                row: { base: 'strandRow', type: 'nominal', domain: ['+', '-'] },\n                color: { base: 'strandColor', type: 'nominal', domain: ['+', '-'], range: ['blue', 'red'] },\n                opacity: { base: 'opacity', value: 0.4 }\n            },\n            {\n                dataTransform: [\n                    { type: 'filter', base: 'type', oneOf: ['gene'] },\n                    { type: 'filter', base: 'strandColor', oneOf: ['+'] }\n                ],\n                mark: 'rect',\n                x: { base: 'startPosition', type: 'genomic' },\n                xe: { base: 'endPosition', type: 'genomic' },\n                row: { base: 'strandRow', type: 'nominal', domain: ['+', '-'] },\n                color: { base: 'strandColor', type: 'nominal', domain: ['+', '-'], range: ['blue', 'red'] },\n                opacity: { base: 'opacity', value: 0.4 },\n                size: { value: 3 }\n                // style: {\n                //     linePattern: { type: 'triangleRight', size: 5 }\n                // }\n            },\n            {\n                dataTransform: [\n                    { type: 'filter', base: 'type', oneOf: ['gene'] },\n                    { type: 'filter', base: 'strandColor', oneOf: ['-'] }\n                ],\n                mark: 'rect',\n                x: { base: 'startPosition', type: 'genomic' },\n                xe: { base: 'endPosition', type: 'genomic' },\n                row: { base: 'strandRow', type: 'nominal', domain: ['+', '-'] },\n                color: { base: 'strandColor', type: 'nominal', domain: ['+', '-'], range: ['blue', 'red'] },\n                opacity: { base: 'opacity', value: 0.4 },\n                size: { value: 3 }\n                // style: {\n                //     linePattern: { type: 'triangleLeft', size: 5 }\n                // }\n            },\n            {\n                dataTransform: [{ type: 'filter', base: 'type', oneOf: ['gene'] }],\n                mark: 'text',\n                text: { base: 'geneLabel', type: 'nominal' }, // TODO: add dy here\n                x: { base: 'startPosition', type: 'genomic' },\n                xe: { base: 'endPosition', type: 'genomic' },\n                row: { base: 'strandRow', type: 'nominal', domain: ['+', '-'] },\n                color: { base: 'geneLabelColor', type: 'nominal', domain: ['+', '-'], range: ['blue', 'red'] },\n                opacity: { base: 'opacity', value: 1 },\n                size: { base: 'geneLabelFontSize', value: 18 },\n                stroke: { base: 'geneLabelStroke', value: 'white' },\n                strokeWidth: { base: 'geneLabelStrokeThickness', value: 2 },\n                // TODO: how to redefine style from the users' side? (e.g., dy: -30)\n                visibility: [\n                    {\n                        operation: 'less-than',\n                        measure: 'width',\n                        threshold: '|xe-x|',\n                        transitionPadding: 10,\n                        target: 'mark'\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        name: 'ideogram',\n        channels: [\n            { name: 'startPosition', type: 'genomic', required: true },\n            { name: 'endPosition', type: 'genomic', required: true },\n            { name: 'chrHeight', type: 'value', required: false }, // https://eweitz.github.io/ideogram/\n            { name: 'name', type: 'nominal', required: true },\n            { name: 'stainBackgroundColor', type: 'nominal', required: true },\n            { name: 'stainLabelColor', type: 'nominal', required: true },\n            { name: 'stainStroke', type: 'value', required: false },\n            { name: 'stainStrokeWidth', type: 'value', required: false }\n        ],\n        mapping: [\n            {\n                mark: 'rect',\n                dataTransform: [{ type: 'filter', base: 'stainBackgroundColor', oneOf: ['acen'], not: true }],\n                color: {\n                    base: 'stainBackgroundColor',\n                    type: 'nominal',\n                    domain: ['gneg', 'gpos25', 'gpos50', 'gpos75', 'gpos100', 'gvar', 'acen'],\n                    range: ['white', 'lightgray', 'gray', 'gray', 'black', '#7B9CC8', '#DC4542']\n                },\n                size: { base: 'chrHeight', value: 18 },\n                x: { base: 'startPosition', type: 'genomic' },\n                xe: { base: 'endPosition', type: 'genomic' },\n                stroke: { base: 'stainStroke', value: 'gray' },\n                strokeWidth: { base: 'stainStrokeWidth', value: 0.3 }\n            },\n            {\n                mark: 'triangleRight',\n                dataTransform: [\n                    { type: 'filter', base: 'stainBackgroundColor', oneOf: ['acen'] },\n                    { type: 'filter', base: 'name', include: 'q' }\n                ],\n                color: {\n                    base: 'stainBackgroundColor',\n                    type: 'nominal',\n                    domain: ['gneg', 'gpos25', 'gpos50', 'gpos75', 'gpos100', 'gvar', 'acen'],\n                    range: ['white', 'lightgray', 'gray', 'gray', 'black', '#7B9CC8', '#DC4542']\n                },\n                size: { base: 'chrHeight', value: 18 },\n                x: { base: 'startPosition', type: 'genomic' },\n                xe: { base: 'endPosition', type: 'genomic' },\n                stroke: { base: 'stainStroke', value: 'gray' },\n                strokeWidth: { base: 'stainStrokeWidth', value: 0.3 }\n            },\n            {\n                mark: 'triangleLeft',\n                dataTransform: [\n                    { type: 'filter', base: 'stainBackgroundColor', oneOf: ['acen'] },\n                    { type: 'filter', base: 'name', include: 'p' }\n                ],\n                color: {\n                    base: 'stainBackgroundColor',\n                    type: 'nominal',\n                    domain: ['gneg', 'gpos25', 'gpos50', 'gpos75', 'gpos100', 'gvar', 'acen'],\n                    range: ['white', 'lightgray', 'gray', 'gray', 'black', '#7B9CC8', '#DC4542']\n                },\n                size: { base: 'chrHeight', value: 18 },\n                x: { base: 'startPosition', type: 'genomic' },\n                xe: { base: 'endPosition', type: 'genomic' },\n                stroke: { base: 'stainStroke', value: 'gray' },\n                strokeWidth: { base: 'stainStrokeWidth', value: 0.3 }\n            },\n            {\n                mark: 'text',\n                dataTransform: [{ type: 'filter', base: 'stainLabelColor', oneOf: ['acen'], not: true }],\n                color: {\n                    base: 'stainLabelColor',\n                    type: 'nominal',\n                    domain: ['gneg', 'gpos25', 'gpos50', 'gpos75', 'gpos100', 'gvar'],\n                    range: ['black', 'black', 'black', 'black', 'white', 'black']\n                },\n                text: { base: 'name', type: 'nominal' },\n                x: { base: 'startPosition', type: 'genomic' },\n                xe: { base: 'endPosition', type: 'genomic' },\n                visibility: [\n                    {\n                        operation: 'less-than',\n                        measure: 'width',\n                        threshold: '|xe-x|',\n                        transitionPadding: 10,\n                        target: 'mark'\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        name: 'sequence',\n        channels: [\n            { name: 'startPosition', type: 'genomic', required: true },\n            { name: 'endPosition', type: 'genomic', required: true },\n            { name: 'barLength', type: 'quantitative', required: true },\n            { name: 'baseBackground', type: 'nominal', required: true },\n            { name: 'baseLabelColor', type: 'nominal', required: true },\n            { name: 'baseLabelFontSize', type: 'value', required: false }\n        ],\n        mapping: [\n            {\n                mark: 'bar',\n                // x: { base: 'position', type: 'genomic' },\n                x: { base: 'startPosition', type: 'genomic' },\n                xe: { base: 'endPosition', type: 'genomic' },\n                y: { base: 'barLength', type: 'quantitative', axis: 'none' },\n                color: { base: 'baseBackground', type: 'nominal', domain: ['A', 'T', 'G', 'C'] }\n            },\n            {\n                dataTransform: [{ type: 'filter', base: 'barLength', oneOf: [0], not: true }],\n                mark: 'text',\n                x: { base: 'startPosition', type: 'genomic' },\n                xe: { base: 'endPosition', type: 'genomic' },\n                color: { base: 'baseLabelColor', type: 'nominal', domain: ['A', 'T', 'G', 'C'], range: ['white'] },\n                text: { base: 'baseBackground', type: 'nominal' },\n                size: { base: 'baseLabelFontSize', value: 18 },\n                visibility: [\n                    {\n                        operation: 'less-than',\n                        measure: 'width',\n                        threshold: '|xe-x|',\n                        transitionPadding: 30,\n                        target: 'mark'\n                    },\n                    {\n                        operation: 'LT',\n                        measure: 'zoomLevel',\n                        threshold: 10,\n                        target: 'track'\n                    }\n                ]\n            }\n        ]\n    }\n];\n\n/**\n * Replace track templetes to low-level gosling specs.\n * @param spec\n */\nexport function replaceTrackTemplates(spec: GoslingSpec, templates: TemplateTrackDef[]) {\n    traverseTracks(spec, (t, i, ts) => {\n        if (!IsTemplateTrack(t)) {\n            // If this is not a template track, no point to replace templates.\n            return;\n        }\n\n        const { template: name } = t;\n        const templateDef = templates.find(d => d.name === name);\n\n        /* Validation */\n        if (!templateDef) {\n            // No idea what this template is, so set a flag and remove it from the spec when compiling.\n            t._invalidTrack = true;\n            console.warn(`There is no track template named '${name}'`);\n            return;\n        }\n\n        let isValid = true;\n        templateDef.channels.forEach((d: CustomChannelDef) => {\n            if (d.required && (!t.encoding || !(d.name in t.encoding))) {\n                // Required channels are not defined\n                isValid = false;\n                console.warn(`A template spec ('${name}') does not contain a required channel, ${d.name}`);\n            }\n        });\n\n        if (!isValid) {\n            // The template spec is not valid for given template definition\n            t._invalidTrack = true;\n            return;\n        }\n\n        /* conversion */\n        const viewBase = JSON.parse(JSON.stringify(t));\n        if ('encoding' in viewBase) {\n            delete viewBase.encoding;\n        }\n        const convertedView: OverlaidTracks = {\n            ...viewBase,\n            alignment: 'overlay',\n            tracks: [],\n            width: t.width ?? 100,\n            height: t.height ?? 100\n        };\n        templateDef.mapping.forEach((singleTrackMappingDef: TemplateTrackMappingDef) => {\n            // Set required properties\n            const convertedTrack: Partial<Track> = {\n                data: t.data,\n                mark: singleTrackMappingDef.mark\n            };\n\n            // Handle data transform\n            const { dataTransform } = singleTrackMappingDef;\n            if (dataTransform) {\n                const newDataTransform: DataTransform[] = [];\n                dataTransform.map((dataTramsformMap: DataTransformWithBase) => {\n                    const baseChannelName = dataTramsformMap.base;\n                    if (\n                        baseChannelName &&\n                        t.encoding &&\n                        baseChannelName in t.encoding &&\n                        'field' in t.encoding[baseChannelName]\n                    ) {\n                        delete dataTramsformMap.base;\n                        (dataTramsformMap as any).field = (t.encoding[baseChannelName] as any).field;\n                        newDataTransform.push(dataTramsformMap as DataTransform);\n                    } else {\n                        // TODO: JUST ADD?\n                    }\n                });\n            }\n\n            // Handle encoding\n            const encodingSpec = t.encoding;\n            if (!encodingSpec) {\n                // This means we do not need to override anything, so use default encodings\n                Object.keys(singleTrackMappingDef)\n                    .filter(k => k !== 'mark')\n                    .forEach(channelKey => {\n                        // Iterate all channels\n                        const channelMap = JSON.parse(JSON.stringify((singleTrackMappingDef as any)[channelKey]));\n                        if ('base' in channelMap) {\n                            delete channelMap.base;\n                        }\n                        // @ts-ignore\n                        convertedTrack[channelKey as keyof TemplateTrackMappingDef] = channelMap;\n                    });\n            } else {\n                Object.keys(singleTrackMappingDef)\n                    .filter(k => k !== 'mark')\n                    .forEach(channelKey => {\n                        // Iterate all channels\n                        const channelMap = JSON.parse(JSON.stringify((singleTrackMappingDef as any)[channelKey]));\n                        if ('base' in channelMap) {\n                            const baseChannelName = channelMap.base;\n                            if (baseChannelName in encodingSpec) {\n                                // This means we need to override a user's spec for this channel\n                                const base = JSON.parse(JSON.stringify(encodingSpec[baseChannelName]));\n                                delete channelMap.base;\n                                const newChannelSpec = Object.assign(channelMap, JSON.parse(JSON.stringify(base)));\n                                convertedTrack[channelKey as keyof TemplateTrackMappingDef] = newChannelSpec;\n                            } else {\n                                // This means a user did not specify a optional custom channel, so just remove a `base` property.\n                                delete channelMap.base;\n                                convertedTrack[channelKey as keyof TemplateTrackMappingDef] = channelMap;\n                            }\n                        } else {\n                            // This means we use encoding that is constant.\n                            convertedTrack[channelKey as keyof TemplateTrackMappingDef] = channelMap;\n                        }\n                    });\n            }\n\n            convertedView.tracks.push(convertedTrack);\n        });\n\n        ts[i] = convertedView;\n    });\n\n    // DEBUG\n    // console.log('After replaceTrackTemplates()', JSON.parse(JSON.stringify(spec)));\n}\n","import type { ThemeDeep } from 'src/core/utils/theme';\n\nconst NOMINAL_COLOR = ['#E79F00', '#029F73', '#0072B2', '#CB7AA7', '#D45E00', '#57B4E9', '#EFE441' /*'#000000'*/];\n\nconst LightThemeMarkCommonStyle = {\n    color: NOMINAL_COLOR[0],\n    size: 1,\n    stroke: 'black',\n    strokeWidth: 0,\n    opacity: 1,\n    nominalColorRange: NOMINAL_COLOR,\n    quantitativeSizeRange: [2, 6] as [number, number]\n};\n\nexport const light: ThemeDeep = {\n    base: 'light',\n\n    root: {\n        background: 'white',\n        titleColor: 'black',\n        titleBackgroundColor: 'transparent',\n        titleFontSize: 18,\n        titleFontFamily: 'Arial',\n        titleAlign: 'left',\n        titleFontWeight: 'bold',\n        subtitleColor: 'gray',\n        subtitleBackgroundColor: 'transparent',\n        subtitleFontSize: 16,\n        subtitleFontFamily: 'Arial',\n        subtitleFontWeight: 'normal',\n        subtitleAlign: 'left',\n        showMousePosition: true,\n        mousePositionColor: '#000000'\n    },\n\n    track: {\n        background: 'transparent',\n        alternatingBackground: 'transparent',\n        titleColor: 'black',\n        titleBackground: 'white',\n        titleFontSize: 24,\n        titleAlign: 'left',\n        outline: 'black',\n        outlineWidth: 1\n    },\n\n    legend: {\n        position: 'top',\n        background: 'white',\n        backgroundOpacity: 0.7,\n        labelColor: 'black',\n        labelFontSize: 12,\n        labelFontWeight: 'normal',\n        labelFontFamily: 'Arial',\n        backgroundStroke: '#DBDBDB',\n        tickColor: 'black'\n    },\n\n    axis: {\n        tickColor: 'black',\n        labelColor: 'black',\n        labelMargin: 5,\n        labelExcludeChrPrefix: false,\n        labelFontSize: 12,\n        labelFontWeight: 'normal',\n        labelFontFamily: 'Arial',\n        baselineColor: 'black',\n        gridColor: '#E3E3E3',\n        gridStrokeWidth: 1,\n        gridStrokeType: 'solid',\n        gridStrokeDash: [4, 4]\n    },\n\n    markCommon: {\n        ...LightThemeMarkCommonStyle\n    },\n    point: {\n        ...LightThemeMarkCommonStyle,\n        size: 3\n    },\n    rect: {\n        ...LightThemeMarkCommonStyle\n    },\n    triangle: {\n        ...LightThemeMarkCommonStyle\n    },\n    area: {\n        ...LightThemeMarkCommonStyle\n    },\n    line: {\n        ...LightThemeMarkCommonStyle\n    },\n    bar: {\n        ...LightThemeMarkCommonStyle\n    },\n    rule: {\n        ...LightThemeMarkCommonStyle,\n        strokeWidth: 1\n    },\n    link: {\n        ...LightThemeMarkCommonStyle,\n        strokeWidth: 1\n    },\n    text: {\n        ...LightThemeMarkCommonStyle,\n        textAnchor: 'middle',\n        textFontWeight: 'normal'\n    },\n    brush: {\n        ...LightThemeMarkCommonStyle,\n        color: 'gray',\n        opacity: 0.3,\n        stroke: 'black',\n        strokeWidth: 1\n    }\n};\n","import type { ThemeDeep } from 'src/core/utils/theme';\n\nconst NOMINAL_COLOR = ['#E79F00', '#029F73', '#0072B2', '#CB7AA7', '#D45E00', '#57B4E9', '#EFE441' /*'#000000'*/];\n\nconst LightThemeMarkCommonStyle = {\n    color: NOMINAL_COLOR[0],\n    size: 1,\n    stroke: 'black',\n    strokeWidth: 0,\n    opacity: 1,\n    nominalColorRange: NOMINAL_COLOR,\n    quantitativeSizeRange: [2, 6] as [number, number]\n};\n\nconst DarkThemeMarkCommonStyle = { ...LightThemeMarkCommonStyle, stroke: 'white' };\n\nexport const dark: ThemeDeep = {\n    base: 'dark',\n\n    root: {\n        background: 'black',\n        titleColor: 'white',\n        titleBackgroundColor: 'transparent',\n        titleFontSize: 18,\n        titleFontFamily: 'Arial',\n        titleAlign: 'middle',\n        titleFontWeight: 'bold',\n        subtitleColor: 'lightgray',\n        subtitleBackgroundColor: 'transparent',\n        subtitleFontSize: 16,\n        subtitleFontFamily: 'Arial',\n        subtitleAlign: 'middle',\n        subtitleFontWeight: 'normal',\n        showMousePosition: true,\n        mousePositionColor: '#FFFFFF'\n    },\n\n    track: {\n        background: 'transparent',\n        alternatingBackground: 'transparent',\n        titleColor: 'white',\n        titleBackground: 'black',\n        titleFontSize: 18,\n        titleAlign: 'left',\n        outline: 'white',\n        outlineWidth: 1\n    },\n    legend: {\n        position: 'right',\n        background: 'black',\n        backgroundOpacity: 0.7,\n        labelColor: 'white',\n        labelFontSize: 12,\n        labelFontWeight: 'normal',\n        labelFontFamily: 'Arial',\n        backgroundStroke: '#DBDBDB',\n        tickColor: 'white'\n    },\n    axis: {\n        tickColor: 'white',\n        labelMargin: 5,\n        labelExcludeChrPrefix: false,\n        labelColor: 'white',\n        labelFontSize: 10,\n        labelFontWeight: 'normal',\n        labelFontFamily: 'Arial',\n        baselineColor: 'white',\n        gridColor: 'gray',\n        gridStrokeWidth: 1,\n        gridStrokeType: 'solid',\n        gridStrokeDash: [4, 4]\n    },\n\n    markCommon: {\n        ...DarkThemeMarkCommonStyle\n    },\n    point: {\n        ...DarkThemeMarkCommonStyle,\n        size: 3\n    },\n    rect: {\n        ...DarkThemeMarkCommonStyle\n    },\n    triangle: {\n        ...DarkThemeMarkCommonStyle\n    },\n    area: {\n        ...DarkThemeMarkCommonStyle\n    },\n    line: {\n        ...DarkThemeMarkCommonStyle\n    },\n    bar: {\n        ...DarkThemeMarkCommonStyle\n    },\n    rule: {\n        ...DarkThemeMarkCommonStyle,\n        strokeWidth: 1\n    },\n    link: {\n        ...DarkThemeMarkCommonStyle,\n        strokeWidth: 1\n    },\n    text: {\n        ...DarkThemeMarkCommonStyle,\n        textAnchor: 'middle',\n        textFontWeight: 'normal'\n    },\n    brush: {\n        ...DarkThemeMarkCommonStyle,\n        color: 'lightgray',\n        opacity: 0.3,\n        stroke: 'white',\n        strokeWidth: 1\n    }\n};\n","import type { ThemeDeep } from 'src/core/utils/theme';\n\nconst NOMINAL_COLOR = ['#D19000', '#008F67', '#005F96', '#B86E97', '#B55100', '#4793BF', '#C9C03'];\n\nconst WarmThemeMarkCommonStyle = {\n    color: NOMINAL_COLOR[0],\n    size: 1,\n    stroke: '#3C3C3C',\n    strokeWidth: 0,\n    opacity: 1,\n    nominalColorRange: NOMINAL_COLOR,\n    quantitativeSizeRange: [2, 6] as [number, number]\n};\n\nexport const warm: ThemeDeep = {\n    base: 'warm',\n\n    root: {\n        background: '#FFF8E8',\n        titleColor: '#3C3C3C',\n        subtitleColor: 'gray',\n        showMousePosition: true,\n        mousePositionColor: '#3C3C3C'\n    },\n\n    track: {\n        titleColor: '#3C3C3C',\n        titleBackground: '#FFF8E8',\n        outline: '#3C3C3C',\n        outlineWidth: 1\n    },\n\n    legend: {\n        background: '#FFF8E8',\n        backgroundOpacity: 0.7,\n        labelColor: '#3C3C3C',\n        backgroundStroke: '#3C3C3C',\n        tickColor: '3C3C3C'\n    },\n\n    axis: {\n        tickColor: '#3C3C3C',\n        labelColor: '#3C3C3C',\n        baselineColor: '#3C3C3C',\n        gridColor: '#E3E3E3',\n        gridStrokeWidth: 1\n    },\n\n    markCommon: {\n        ...WarmThemeMarkCommonStyle\n    },\n    point: {\n        ...WarmThemeMarkCommonStyle,\n        size: 3\n    },\n    rect: {\n        ...WarmThemeMarkCommonStyle\n    },\n    triangle: {\n        ...WarmThemeMarkCommonStyle\n    },\n    area: {\n        ...WarmThemeMarkCommonStyle\n    },\n    line: {\n        ...WarmThemeMarkCommonStyle\n    },\n    bar: {\n        ...WarmThemeMarkCommonStyle\n    },\n    rule: {\n        ...WarmThemeMarkCommonStyle,\n        strokeWidth: 1\n    },\n    link: {\n        ...WarmThemeMarkCommonStyle,\n        strokeWidth: 1\n    },\n    text: {\n        ...WarmThemeMarkCommonStyle,\n        textAnchor: 'middle',\n        textFontWeight: 'normal'\n    },\n    brush: {\n        ...WarmThemeMarkCommonStyle,\n        color: 'lightgray',\n        opacity: 0.3,\n        stroke: '#3C3C3C',\n        strokeWidth: 1\n    }\n};\n","import type { ThemeDeep } from 'src/core/utils/theme';\n\nconst NOMINAL_COLOR = ['#F66A62', '#05B230', '#5692FF', '#D764D6', '#86E9D4', '#6E6AD7', '#FFFB00'];\n\nconst GgplotThemeMarkCommonStyle = {\n    color: NOMINAL_COLOR[0],\n    size: 1,\n    stroke: 'black',\n    strokeWidth: 0,\n    opacity: 1,\n    nominalColorRange: NOMINAL_COLOR,\n    quantitativeSizeRange: [2, 6] as [number, number]\n};\n\nexport const ggplot: ThemeDeep = {\n    base: 'ggplot',\n\n    root: {\n        background: 'white',\n        titleColor: 'black',\n        titleFontSize: 18,\n        titleFontFamily: 'Helvetica',\n        titleAlign: 'middle',\n        titleFontWeight: 'bold',\n        titleBackgroundColor: 'white',\n        subtitleColor: 'gray',\n        subtitleFontSize: 14,\n        subtitleFontFamily: 'Helvetica',\n        subtitleAlign: 'middle',\n        subtitleFontWeight: 'light',\n        subtitleBackgroundColor: 'white',\n        showMousePosition: true,\n        mousePositionColor: 'black'\n    },\n\n    track: {\n        background: '#e8e8e8',\n        alternatingBackground: '#d1d1d1',\n        titleColor: 'black',\n        titleBackground: 'white',\n        //titleFontSize:'',\n        //titleAlign:'',\n        outline: 'black',\n        outlineWidth: 2\n    },\n\n    legend: {\n        position: 'right',\n        background: '#e8e8e8',\n        backgroundOpacity: 1,\n        labelColor: 'black',\n        backgroundStroke: '#e8e8e8',\n        tickColor: 'white'\n        //,labelFontSize: '',\n        //labelFontWeight: '',\n        //labelFontFamily: ''\n    },\n\n    axis: {\n        tickColor: 'white',\n        labelColor: 'black',\n        //labelFontSize: '',\n        //labelFontWeight: '',\n        //labelFontFamily: '',\n        baselineColor: '#e8e8e8',\n        gridColor: 'white',\n        gridStrokeWidth: 2\n        //,gridStrokeType: '',\n        //gridStrokeDash:\n    },\n\n    markCommon: {\n        ...GgplotThemeMarkCommonStyle\n    },\n    point: {\n        ...GgplotThemeMarkCommonStyle,\n        size: 3\n    },\n    rect: {\n        ...GgplotThemeMarkCommonStyle\n    },\n    triangle: {\n        ...GgplotThemeMarkCommonStyle\n    },\n    area: {\n        ...GgplotThemeMarkCommonStyle\n    },\n    line: {\n        ...GgplotThemeMarkCommonStyle\n    },\n    bar: {\n        ...GgplotThemeMarkCommonStyle\n    },\n    rule: {\n        ...GgplotThemeMarkCommonStyle,\n        strokeWidth: 1\n    },\n    link: {\n        ...GgplotThemeMarkCommonStyle,\n        strokeWidth: 1\n    },\n    text: {\n        ...GgplotThemeMarkCommonStyle,\n        textAnchor: 'middle',\n        textFontWeight: 'bold'\n    },\n    brush: {\n        ...GgplotThemeMarkCommonStyle,\n        color: 'black',\n        opacity: 0.3,\n        stroke: 'black',\n        strokeWidth: 1\n    }\n};\n","import type { ThemeDeep } from 'src/core/utils/theme';\n\nconst NOMINAL_COLOR = ['#37E649', '#ED2D44', '#AEAFEA', '#EBAEAE', '#CE7B3D', '#8743E0', '#5233F0'];\n\nconst IGVThemeMarkCommonStyle = {\n    color: NOMINAL_COLOR[0],\n    size: 1,\n    stroke: 'black',\n    strokeWidth: 0,\n    opacity: 1,\n    nominalColorRange: NOMINAL_COLOR,\n    quantitativeSizeRange: [2, 6] as [number, number]\n};\n\nexport const igv: ThemeDeep = {\n    base: 'igv',\n\n    root: {\n        background: 'white',\n        titleColor: 'white',\n        //titleFontSize:'',\n        //titleFontFamily:'',\n        titleAlign: 'left',\n        titleFontWeight: 'bold',\n        titleBackgroundColor: '#5f5f5f',\n        subtitleColor: '#3b3b3b',\n        //subtitleFontSize:'',\n        //subtitleFontFamily:'',\n        subtitleAlign: 'left',\n        subtitleFontWeight: 'bold',\n        subtitleBackgroundColor: '#c4c4c4',\n        showMousePosition: true,\n        mousePositionColor: 'black'\n    },\n\n    track: {\n        background: 'white',\n        alternatingBackground: '#e8e8e8',\n        titleColor: 'white',\n        titleBackground: '#5F5F5F',\n        //titleFontSize:'',\n        //titleAlign:'',\n        outline: '#5F5F5F',\n        outlineWidth: 1\n    },\n\n    legend: {\n        position: 'top',\n        background: 'white',\n        backgroundOpacity: 1,\n        labelColor: 'black',\n        //labelFontSize: '',\n        //labelFontWeight: '',\n        //labelFontFamily: '',\n        backgroundStroke: 'black',\n        tickColor: 'black'\n    },\n\n    axis: {\n        tickColor: 'black',\n        labelColor: 'black',\n        //labelFontSize: '',\n        //labelFontWeight: '',\n        //labelFontFamily: '',\n        //baselineColor: '#E6E6E6',\n        baselineColor: 'white',\n        gridColor: 'transparent',\n        gridStrokeWidth: 0\n        //gridStrokeType: '',\n        //gridStrokeDash:\n    },\n\n    markCommon: {\n        ...IGVThemeMarkCommonStyle\n    },\n    point: {\n        ...IGVThemeMarkCommonStyle,\n        size: 3\n    },\n    rect: {\n        ...IGVThemeMarkCommonStyle\n    },\n    triangle: {\n        ...IGVThemeMarkCommonStyle\n    },\n    area: {\n        ...IGVThemeMarkCommonStyle\n    },\n    line: {\n        ...IGVThemeMarkCommonStyle\n    },\n    bar: {\n        ...IGVThemeMarkCommonStyle\n    },\n    rule: {\n        ...IGVThemeMarkCommonStyle,\n        strokeWidth: 1\n    },\n    link: {\n        ...IGVThemeMarkCommonStyle,\n        strokeWidth: 1\n    },\n    text: {\n        ...IGVThemeMarkCommonStyle,\n        textAnchor: 'middle',\n        textFontWeight: 'bold'\n    },\n    brush: {\n        ...IGVThemeMarkCommonStyle,\n        color: 'white',\n        opacity: 0.3,\n        stroke: 'black',\n        strokeWidth: 1\n    }\n};\n","import type { ThemeDeep } from 'src/core/utils/theme';\n\nconst NOMINAL_COLOR = [\n    '#CD9B1D',\n    '#8A668B',\n    '#40E0D0',\n    '#FF6969',\n    '#666666',\n    '#FAC902',\n    '#FE0000',\n    '#CC96CD',\n    '#D9D9D9' /*'#000000'*/\n];\n\nconst EnsemblThemeMarkCommonStyle = {\n    color: NOMINAL_COLOR[0],\n    size: 1,\n    stroke: 'black',\n    strokeWidth: 0,\n    opacity: 1,\n    nominalColorRange: NOMINAL_COLOR,\n    quantitativeSizeRange: [2, 6] as [number, number]\n};\n\nexport const ensembl: ThemeDeep = {\n    base: 'ensembl',\n\n    root: {\n        background: 'white',\n        titleColor: '#494949',\n        titleFontSize: 24,\n        titleFontFamily: 'GGX88',\n        titleAlign: 'left',\n        titleFontWeight: 'bold',\n        titleBackgroundColor: 'white',\n        subtitleColor: 'white',\n        subtitleFontSize: 19,\n        subtitleFontFamily: 'GGX88',\n        subtitleAlign: 'left',\n        subtitleFontWeight: 'normal',\n        subtitleBackgroundColor: '#7B8BAF',\n        mousePositionColor: '#FE0000',\n        showMousePosition: true\n    },\n\n    track: {\n        background: 'white',\n        alternatingBackground: '#fffdf7',\n        titleColor: 'black',\n        titleBackground: 'white',\n        titleAlign: 'left',\n        outline: '#7B8BAF',\n        outlineWidth: 2\n    },\n\n    legend: {\n        tickColor: 'black',\n        labelColor: 'black',\n        //labelFontSize: ,\n        labelFontWeight: 'normal',\n        labelFontFamily: 'GGX88',\n        background: 'white',\n        backgroundOpacity: 2,\n        backgroundStroke: 'lightgray'\n    },\n\n    axis: {\n        tickColor: 'black',\n        labelColor: 'black',\n        //labelFontSize: ,\n        //labelFontWeight: '',\n        labelFontFamily: 'GGX88',\n        baselineColor: 'black',\n        gridColor: '#7B8BAF',\n        gridStrokeWidth: 2\n        //gridStrokeType: '',\n        //gridStrokeDash:\n    },\n\n    markCommon: {\n        ...EnsemblThemeMarkCommonStyle\n    },\n    point: {\n        ...EnsemblThemeMarkCommonStyle,\n        /*color: NOMINAL_COLOR[0],\n        stroke: 'black',\n        strokeWidth: 0,\n        opacity: 1,\n        nominalColorRange: NOMINAL_COLOR,\n        quantitativeSizeRange: [2, 6]*/\n        size: 3\n    },\n    rect: {\n        ...EnsemblThemeMarkCommonStyle\n        /*color: NOMINAL_COLOR[0],\n        size: 1,\n        stroke: 'black',\n        strokeWidth: 0,\n        opacity: 1,\n        nominalColorRange: NOMINAL_COLOR,\n        quantitativeSizeRange: [2, 6]*/\n    },\n    triangle: {\n        ...EnsemblThemeMarkCommonStyle\n        /*color: NOMINAL_COLOR[0],\n        size: 1,\n        stroke: 'black',\n        strokeWidth: 0,\n        opacity: 1,\n        nominalColorRange: NOMINAL_COLOR,\n        quantitativeSizeRange: [2, 6]*/\n    },\n    area: {\n        ...EnsemblThemeMarkCommonStyle\n        /*color: NOMINAL_COLOR[0],\n        size: 1,\n        stroke: 'black',\n        strokeWidth: 0,\n        opacity: 1,\n        nominalColorRange: NOMINAL_COLOR,\n        quantitativeSizeRange: [2, 6]*/\n    },\n    line: {\n        ...EnsemblThemeMarkCommonStyle\n        /*color: NOMINAL_COLOR[0],\n        size: 1,\n        stroke: 'black',\n        strokeWidth: 0,\n        opacity: 1,\n        nominalColorRange: NOMINAL_COLOR,\n        quantitativeSizeRange: [2, 6]*/\n    },\n    bar: {\n        ...EnsemblThemeMarkCommonStyle\n        /*color: NOMINAL_COLOR[0],\n        size: 1,\n        stroke: 'black',\n        strokeWidth: 0,\n        opacity: 1,\n        nominalColorRange: NOMINAL_COLOR,\n        quantitativeSizeRange: [2, 6]*/\n    },\n    rule: {\n        ...EnsemblThemeMarkCommonStyle,\n        /*color: NOMINAL_COLOR[0],\n        size: 1,\n        stroke: 'black',\n        opacity: 1,\n        nominalColorRange: NOMINAL_COLOR,\n        quantitativeSizeRange: [2, 6]*/\n        strokeWidth: 1\n    },\n    link: {\n        ...EnsemblThemeMarkCommonStyle,\n        /*color: NOMINAL_COLOR[0],\n        size: 1,\n        stroke: 'black',\n        opacity: 1,\n        nominalColorRange: NOMINAL_COLOR,\n        quantitativeSizeRange: [2, 6]*/\n        strokeWidth: 1\n    },\n    text: {\n        ...EnsemblThemeMarkCommonStyle,\n        /*color: NOMINAL_COLOR[0],\n        size: 1,\n        stroke: 'black',\n        strokeWidth: 0,\n        opacity: 1,\n        nominalColorRange: NOMINAL_COLOR,\n        quantitativeSizeRange: [2, 6]*/\n        textAnchor: 'middle',\n        textFontWeight: 'normal'\n    },\n    brush: {\n        ...EnsemblThemeMarkCommonStyle,\n        /*size: 1,\n        nominalColorRange: NOMINAL_COLOR,\n        quantitativeSizeRange: [2, 6]*/\n        color: 'gray',\n        opacity: 0.3,\n        stroke: 'black',\n        strokeWidth: 1\n    }\n};\n","import type { ThemeDeep } from 'src/core/utils/theme';\n\nconst NOMINAL_COLOR = ['#3A62FE', '#F85353', '#3A62FE', '#F85353', '#DCA326', '#03BF06', '#BABABA' /*'#000000'*/];\n\nconst JBrowseThemeMarkCommonStyle = {\n    color: NOMINAL_COLOR[0],\n    size: 1,\n    stroke: 'black',\n    strokeWidth: 0,\n    opacity: 1,\n    nominalColorRange: NOMINAL_COLOR,\n    quantitativeSizeRange: [2, 6] as [number, number]\n};\n\nexport const jbrowse: ThemeDeep = {\n    base: 'jbrowse',\n\n    root: {\n        background: 'white',\n        titleColor: 'white',\n        titleFontSize: 20,\n        titleFontFamily: 'Roboto',\n        titleAlign: 'middle',\n        titleFontWeight: 'normal',\n        titleBackgroundColor: '#0b243f',\n        subtitleColor: 'white',\n        subtitleFontSize: 18,\n        subtitleFontFamily: 'Roboto',\n        subtitleAlign: 'middle',\n        subtitleFontWeight: 'normal',\n        subtitleBackgroundColor: '#732162',\n        showMousePosition: true,\n        mousePositionColor: '#000000'\n    },\n\n    track: {\n        background: 'white',\n        alternatingBackground: 'white',\n        //titleFontSize:'',\n        titleAlign: 'middle',\n        titleColor: 'white',\n        titleBackground: '#0B243F',\n        outline: 'black',\n        outlineWidth: 1\n    },\n\n    legend: {\n        position: 'top',\n        background: 'white',\n        backgroundOpacity: 0.7,\n        labelColor: '#DCA326',\n        //labelFontSize: '',\n        labelFontWeight: 'bold',\n        labelFontFamily: 'Roboto',\n        backgroundStroke: '#black',\n        tickColor: 'black'\n    },\n\n    axis: {\n        tickColor: 'black',\n        labelColor: '#DCA326',\n        //labelFontSize: '',\n        labelFontWeight: 'bold',\n        labelFontFamily: 'Roboto',\n        baselineColor: 'black',\n        gridColor: '#c5d5d9',\n        gridStrokeWidth: 1 //,\n        //gridStrokeType: '',\n        //gridStrokeDash:\n    },\n\n    markCommon: {\n        ...JBrowseThemeMarkCommonStyle\n    },\n    point: {\n        ...JBrowseThemeMarkCommonStyle,\n        size: 3\n    },\n    rect: {\n        ...JBrowseThemeMarkCommonStyle\n    },\n    triangle: {\n        ...JBrowseThemeMarkCommonStyle\n    },\n    area: {\n        ...JBrowseThemeMarkCommonStyle\n    },\n    line: {\n        ...JBrowseThemeMarkCommonStyle\n    },\n    bar: {\n        ...JBrowseThemeMarkCommonStyle\n    },\n    rule: {\n        ...JBrowseThemeMarkCommonStyle,\n        strokeWidth: 1\n    },\n    link: {\n        ...JBrowseThemeMarkCommonStyle,\n        strokeWidth: 1\n    },\n    text: {\n        ...JBrowseThemeMarkCommonStyle,\n        textAnchor: 'middle',\n        textFontWeight: 'normal'\n    },\n    brush: {\n        ...JBrowseThemeMarkCommonStyle,\n        color: '#c5d5d9',\n        opacity: 0.3,\n        stroke: 'black',\n        strokeWidth: 1\n    }\n};\n","import type { ThemeDeep } from 'src/core/utils/theme';\n\nconst NOMINAL_COLOR = [\n    '#3A5FCD',\n    '#FFA54E',\n    '#8FBC8F',\n    '#B6709B',\n    '#EE6A50',\n    '#CCB79E',\n    '#DADA8F',\n    '#00CDCC',\n    '#EED5D2',\n    '#CD8EDD',\n    '#9ACD31',\n    '#D1BEA8',\n    '#FFB6C0' /*'#000000'*/\n];\n\nconst UCSCThemeMarkCommonStyle = {\n    color: NOMINAL_COLOR[0],\n    size: 1,\n    stroke: 'black',\n    strokeWidth: 0,\n    opacity: 1,\n    nominalColorRange: NOMINAL_COLOR,\n    quantitativeSizeRange: [2, 6] as [number, number]\n};\n\nexport const ucsc: ThemeDeep = {\n    base: 'ucsc',\n\n    root: {\n        background: 'white',\n        titleColor: 'white',\n        titleFontSize: 22,\n        //titleFontFamily:'',\n        titleAlign: 'middle',\n        titleFontWeight: 'bold',\n        titleBackgroundColor: '#00457c',\n        subtitleColor: 'black',\n        //subtitleFontSize:'',\n        //subtitleFontFamily:'',\n        subtitleAlign: 'middle',\n        subtitleFontWeight: 'bold',\n        subtitleBackgroundColor: 'white',\n        showMousePosition: true,\n        mousePositionColor: '#FE0000'\n    },\n\n    track: {\n        background: 'white',\n        alternatingBackground: '#e3f7fc',\n        titleColor: '#3A5FCD',\n        titleBackground: 'white',\n        //titleFontSize:'',\n        //titleAlign:'',\n        outline: 'black',\n        outlineWidth: 1\n    },\n\n    legend: {\n        position: 'top',\n        background: 'white',\n        backgroundOpacity: 0.7,\n        labelColor: 'black',\n        //labelFontSize: '',\n        labelFontWeight: 'bold',\n        //labelFontFamily: '',\n        backgroundStroke: '#DBDBDB',\n        tickColor: 'black'\n    },\n\n    axis: {\n        tickColor: 'black',\n        labelColor: '#3A5FCD',\n        //labelFontSize: '',\n        labelFontWeight: 'bold',\n        //labelFontFamily: '',\n        baselineColor: 'black',\n        gridColor: '#E3E3E3',\n        gridStrokeWidth: 1 //,\n        //gridStrokeType: '',\n        //gridStrokeDash:\n    },\n\n    markCommon: {\n        ...UCSCThemeMarkCommonStyle\n    },\n    point: {\n        ...UCSCThemeMarkCommonStyle,\n        size: 3\n    },\n    rect: {\n        ...UCSCThemeMarkCommonStyle\n    },\n    triangle: {\n        ...UCSCThemeMarkCommonStyle\n    },\n    area: {\n        ...UCSCThemeMarkCommonStyle\n    },\n    line: {\n        ...UCSCThemeMarkCommonStyle\n    },\n    bar: {\n        ...UCSCThemeMarkCommonStyle\n    },\n    rule: {\n        ...UCSCThemeMarkCommonStyle,\n        strokeWidth: 1\n    },\n    link: {\n        ...UCSCThemeMarkCommonStyle,\n        strokeWidth: 1\n    },\n    text: {\n        ...UCSCThemeMarkCommonStyle,\n        textAnchor: 'middle',\n        textFontWeight: 'normal'\n    },\n    brush: {\n        ...UCSCThemeMarkCommonStyle,\n        color: 'gray',\n        opacity: 0.3,\n        stroke: 'black',\n        strokeWidth: 1\n    }\n};\n","import type { ThemeDeep } from 'src/core/utils/theme';\n\nconst NOMINAL_COLOR = [\n    '#6E12AC',\n    '#15C250',\n    '#E70FB1',\n    '#FF8E55',\n    '#A3B8F3',\n    '#DE5E59',\n    '#77AAAA',\n    '#F5CCCA' /*'#000000'*/\n];\n\nconst WashUThemeMarkCommonStyle = {\n    color: NOMINAL_COLOR[0],\n    size: 1,\n    stroke: 'black',\n    strokeWidth: 0,\n    opacity: 1,\n    nominalColorRange: NOMINAL_COLOR,\n    quantitativeSizeRange: [2, 6] as [number, number]\n};\n\nexport const washu: ThemeDeep = {\n    base: 'washu',\n\n    root: {\n        background: 'white',\n        titleColor: 'gray',\n        //titleFontSize:16,\n        //titleFontFamily:'',\n        titleAlign: 'left',\n        titleFontWeight: 'normal',\n        titleBackgroundColor: 'white',\n        subtitleColor: 'lightgray',\n        //subtitleFontSize:12,\n        //subtitleFontFamily:'',\n        subtitleAlign: 'left',\n        subtitleFontWeight: 'light',\n        subtitleBackgroundColor: 'white',\n        showMousePosition: true,\n        mousePositionColor: '#000000'\n    },\n\n    track: {\n        background: 'white',\n        //alternatingBackground:'',\n        titleColor: 'gray',\n        titleBackground: 'white',\n        //titleFontSize:'',\n        titleAlign: 'left',\n        outline: 'gray',\n        outlineWidth: 1\n    },\n\n    legend: {\n        background: 'white',\n        backgroundOpacity: 0.5,\n        labelColor: 'gray',\n        //labelFontSize: '',\n        labelFontWeight: 'light',\n        //labelFontFamily: '',\n        backgroundStroke: '#DBDBDB',\n        tickColor: 'gray'\n    },\n\n    axis: {\n        tickColor: 'lightgray',\n        labelColor: 'gray',\n        //labelFontSize: '',\n        labelFontWeight: 'light',\n        //labelFontFamily: '',\n        baselineColor: 'gray',\n        gridColor: 'transparent',\n        gridStrokeWidth: 0 //,\n        //gridStrokeType: '',\n        //gridStrokeDash:\n    },\n\n    markCommon: {\n        ...WashUThemeMarkCommonStyle\n    },\n    point: {\n        ...WashUThemeMarkCommonStyle,\n        size: 3\n    },\n    rect: {\n        ...WashUThemeMarkCommonStyle\n    },\n    triangle: {\n        ...WashUThemeMarkCommonStyle\n    },\n    area: {\n        ...WashUThemeMarkCommonStyle\n    },\n    line: {\n        ...WashUThemeMarkCommonStyle\n    },\n    bar: {\n        ...WashUThemeMarkCommonStyle\n    },\n    rule: {\n        ...WashUThemeMarkCommonStyle,\n        strokeWidth: 1\n    },\n    link: {\n        ...WashUThemeMarkCommonStyle,\n        strokeWidth: 1\n    },\n    text: {\n        ...WashUThemeMarkCommonStyle,\n        textAnchor: 'middle',\n        textFontWeight: 'normal'\n    },\n    brush: {\n        ...WashUThemeMarkCommonStyle,\n        color: 'gray',\n        opacity: 0.3,\n        stroke: 'gray',\n        strokeWidth: 1\n    }\n};\n","import type { ThemeDeep } from 'src/core/utils/theme';\n\nconst NOMINAL_COLOR = [\n    '#ED7D31',\n    '#4472C4',\n    '#FFC207',\n    '#76AE4F',\n    '#9E480E',\n    '#A5A5A5',\n    '#4472C4',\n    '#264378',\n    '#76AE4F',\n    '#5B9CD5' /*'#000000'*/\n];\n\nconst ExcelThemeMarkCommonStyle = {\n    color: NOMINAL_COLOR[0],\n    size: 1,\n    stroke: '#5A5A5A',\n    strokeWidth: 0,\n    opacity: 1,\n    nominalColorRange: NOMINAL_COLOR,\n    quantitativeSizeRange: [2, 6] as [number, number]\n};\n\nexport const excel: ThemeDeep = {\n    base: 'excel',\n\n    root: {\n        background: 'white',\n        titleColor: '#5A5A5A',\n        titleFontSize: 30,\n        titleFontFamily: 'Calibri',\n        titleAlign: 'middle',\n        titleFontWeight: 'bold',\n        titleBackgroundColor: 'white',\n        subtitleColor: '#5A5A5A',\n        subtitleFontSize: 22,\n        subtitleFontFamily: 'Calibri',\n        subtitleAlign: 'middle',\n        subtitleFontWeight: 'bold',\n        subtitleBackgroundColor: 'white',\n        showMousePosition: true,\n        mousePositionColor: '#000000'\n    },\n\n    track: {\n        background: 'white',\n        alternatingBackground: '#f5f5f5',\n        titleColor: '#5A5A5A',\n        titleBackground: 'white',\n        //titleFontSize:'',\n        //titleAlign:'',\n        outline: '#5A5A5A',\n        outlineWidth: 1\n    },\n\n    legend: {\n        position: 'right',\n        tickColor: '#5A5A5A',\n        labelColor: '#5A5A5A',\n        labelFontSize: 12,\n        labelFontWeight: 'bold',\n        labelFontFamily: 'Calibri',\n        background: 'white',\n        backgroundOpacity: 0.7,\n        backgroundStroke: '#5A5A5A'\n    },\n\n    axis: {\n        tickColor: '#5A5A5A',\n        labelColor: '#5A5A5A',\n        //labelFontSize: '',\n        //labelFontWeight: '',\n        labelFontFamily: 'Calibri',\n        baselineColor: '#5A5A5A',\n        gridColor: '#5A5A5A',\n        gridStrokeWidth: 1\n        //gridStrokeType: '',\n        //gridStrokeDash:\n    },\n\n    markCommon: {\n        ...ExcelThemeMarkCommonStyle\n    },\n    point: {\n        ...ExcelThemeMarkCommonStyle,\n        size: 3\n    },\n    rect: {\n        ...ExcelThemeMarkCommonStyle\n    },\n    triangle: {\n        ...ExcelThemeMarkCommonStyle\n    },\n    area: {\n        ...ExcelThemeMarkCommonStyle\n    },\n    line: {\n        ...ExcelThemeMarkCommonStyle\n    },\n    bar: {\n        ...ExcelThemeMarkCommonStyle\n    },\n    rule: {\n        ...ExcelThemeMarkCommonStyle,\n        strokeWidth: 1\n    },\n    link: {\n        ...ExcelThemeMarkCommonStyle,\n        strokeWidth: 1\n    },\n    text: {\n        ...ExcelThemeMarkCommonStyle,\n        textAnchor: 'middle',\n        textFontWeight: 'normal'\n    },\n    brush: {\n        ...ExcelThemeMarkCommonStyle,\n        color: '#5A5A5A',\n        opacity: 0.3,\n        stroke: '#5A5A5A',\n        strokeWidth: 1\n    }\n};\n","import type { ThemeDeep } from 'src/core/utils/theme';\n\nconst NOMINAL_COLOR = ['#4185f4', '#DB4437', '#F4B400', '#0D9D58', '#AA30C3', '#FF6E02', '#CBC74C' /*'#000000'*/];\n\nconst GoogleThemeMarkCommonStyle = {\n    color: NOMINAL_COLOR[0],\n    size: 2,\n    stroke: 'black',\n    strokeWidth: 0.3,\n    opacity: 1,\n    nominalColorRange: NOMINAL_COLOR,\n    quantitativeSizeRange: [2, 6] as [number, number]\n};\n\nexport const google: ThemeDeep = {\n    base: 'google',\n\n    root: {\n        background: 'white',\n        titleColor: '#454545',\n        titleFontSize: 20,\n        titleFontFamily: 'Arial',\n        titleAlign: 'left',\n        titleFontWeight: 'normal',\n        titleBackgroundColor: 'white',\n        subtitleColor: '#7d7d7d',\n        subtitleFontSize: 16,\n        subtitleFontFamily: 'Arial',\n        subtitleAlign: 'left',\n        subtitleFontWeight: 'light',\n        subtitleBackgroundColor: 'white',\n        showMousePosition: true,\n        mousePositionColor: '#000000'\n    },\n\n    track: {\n        background: 'white',\n        alternatingBackground: '#f5f5f5',\n        titleColor: '#e8e8e8',\n        titleBackground: 'white',\n        titleFontSize: 12,\n        titleAlign: 'left',\n        outline: 'black',\n        outlineWidth: 1\n    },\n\n    legend: {\n        position: 'right',\n        background: 'white',\n        backgroundOpacity: 1,\n        labelColor: 'black',\n        labelFontSize: 12,\n        labelFontWeight: 'normal',\n        labelFontFamily: 'Arial',\n        backgroundStroke: 'black',\n        tickColor: 'black'\n    },\n\n    axis: {\n        labelFontSize: 12,\n        labelFontWeight: 'normal',\n        labelFontFamily: 'Arial',\n        tickColor: 'black',\n        labelColor: 'black',\n        baselineColor: 'black',\n        gridColor: 'black',\n        gridStrokeWidth: 1 //,\n        //gridStrokeType: '',\n        //gridStrokeDash:\n    },\n\n    markCommon: {\n        ...GoogleThemeMarkCommonStyle\n    },\n    point: {\n        ...GoogleThemeMarkCommonStyle,\n        size: 3\n    },\n    rect: {\n        ...GoogleThemeMarkCommonStyle\n    },\n    triangle: {\n        ...GoogleThemeMarkCommonStyle\n    },\n    area: {\n        ...GoogleThemeMarkCommonStyle\n    },\n    line: {\n        ...GoogleThemeMarkCommonStyle\n    },\n    bar: {\n        ...GoogleThemeMarkCommonStyle\n    },\n    rule: {\n        ...GoogleThemeMarkCommonStyle,\n        strokeWidth: 1\n    },\n    link: {\n        ...GoogleThemeMarkCommonStyle,\n        strokeWidth: 1\n    },\n    text: {\n        ...GoogleThemeMarkCommonStyle,\n        textAnchor: 'middle',\n        textFontWeight: 'normal'\n    },\n    brush: {\n        ...GoogleThemeMarkCommonStyle,\n        color: '#999999',\n        opacity: 0.3,\n        stroke: 'black',\n        strokeWidth: 0.7\n    }\n};\n","// Individual Themes\n// Based on https://github.com/gosling-lang/gosling.js/blob/58121b0d536e34c02cea9b2c046cc9efa734fe94/src/core/utils/theme.ts#L5\nimport { light } from './light';\nimport { dark } from './dark';\nimport { warm } from './warm';\nimport { ggplot } from './ggplot';\nimport { igv } from './igv';\nimport { ensembl } from './ensembl';\nimport { jbrowse } from './jbrowse';\nimport { ucsc } from './ucsc';\nimport { washu } from './washu';\nimport { excel } from './excel';\nimport { google } from './google';\n\nexport const Themes = {\n    light,\n    dark,\n    warm,\n    ggplot,\n    igv,\n    ensembl,\n    jbrowse,\n    ucsc,\n    washu,\n    excel,\n    google\n};\n\nexport function isThereTheme(key: string) {\n    return Object.keys(Themes).indexOf(key) !== -1;\n}\n\nexport function getTheme(key: string) {\n    return isThereTheme(key) ? (Themes as any)[key] : Themes['light'];\n}\n","import type * as HiGlass from '@higlass/types';\n\nexport type PluginTrackFactory<Tile, Options> = (\n    HGC: HiGlass.HGC,\n    context: HiGlass.Context<Tile, Options>,\n    options: Options\n) => HiGlass.Track<Options>;\n\ntype AsConstructor<T> = T extends (...args: infer Args) => infer Ret ? { new (...args: Args): Ret } : never;\n\ntype PluginTrack<Tile, Options> = AsConstructor<PluginTrackFactory<Tile, Options>> & {\n    config: HiGlass.TrackConfig<Options>;\n};\n\nexport type TrackConfig<Options> = Omit<HiGlass.TrackConfig<Options>, 'availableOptions'>;\n\nexport function createPluginTrack<Tile, Options>(\n    config: TrackConfig<Options>,\n    factory: PluginTrackFactory<Tile, Options>\n) {\n    function Track(...args: Parameters<typeof factory>) {\n        if (!new.target) {\n            throw new Error('Uncaught TypeError: Class constructor cannot be invoked without \"new\"');\n        }\n        return factory(...args);\n    }\n    Track.config = {\n        ...config,\n        availableOptions: Object.keys(config.defaultOptions ?? {})\n    };\n    return Track as unknown as PluginTrack<Tile, Options> & {\n        config: {\n            // code above ensures this field is always defined when using the plugin.\n            availableOptions: (keyof Options)[];\n        };\n    };\n}\n","// This plugin track is based on higlass/HorizontalChromosomeLabels\n// https://github.com/higlass/higlass/blob/83dc4fddb33582ef3c26b608c04a81e8f33c7f5f/app/scripts/HorizontalChromosomeLabels.js\n\nimport type * as PIXI from 'pixi.js';\nimport RBush from 'rbush';\nimport { scaleLinear } from 'd3-scale';\nimport { format, precisionPrefix, formatPrefix } from 'd3-format';\nimport { computeChromSizes } from '../../core/utils/assembly';\nimport { cartesianToPolar } from '../../core/utils/polar';\nimport { getTextStyle } from '../../core/utils/text-style';\nimport { createPluginTrack } from '../../core/utils/define-plugin-track';\n\nimport type { TextStyle } from '../../core/utils/text-style';\nimport type { PluginTrackFactory, TrackConfig } from '../../core/utils/define-plugin-track';\nimport type { Assembly } from '@gosling-lang/gosling-schema';\n\nconst TICK_WIDTH = 200;\nconst TICK_HEIGHT = 6;\nconst TICK_TEXT_SEPARATION = 2;\nconst TICK_COLOR = 0x777777;\n\ntype AxisTrackOptions = {\n    innerRadius: number;\n    outerRadius: number;\n    startAngle: number;\n    endAngle: number;\n    width: number;\n    height: number;\n    layout: 'linear' | 'circular';\n    labelMargin: number;\n    excludeChrPrefix: boolean;\n    labelPosition: string;\n    labelColor: string;\n    labelTextOpacity: number;\n    trackBorderWidth: number;\n    trackBorderColor: string;\n    tickPositions: 'even' | 'ends';\n    fontSize: number;\n    fontFamily: string; // 'Arial',\n    fontWeight: NonNullable<TextStyle['fontWeight']>;\n    color: string;\n    stroke: string;\n    backgroundColor: string;\n    showMousePosition: boolean;\n    tickColor: number;\n    tickFormat?: string;\n    assembly?: Assembly;\n    reverseOrientation?: boolean;\n};\ntype TickLabelInfo = {\n    importance: number;\n    text: PIXI.Text;\n    rope?: PIXI.SimpleRope;\n};\ntype TickLine = [number, number, number, number];\ntype TickText = PIXI.Text & { hashValue: number; tickLine?: TickLine };\ntype ChrPosInfo = { chr: string; pos: number };\ntype ChromInfo = {\n    chrPositions: Record<string, ChrPosInfo>;\n    chromLengths: Record<string, number>;\n    cumPositions: ChrPosInfo[];\n};\n\n// TODO: Change the icon\nconst icon =\n    '<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 5640 5420\" preserveAspectRatio=\"xMidYMid meet\"> <g id=\"layer101\" fill=\"#000000\" stroke=\"none\"> <path d=\"M0 2710 l0 -2710 2820 0 2820 0 0 2710 0 2710 -2820 0 -2820 0 0 -2710z\"/> </g> <g id=\"layer102\" fill=\"#750075\" stroke=\"none\"> <path d=\"M200 4480 l0 -740 630 0 630 0 0 740 0 740 -630 0 -630 0 0 -740z\"/> <path d=\"M1660 4420 l0 -800 570 0 570 0 0 800 0 800 -570 0 -570 0 0 -800z\"/> <path d=\"M3000 3450 l0 -1770 570 0 570 0 0 1770 0 1770 -570 0 -570 0 0 -1770z\"/> <path d=\"M4340 2710 l0 -2510 560 0 560 0 0 2510 0 2510 -560 0 -560 0 0 -2510z\"/> <path d=\"M200 1870 l0 -1670 630 0 630 0 0 1670 0 1670 -630 0 -630 0 0 -1670z\"/> <path d=\"M1660 1810 l0 -1610 570 0 570 0 0 1610 0 1610 -570 0 -570 0 0 -1610z\"/> <path d=\"M3000 840 l0 -640 570 0 570 0 0 640 0 640 -570 0 -570 0 0 -640z\"/> </g> <g id=\"layer103\" fill=\"#ffff04\" stroke=\"none\"> <path d=\"M200 4480 l0 -740 630 0 630 0 0 740 0 740 -630 0 -630 0 0 -740z\"/> <path d=\"M1660 4420 l0 -800 570 0 570 0 0 800 0 800 -570 0 -570 0 0 -800z\"/> <path d=\"M3000 3450 l0 -1770 570 0 570 0 0 1770 0 1770 -570 0 -570 0 0 -1770z\"/> </g> </svg>';\n\nconst config: TrackConfig<AxisTrackOptions> = {\n    type: 'axis-track',\n    datatype: ['multivec', 'epilogos'],\n    local: false,\n    orientation: '1d-horizontal',\n    thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n    defaultOptions: {\n        innerRadius: 340,\n        outerRadius: 310,\n        startAngle: 0,\n        endAngle: 360,\n        width: 700,\n        height: 700,\n        layout: 'linear',\n        labelMargin: 5,\n        excludeChrPrefix: false,\n        labelPosition: 'none',\n        labelColor: 'black',\n        labelTextOpacity: 0.4,\n        trackBorderWidth: 0,\n        trackBorderColor: 'black',\n        tickPositions: 'even',\n        fontSize: 12,\n        fontFamily: 'sans-serif', // 'Arial',\n        fontWeight: 'normal',\n        color: '#808080',\n        stroke: '#ffffff',\n        backgroundColor: 'transparent',\n        showMousePosition: false,\n        tickColor: TICK_COLOR\n    }\n};\n\nconst factory: PluginTrackFactory<never, AxisTrackOptions> = (HGC, context, options) => {\n    const { absToChr, colorToHex, pixiTextToSvg, svgLine, showMousePosition } = HGC.utils;\n\n    function createTickText(text: string, style: Partial<PIXI.ITextStyle>): TickText {\n        return Object.assign(new HGC.libraries.PIXI.Text(text, style), { hashValue: Math.random() });\n    }\n\n    class AxisTrackClass extends HGC.tracks.PixiTrack<typeof options> {\n        allTexts: TickLabelInfo[];\n        searchField: null;\n        chromInfo: ChromInfo;\n        dataConfig: Record<string, unknown>;\n        pTicksCircular: PIXI.Graphics;\n        pTicks: PIXI.Graphics | null;\n        gTicks: Record<string, PIXI.Graphics>;\n        tickTexts: Record<string, TickText[]>;\n\n        isShowGlobalMousePosition: () => boolean;\n\n        pixiTextConfig: ReturnType<typeof getTextStyle>;\n        stroke: number;\n\n        tickWidth: number;\n        tickHeight: number;\n        tickTextSeparation: number;\n        tickColor: number;\n\n        animate: () => void;\n\n        hideMousePosition?: ReturnType<typeof HGC.utils.showMousePosition>;\n\n        gBoundTicks?: PIXI.Graphics;\n        leftBoundTick?: TickText;\n        rightBoundTick?: TickText;\n\n        is2d?: boolean;\n        texts?: TickText[];\n\n        constructor() {\n            super(context, options);\n            const { dataConfig, animate, chromInfoPath, isShowGlobalMousePosition } = context;\n\n            this.searchField = null;\n            this.dataConfig = dataConfig;\n\n            this.allTexts = [];\n\n            this.pTicksCircular = new HGC.libraries.PIXI.Graphics();\n            this.pTicks = new HGC.libraries.PIXI.Graphics();\n            this.pMain.addChild(this.pTicks);\n            this.pMain.addChild(this.pTicksCircular);\n\n            this.gTicks = {};\n            this.tickTexts = {};\n\n            this.options = options;\n            this.isShowGlobalMousePosition = isShowGlobalMousePosition;\n\n            this.pixiTextConfig = getTextStyle({\n                size: +this.options.fontSize,\n                fontFamily: this.options.fontFamily,\n                fontWeight: this.options.fontWeight,\n                color: this.options.color,\n                stroke: this.options.stroke,\n                strokeThickness: 2\n            });\n            this.stroke = colorToHex(this.pixiTextConfig.stroke);\n\n            // text objects to use if the tick style is \"bounds\", meaning\n            // we only draw two ticks on the left and the right of the screen\n\n            this.tickWidth = TICK_WIDTH;\n            this.tickHeight = TICK_HEIGHT;\n            this.tickTextSeparation = TICK_TEXT_SEPARATION;\n            this.tickColor = colorToHex(this.options.tickColor);\n\n            this.animate = animate;\n\n            this.pubSubs = [];\n\n            if (this.options.showMousePosition && !this.hideMousePosition) {\n                this.hideMousePosition = showMousePosition(this, this.is2d, this.isShowGlobalMousePosition());\n            }\n\n            let chromSizesPath = chromInfoPath;\n\n            if (!chromSizesPath) {\n                chromSizesPath = `${dataConfig.server}/chrom-sizes/?id=${dataConfig.tilesetUid}`;\n            }\n\n            // Example:\n            // chrPositions: {\n            //     chr1: { chr: \"chr1\", pos: 0 },\n            //     chr2: { chr: \"chr2\", pos: 1000 },\n            // },\n            // chromLengths: {\n            //     chr1: 1000,\n            //     chr2: 1000\n            // },\n            // cumPositions: [\n            //     { chr: \"chr1\", pos: 0 },\n            //     { chr: \"chr2\", pos: 1000 },\n            // ]\n\n            const assembly = this.options.assembly;\n            const chrPositions: { [k: string]: ChrPosInfo } = {};\n            const chromLengths: { [k: string]: number } = { ...computeChromSizes(assembly).size };\n            const cumPositions: ChrPosInfo[] = [];\n\n            Object.keys(computeChromSizes(assembly).size).forEach(k => {\n                chrPositions[k] = { chr: k, pos: computeChromSizes(assembly).size[k] };\n            });\n\n            Object.keys(computeChromSizes(assembly).interval).forEach(k => {\n                cumPositions.push({ chr: k, pos: computeChromSizes(assembly).interval[k][0] });\n            });\n\n            this.chromInfo = { chrPositions, chromLengths, cumPositions };\n\n            this.rerender(this.options, true);\n            this.draw();\n            this.animate();\n        }\n\n        initBoundsTicks() {\n            if (this.pTicks) {\n                this.pMain.removeChild(this.pTicks);\n                this.pTicks = null;\n            }\n\n            if (!this.gBoundTicks) {\n                this.gBoundTicks = new HGC.libraries.PIXI.Graphics();\n\n                this.leftBoundTick = createTickText('', this.pixiTextConfig);\n                this.rightBoundTick = createTickText('', this.pixiTextConfig);\n\n                this.gBoundTicks.addChild(this.leftBoundTick);\n                this.gBoundTicks.addChild(this.rightBoundTick);\n\n                this.pMain.addChild(this.gBoundTicks);\n            }\n\n            this.texts = [];\n        }\n\n        initChromLabels() {\n            if (!this.chromInfo) return;\n\n            if (this.gBoundTicks) {\n                this.pMain.removeChild(this.gBoundTicks);\n                this.gBoundTicks = undefined;\n            }\n\n            if (!this.pTicks) {\n                this.pTicks = new HGC.libraries.PIXI.Graphics();\n                this.pMain.addChild(this.pTicks);\n            }\n\n            this.texts = [];\n            this.pTicks.removeChildren();\n\n            this.chromInfo.cumPositions.forEach((info: any) => {\n                const chromName = info.chr;\n                this.gTicks[chromName] = new HGC.libraries.PIXI.Graphics();\n\n                // create the array that will store tick TEXT objects\n                if (!this.tickTexts[chromName]) this.tickTexts[chromName] = [];\n\n                // Give each PIXI text object a random hash so that some get hidden when there's overlaps\n                const chromNameText = this.options.excludeChrPrefix ? chromName.replace('chr', '') : chromName;\n                const text = createTickText(chromNameText, this.pixiTextConfig);\n\n                this.pTicks?.addChild(text);\n                this.pTicks?.addChild(this.gTicks[chromName]);\n\n                this.texts?.push(text);\n            });\n        }\n\n        rerender(options: any, force: boolean) {\n            const strOptions = JSON.stringify(options);\n\n            if (!force && strOptions === this.prevOptions) return;\n\n            this.prevOptions = strOptions;\n            this.options = options;\n\n            this.pixiTextConfig.fontSize = +this.options.fontSize\n                ? (`${+this.options.fontSize}px` as const)\n                : this.pixiTextConfig.fontSize;\n            this.pixiTextConfig.fill = this.options.color || this.pixiTextConfig.fill;\n            this.pixiTextConfig.stroke = this.options.stroke || this.pixiTextConfig.stroke;\n            this.stroke = colorToHex(this.pixiTextConfig.stroke as string);\n\n            this.tickColor = this.options.tickColor ? colorToHex(this.options.tickColor) : TICK_COLOR;\n\n            if (this.options.tickPositions === 'ends' && this.options.layout !== 'circular') {\n                this.initBoundsTicks();\n            } else {\n                this.initChromLabels();\n            }\n\n            super.rerender(options, force);\n\n            if (this.options.showMousePosition && !this.hideMousePosition) {\n                this.hideMousePosition = showMousePosition(this, this.is2d, this.isShowGlobalMousePosition());\n            }\n\n            if (!this.options.showMousePosition && this.hideMousePosition) {\n                this.hideMousePosition();\n                this.hideMousePosition = undefined;\n            }\n        }\n\n        formatTick(pos: number) {\n            if (isNaN(pos)) {\n                // the value is not proper, so early return\n                return 'null';\n            }\n\n            const domain = this._xScale.domain();\n\n            const viewWidth = domain[1] - domain[0];\n\n            const p = precisionPrefix(pos, viewWidth);\n\n            const fPlain = format(',');\n            const fPrecision = formatPrefix(`,.${p}`, viewWidth);\n            let f = fPlain;\n\n            if (this.options.tickFormat === 'si') {\n                f = fPrecision;\n            } else if (this.options.tickFormat === 'plain') {\n                f = fPlain;\n            } else if (this.options.tickPositions === 'ends') {\n                // if no format is specified but tickPositions are at 'ends'\n                // then use precision format\n                f = fPrecision;\n            }\n\n            return f(pos);\n        }\n\n        /** Show two labels at the end of both left and right sides */\n        drawBoundsTicks(x1: ReturnType<typeof absToChr>, x2: ReturnType<typeof absToChr>) {\n            if (!this.gBoundTicks || !this.leftBoundTick || !this.rightBoundTick) return;\n            const graphics = this.gBoundTicks;\n            graphics.clear();\n            graphics.lineStyle(1, 0);\n\n            // determine the stard and end positions of tick lines along the vertical axis\n            const lineYStart = this.options.reverseOrientation ? 0 : this.dimensions[1];\n            const lineYEnd = this.options.reverseOrientation ? this.tickHeight : this.dimensions[1] - this.tickHeight;\n\n            // left tick\n            // line is offset by one because it's right on the edge of the\n            // visible region and we want to get the full width\n            graphics.moveTo(1, lineYStart);\n            graphics.lineTo(1, lineYEnd);\n\n            // right tick\n            graphics.moveTo(this.dimensions[0] - 1, lineYStart);\n            graphics.lineTo(this.dimensions[0] - 1, lineYEnd);\n\n            // we want to control the precision of the tick labels\n            // so that we don't end up with labels like 15.123131M\n            this.leftBoundTick.x = 0;\n            this.leftBoundTick.y = this.options.reverseOrientation\n                ? lineYEnd + this.tickTextSeparation\n                : lineYEnd - this.tickTextSeparation;\n            this.leftBoundTick.text =\n                this.options.assembly === 'unknown'\n                    ? `${this.formatTick(x1[1])}`\n                    : `${x1[0]}: ${this.formatTick(x1[1])}`;\n            this.leftBoundTick.anchor.y = this.options.reverseOrientation ? 0 : 1;\n\n            this.rightBoundTick.x = this.dimensions[0];\n            this.rightBoundTick.text =\n                this.options.assembly === 'unknown'\n                    ? `${this.formatTick(x2[1])}`\n                    : `${x2[0]}: ${this.formatTick(x2[1])}`;\n            this.rightBoundTick.y = this.options.reverseOrientation\n                ? lineYEnd + this.tickTextSeparation\n                : lineYEnd - this.tickTextSeparation;\n            this.rightBoundTick.anchor.y = this.options.reverseOrientation ? 0 : 1;\n\n            this.rightBoundTick.anchor.x = 1;\n\n            if (this.flipText) {\n                // this means this track is displayed vertically, so update the anchor and scale of labels to make them readable!\n                this.leftBoundTick.scale.x = -1;\n                this.leftBoundTick.anchor.x = 1;\n                this.rightBoundTick.scale.x = -1;\n                this.rightBoundTick.anchor.x = 0;\n            }\n\n            // line is offset by one because it's right on the edge of the visible region and we want to get the full width\n            this.leftBoundTick.tickLine = [1, this.dimensions[1], 1, this.dimensions[1] - this.tickHeight];\n            this.rightBoundTick.tickLine = [\n                this.dimensions[0] - 1,\n                this.dimensions[1],\n                this.dimensions[0] - 1,\n                this.dimensions[1] - this.tickHeight\n            ];\n\n            this.tickTexts = {};\n            this.tickTexts.all = [this.leftBoundTick, this.rightBoundTick];\n            // this.rightBoundTick\n        }\n\n        drawTicks(cumPos: { chr: string; pos: number }) {\n            const graphics = this.gTicks[cumPos.chr];\n\n            graphics.visible = true;\n\n            // clear graphics *and* ticktexts otherwise the two are out of sync!\n            graphics.clear();\n\n            const chromLen = +this.chromInfo.chromLengths[cumPos.chr];\n\n            const vpLeft = Math.max(this._xScale(cumPos.pos), 0);\n            const vpRight = Math.min(this._xScale(cumPos.pos + chromLen), this.dimensions[0]);\n\n            const numTicks = (vpRight - vpLeft) / this.tickWidth;\n\n            // what is the domain of this chromosome that is visible?\n            const xScale = scaleLinear()\n                .domain([\n                    Math.max(1, this._xScale.invert(0) - cumPos.pos),\n                    Math.min(chromLen, this._xScale.invert(this.dimensions[0]) - cumPos.pos)\n                ])\n                .range([vpLeft, vpRight]);\n\n            // calculate a certain number of ticks\n            const ticks = xScale.ticks(numTicks).filter(tick => Number.isInteger(tick));\n\n            // not sure why we're separating these out by chromosome, but ok\n            const tickTexts = this.tickTexts[cumPos.chr];\n\n            const tickHeight = this.tickHeight;\n\n            const xPadding = 0;\n\n            let yPadding = tickHeight + this.tickTextSeparation;\n\n            if (this.options.reverseOrientation) {\n                yPadding = this.dimensions[1] - yPadding;\n            }\n\n            // these two loops reuse existing text objects so that we're not constantly recreating texts that already exist\n            while (tickTexts.length < ticks.length) {\n                const newText = createTickText('', this.pixiTextConfig);\n                tickTexts.push(newText);\n                this.gTicks[cumPos.chr].addChild(newText);\n            }\n\n            while (tickTexts.length > ticks.length) {\n                const text = tickTexts.pop();\n                this.gTicks[cumPos.chr].removeChild(text!);\n            }\n\n            let i = 0;\n            while (i < ticks.length) {\n                tickTexts[i].visible = true;\n\n                tickTexts[i].anchor.x = 0.5;\n                tickTexts[i].anchor.y =\n                    this.options.layout === 'circular' ? 0 : this.options.reverseOrientation ? 0 : 1;\n\n                if (this.flipText) tickTexts[i].scale.x = -1;\n\n                const chrText = this.options.assembly === 'unknown' ? '' : `${cumPos.chr}: `;\n                tickTexts[i].text = ticks[i] === 0 ? `${chrText}1` : `${chrText}${this.formatTick(ticks[i])}`;\n\n                const x = this._xScale(cumPos.pos + ticks[i]);\n\n                // show the tick text labels\n                if (this.options.layout === 'circular') {\n                    const rope = this.addCurvedText(tickTexts[i], x + xPadding);\n                    rope && this.pTicksCircular.addChild(rope);\n                } else {\n                    tickTexts[i].x = x + xPadding;\n                    tickTexts[i].y = this.dimensions[1] - yPadding;\n\n                    // store the position of the tick line so that it can be used in the export function\n                    // TODO:\n                    tickTexts[i].tickLine = [x - 1, this.dimensions[1], x - 1, this.dimensions[1] - tickHeight - 1];\n\n                    // draw outline\n                    const lineYStart = this.options.reverseOrientation ? 0 : this.dimensions[1];\n                    const lineYEnd = this.options.reverseOrientation ? tickHeight : this.dimensions[1] - tickHeight;\n                    // graphics.lineStyle(1, this.stroke);\n                    // graphics.moveTo(x - 1, lineYStart);\n                    // graphics.lineTo(x - 1, lineYEnd - 1);\n                    // graphics.lineTo(x + 1, lineYEnd - 1);\n                    // graphics.lineTo(x + 1, lineYStart);\n\n                    // draw the vertical tick lines\n                    graphics.lineStyle(1, this.tickColor);\n                    graphics.moveTo(x, lineYStart);\n                    graphics.lineTo(x, lineYEnd);\n                }\n\n                i += 1;\n            }\n\n            if (this.options.layout === 'circular') i = 0;\n            while (i < tickTexts.length) {\n                // we don't need this text so we'll turn it off for now\n                tickTexts[i].visible = false;\n\n                i += 1;\n            }\n\n            return ticks.length;\n        }\n\n        addCurvedText(textObj: PIXI.Text, cx: number) {\n            const [width, height] = this.dimensions;\n            const { startAngle, endAngle } = this.options;\n            const factor = Math.min(width, height) / Math.min(this.options.width, this.options.height);\n            const innerRadius = this.options.innerRadius * factor;\n            const outerRadius = this.options.outerRadius * factor;\n\n            const r = (outerRadius + innerRadius) / 2.0;\n            const centerPos = cartesianToPolar(cx, width, r, width / 2.0, height / 2.0, startAngle, endAngle);\n            textObj.x = centerPos.x;\n            textObj.y = centerPos.y;\n\n            textObj.resolution = 4;\n            const txtStyle = new HGC.libraries.PIXI.TextStyle(this.pixiTextConfig);\n            const metric = HGC.libraries.PIXI.TextMetrics.measureText(textObj.text, txtStyle);\n\n            // scale the width of text label so that its width is the same when converted into circular form\n            const tw = ((metric.width / (2 * r * Math.PI)) * width * 360) / (endAngle - startAngle);\n            let [minX, maxX] = [cx - tw / 2.0, cx + tw / 2.0];\n\n            // make sure not to place the label on the origin\n            if (minX < 0) {\n                const gap = -minX;\n                minX = 0;\n                maxX += gap;\n            } else if (maxX > width) {\n                const gap = maxX - width;\n                maxX = width;\n                minX -= gap;\n            }\n\n            const ropePoints: PIXI.Point[] = [];\n            const baseR = innerRadius + metric.height / 2.0 + 3;\n            for (let i = maxX; i >= minX; i -= tw / 10.0) {\n                const p = cartesianToPolar(i, width, baseR, width / 2.0, height / 2.0, startAngle, endAngle);\n                ropePoints.push(new HGC.libraries.PIXI.Point(p.x, p.y));\n            }\n\n            if (ropePoints.length === 0) {\n                return undefined;\n            }\n\n            // @ts-expect-error missing argument\n            textObj.updateText();\n            const rope = new HGC.libraries.PIXI.SimpleRope(textObj.texture, ropePoints);\n            return rope;\n        }\n\n        draw() {\n            this.allTexts = [];\n\n            if (!this.texts) return;\n\n            const x1 = absToChr(this._xScale.domain()[0], this.chromInfo);\n            const x2 = absToChr(this._xScale.domain()[1], this.chromInfo);\n\n            if (!x1 || !x2) {\n                console.warn('Empty chromInfo:', this.dataConfig, this.chromInfo);\n                return;\n            }\n\n            if (this.options.tickPositions === 'ends' && this.options.layout !== 'circular') {\n                // We only support linear layouts for this.\n                if (!this.gBoundTicks) return;\n\n                this.gBoundTicks.visible = true;\n\n                this.drawBoundsTicks(x1, x2);\n\n                return;\n            }\n\n            if (!this.pTicks) {\n                // options.tickPositiosn was probably just changed to 'even' and initChromLabels hasn't been called yet\n                return;\n            }\n\n            const circular = this.options.layout === 'circular';\n\n            for (let i = 0; i < this.texts.length; i++) {\n                this.texts[i].visible = false;\n                this.gTicks[this.chromInfo.cumPositions[i].chr].visible = false;\n            }\n\n            let yPadding = this.tickHeight + this.tickTextSeparation;\n\n            if (this.options.reverseOrientation) {\n                yPadding = this.dimensions[1] - yPadding;\n            }\n\n            // hide all the chromosome labels in preparation for drawing new ones\n            Object.keys(this.chromInfo.chrPositions).forEach(chrom => {\n                if (this.tickTexts[chrom]) {\n                    this.tickTexts[chrom].forEach((tick: any) => {\n                        tick.visible = false;\n                    });\n                }\n            });\n\n            /* tslint:disable */\n            this.pTicksCircular.removeChildren();\n\n            // iterate over each chromosome\n            for (let i = x1[3]; i <= x2[3]; i++) {\n                const xCumPos = this.chromInfo.cumPositions[i];\n\n                const midX = xCumPos.pos + this.chromInfo.chromLengths[xCumPos.chr] / 2;\n\n                const viewportMidX = this._xScale(midX);\n\n                // This is ONLY the bare chromosome name. Not the tick label!\n                const chrText = this.texts[i];\n\n                chrText.anchor.x = 0.5;\n                chrText.anchor.y = circular ? 0.5 : this.options.reverseOrientation ? 0 : 1;\n\n                let rope: PIXI.SimpleRope | undefined;\n                if (circular) {\n                    rope = this.addCurvedText(chrText, viewportMidX);\n                    if (rope) {\n                        this.pTicksCircular.addChild(rope);\n                    }\n                } else {\n                    chrText.x = viewportMidX;\n                    chrText.y = this.dimensions[1] - yPadding;\n                }\n\n                chrText.updateTransform();\n\n                if (this.flipText) chrText.scale.x = -1;\n\n                const numTicksDrawn = this.drawTicks(xCumPos);\n\n                // only show chromsome labels if there's no ticks drawn\n                if (!circular) {\n                    chrText.visible = numTicksDrawn <= 0;\n                } else {\n                    if (numTicksDrawn > 0) {\n                        rope && this.pTicksCircular.removeChild(rope);\n                    }\n                }\n\n                this.allTexts.push({\n                    importance: chrText.hashValue,\n                    text: chrText,\n                    rope\n                });\n            }\n            /* tslint:enable */\n\n            // define the edge chromosome which are visible\n            this.hideOverlaps(this.allTexts);\n        }\n\n        hideOverlaps(allTexts: TickLabelInfo[]) {\n            const tree = new RBush<{ minX: number; minY: number; maxX: number; maxY: number }>();\n\n            // using bounding boxes of the text objects, calculate overlaps\n            allTexts\n                .sort((a, b) => b.importance - a.importance)\n                .forEach(({ text, rope }: any) => {\n                    text.updateTransform();\n                    const b = text.getBounds();\n                    const m = this.options.labelMargin;\n                    const boxWithMargin = {\n                        minX: b.x - m,\n                        minY: b.y - m,\n                        maxX: b.x + b.width + m * 2,\n                        maxY: b.y + b.height + m * 2\n                    };\n                    if (m < 0 || !tree.collides(boxWithMargin)) {\n                        // if not overlapping, add a new boundingbox\n                        tree.insert(boxWithMargin);\n                    } else {\n                        // if overlapping, hide text labels\n                        text.visible = false;\n                        if (this.options.layout === 'circular' && rope) {\n                            this.pTicksCircular.removeChild(rope);\n                        }\n                    }\n                });\n        }\n\n        setPosition(newPosition: [number, number]) {\n            super.setPosition(newPosition);\n\n            [this.pMain.position.x, this.pMain.position.y] = this.position;\n        }\n\n        zoomed(newXScale: any, newYScale: any) {\n            const domainValues = [...newXScale.domain(), ...newYScale.domain()];\n            if (domainValues.filter(d => isNaN(d)).length !== 0) {\n                // we received an invalid scale somehow\n                // console.warn('');\n                return;\n            }\n\n            this.xScale(newXScale);\n            this.yScale(newYScale);\n\n            this.draw();\n        }\n\n        exportSVG(): [HTMLElement, HTMLElement] {\n            let track = null;\n            let base = null;\n\n            // @ts-expect-error always true because it's defined on HGC.tracks.PixiTrack\n            if (super.exportSVG) {\n                [base, track] = super.exportSVG();\n            } else {\n                base = document.createElement('g');\n                track = base;\n            }\n            base.setAttribute('class', 'chromosome-labels');\n\n            const output = document.createElement('g');\n            track.appendChild(output);\n\n            output.setAttribute('transform', `translate(${this.position[0]},${this.position[1]})`);\n\n            this.allTexts\n                .filter(text => text.text.visible)\n                .forEach(text => {\n                    const g = pixiTextToSvg(text.text);\n                    output.appendChild(g);\n                });\n\n            Object.values(this.tickTexts).forEach(texts => {\n                texts\n                    .filter(x => x.visible)\n                    .forEach(text => {\n                        if (!text.tickLine) return;\n\n                        let g = pixiTextToSvg(text);\n                        output.appendChild(g);\n                        g = svgLine(\n                            text.x,\n                            this.options.reverseOrientation ? 0 : this.dimensions[1],\n                            text.x,\n                            this.options.reverseOrientation ? this.tickHeight : this.dimensions[1] - this.tickHeight,\n                            1,\n                            this.tickColor\n                        );\n\n                        const line = document.createElement('line');\n\n                        line.setAttribute('x1', String(text.tickLine[0]));\n                        line.setAttribute('y1', String(text.tickLine[1]));\n                        line.setAttribute('x2', String(text.tickLine[2]));\n                        line.setAttribute('y2', String(text.tickLine[3]));\n                        line.setAttribute('style', 'stroke: grey');\n\n                        output.appendChild(g);\n                        output.appendChild(line);\n                    });\n            });\n\n            return [base, track];\n        }\n    }\n    return new AxisTrackClass();\n};\n\nexport default createPluginTrack(config, factory);\n","import { arc as d3arc } from 'd3-shape';\nimport type { SubjectPosition, D3DragEvent } from 'd3-drag';\nimport { RADIAN_GAP, valueToRadian } from '../../core/utils/polar';\nimport { uuid } from '../../core/utils/uuid';\n\ntype CircularBrushData = {\n    type: 'brush' | 'start' | 'end';\n    startAngle: number;\n    endAngle: number;\n    cursor: string;\n};\n\nfunction BrushTrack(HGC: any, ...args: any[]): any {\n    if (!new.target) {\n        throw new Error('Uncaught TypeError: Class constructor cannot be invoked without \"new\"');\n    }\n\n    class BrushTrackClass extends HGC.tracks.SVGTrack {\n        public circularBrushData: CircularBrushData[];\n        public prevExtent: [number, number];\n\n        constructor(params: any[]) {\n            super(...params); // context, options\n\n            const [context, options] = params;\n            const { registerViewportChanged, removeViewportChanged, setDomainsCallback } = context;\n\n            this.uid = uuid();\n            this.options = options;\n\n            // Is there actually a linked from view? Or is this projection \"independent\"?\n            this.hasFromView = !context.projectionXDomain;\n\n            this.removeViewportChanged = removeViewportChanged;\n            this.setDomainsCallback = setDomainsCallback;\n\n            this.viewportXDomain = this.hasFromView ? null : context.projectionXDomain;\n            this.viewportYDomain = this.hasFromView ? null : [0, 0];\n\n            this.prevExtent = [0, 0];\n            this.RR = 0.02; // radian angle of resizers on the both sides\n\n            const extent: [number, number] = [0, Math.PI * 1.7];\n            this.circularBrushData = this.getBrushData(extent);\n\n            this.brush = d3arc()\n                .innerRadius(this.options.innerRadius ?? 100)\n                .outerRadius(this.options.outerRadius ?? 200);\n\n            this.gBrush = this.gMain\n                .append('g')\n                .attr('id', `brush-${this.uid}`)\n                .selectAll('.brush')\n                .data(this.circularBrushData)\n                .enter()\n                .append('path')\n                .attr('class', 'brush')\n                .attr('d', this.brush)\n                .attr('fill', this.options.projectionFillColor)\n                .attr('stroke', this.options.projectionStrokeColor)\n                // Let's hide left and right resizer\n                .attr('fill-opacity', (d: CircularBrushData) =>\n                    d.type === 'brush' ? this.options.projectionFillOpacity : 0\n                )\n                .attr('stroke-opacity', (d: CircularBrushData) =>\n                    d.type === 'brush' ? this.options.projectionStrokeOpacity : 0\n                )\n                .attr('stroke-width', this.options.strokeWidth)\n                .style('pointer-events', 'all')\n                .style('cursor', (d: CircularBrushData) => d.cursor)\n                .call(this.dragged());\n\n            // the viewport will call this.viewportChanged immediately upon hearing registerViewportChanged\n            registerViewportChanged(this.uid, this.viewportChanged.bind(this));\n\n            this.draw();\n        }\n\n        /**\n         * Get information for circular brush for given extent of angle.\n         */\n        getBrushData(extent: [number, number]): CircularBrushData[] {\n            return [\n                {\n                    type: 'brush',\n                    startAngle: extent[0],\n                    endAngle: extent[1],\n                    cursor: 'grab'\n                },\n                {\n                    type: 'start',\n                    startAngle: extent[0],\n                    endAngle: extent[0] + this.RR,\n                    cursor: 'move'\n                },\n                {\n                    type: 'end',\n                    startAngle: extent[1] - this.RR,\n                    endAngle: extent[1],\n                    cursor: 'move'\n                }\n            ];\n        }\n\n        cropExtent(extent: [number, number]): [number, number] {\n            let [s, e] = extent;\n\n            let round = 0;\n            while (s > Math.PI * 2 || e > Math.PI * 2 || s < 0 || e < 0) {\n                if (round++ > 10) {\n                    // this shifting process should be done in a single round, so reaching here shouldn't happen.\n                    break;\n                }\n\n                if (s > Math.PI * 2 || e > Math.PI * 2) {\n                    s -= Math.PI * 2;\n                    e -= Math.PI * 2;\n                } else if (s < 0 || e < 0) {\n                    s += Math.PI * 2;\n                    e += Math.PI * 2;\n                }\n            }\n            return ([s, e] as number[]).sort((a, b) => a - b) as [number, number];\n        }\n\n        /**\n         * Update the position and size of brush.\n         */\n        updateBrush(extent: [number, number]) {\n            let [s, e] = extent;\n\n            if (\n                (s <= RADIAN_GAP && e <= RADIAN_GAP) ||\n                (s >= Math.PI * 2 - RADIAN_GAP && e >= Math.PI * 2 - RADIAN_GAP)\n            ) {\n                // this means [s, e] is entirely out of the visible area, so simply hide the brush\n                this.gBrush.attr('visibility', 'hidden');\n                return;\n            }\n\n            // crop angles if they are out of the visible area\n            if (s < RADIAN_GAP) {\n                s = RADIAN_GAP;\n            }\n            if (s > Math.PI * 2 - RADIAN_GAP) {\n                s = Math.PI * 2 - RADIAN_GAP;\n            }\n            if (e < RADIAN_GAP) {\n                e = RADIAN_GAP;\n            }\n            if (e > Math.PI * 2 - RADIAN_GAP) {\n                e = Math.PI * 2 - RADIAN_GAP;\n            }\n\n            this.circularBrushData = this.getBrushData(extent);\n            this.gBrush.data(this.circularBrushData).attr('d', this.brush).attr('visibility', 'visible');\n        }\n\n        /**\n         * Function to call upon hearing click event on the brush\n         */\n        dragged() {\n            const start = (event: D3DragEvent<SVGElement, CircularBrushData, SubjectPosition>) => {\n                this.startEvent = event.sourceEvent;\n                this.prevExtent = [this.circularBrushData[0].startAngle, this.circularBrushData[0].endAngle];\n            };\n\n            const drag = (event: D3DragEvent<any, CircularBrushData, SubjectPosition>, d: CircularBrushData) => {\n                const [x, y] = this.position;\n                const [w, h] = this.dimensions;\n                const endEvent = event.sourceEvent;\n\n                // adjust the position\n                const startX = this.startEvent.layerX - x;\n                const startY = this.startEvent.layerY - y;\n                const endX = endEvent.layerX - x;\n                const endY = endEvent.layerY - y;\n\n                // calculate the radian difference from the drag event\n                // rotate the origin +90 degree so that it is positioned on the 12 O'clock\n                const radDiff =\n                    // radian of the start position\n                    Math.atan2(startX - w / 2.0, startY - h / 2.0) -\n                    // radian of the current position\n                    Math.atan2(endX - w / 2.0, endY - h / 2.0);\n\n                // previous extent of brush\n                let [s, e] = this.prevExtent;\n\n                if (d.type === 'brush') {\n                    s = s + radDiff;\n                    e = e + radDiff;\n\n                    if (s < RADIAN_GAP || Math.PI * 2 - RADIAN_GAP < e) {\n                        // This means [s, e] contains the origin, i.e., 12 O'clock\n                        const sto = RADIAN_GAP - s;\n                        const eto = e - (Math.PI * 2 - RADIAN_GAP);\n\n                        if (sto > eto) {\n                            // Place the brush on the right side of the origin\n                            e += sto;\n                            s += sto;\n                        } else {\n                            // Place the brush on the left side of the origin\n                            s -= eto;\n                            e -= eto;\n                        }\n                    }\n                } else if (d.type === 'start') {\n                    s = s + radDiff;\n                } else if (d.type === 'end') {\n                    e = e + radDiff;\n                }\n\n                [s, e] = this.cropExtent([s, e]);\n\n                if (!this._xScale || !this._yScale) {\n                    return;\n                }\n\n                const scale = (this.options.endAngle - this.options.startAngle) / 360;\n                const offsetedS = s - (this.options.startAngle / 360) * Math.PI * 2;\n                const offsetedE = e - (this.options.startAngle / 360) * Math.PI * 2;\n                const xDomain = [\n                    this._xScale.invert(w - (w * offsetedE) / (Math.PI * 2 * scale)),\n                    this._xScale.invert(w - (w * offsetedS) / (Math.PI * 2 * scale))\n                ];\n\n                const yDomain = this.viewportYDomain;\n\n                if (!this.hasFromView) {\n                    this.viewportXDomain = xDomain;\n                }\n\n                this.setDomainsCallback(xDomain, yDomain);\n\n                this.updateBrush([s, e]);\n            };\n\n            return HGC.libraries.d3Drag.drag().on('start', start).on('drag', drag);\n        }\n\n        draw() {\n            if (!this._xScale || !this.yScale) {\n                return;\n            }\n\n            if (!this.viewportXDomain || !this.viewportYDomain) {\n                return;\n            }\n\n            const x0 = this._xScale(this.viewportXDomain[0]);\n            const x1 = this._xScale(this.viewportXDomain[1]);\n\n            const [w] = this.dimensions;\n            let e = valueToRadian(x0, w, this.options.startAngle, this.options.endAngle) + Math.PI / 2.0;\n            let s = valueToRadian(x1, w, this.options.startAngle, this.options.endAngle) + Math.PI / 2.0;\n\n            [s, e] = this.cropExtent([s, e]);\n\n            this.updateBrush([s, e]);\n        }\n\n        viewportChanged(viewportXScale: any, viewportYScale: any) {\n            const viewportXDomain = viewportXScale.domain();\n            const viewportYDomain = viewportYScale.domain();\n\n            this.viewportXDomain = viewportXDomain;\n            this.viewportYDomain = viewportYDomain;\n\n            this.draw();\n        }\n\n        remove() {\n            // remove the event handler that updates this viewport tracker\n            this.removeViewportChanged(this.uid);\n\n            super.remove();\n        }\n\n        rerender() {\n            // !!! TODO: when does this called?\n        }\n\n        zoomed(newXScale: any, newYScale: any) {\n            this.xScale(newXScale);\n            this.yScale(newYScale);\n\n            this.draw();\n        }\n\n        setPosition(newPosition: any) {\n            super.setPosition(newPosition);\n\n            this.draw();\n        }\n\n        setDimensions(newDimensions: any) {\n            super.setDimensions(newDimensions);\n\n            // change the position\n            this.gBrush.attr('transform', `translate(${newDimensions[0] / 2.0},${newDimensions[1] / 2.0})`);\n\n            this.draw();\n        }\n    }\n\n    return new BrushTrackClass(args);\n}\n\n// TODO: Change the icon\nconst icon =\n    '<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 5640 5420\" preserveAspectRatio=\"xMidYMid meet\"> <g id=\"layer101\" fill=\"#000000\" stroke=\"none\"> <path d=\"M0 2710 l0 -2710 2820 0 2820 0 0 2710 0 2710 -2820 0 -2820 0 0 -2710z\"/> </g> <g id=\"layer102\" fill=\"#750075\" stroke=\"none\"> <path d=\"M200 4480 l0 -740 630 0 630 0 0 740 0 740 -630 0 -630 0 0 -740z\"/> <path d=\"M1660 4420 l0 -800 570 0 570 0 0 800 0 800 -570 0 -570 0 0 -800z\"/> <path d=\"M3000 3450 l0 -1770 570 0 570 0 0 1770 0 1770 -570 0 -570 0 0 -1770z\"/> <path d=\"M4340 2710 l0 -2510 560 0 560 0 0 2510 0 2510 -560 0 -560 0 0 -2510z\"/> <path d=\"M200 1870 l0 -1670 630 0 630 0 0 1670 0 1670 -630 0 -630 0 0 -1670z\"/> <path d=\"M1660 1810 l0 -1610 570 0 570 0 0 1610 0 1610 -570 0 -570 0 0 -1610z\"/> <path d=\"M3000 840 l0 -640 570 0 570 0 0 640 0 640 -570 0 -570 0 0 -640z\"/> </g> <g id=\"layer103\" fill=\"#ffff04\" stroke=\"none\"> <path d=\"M200 4480 l0 -740 630 0 630 0 0 740 0 740 -630 0 -630 0 0 -740z\"/> <path d=\"M1660 4420 l0 -800 570 0 570 0 0 800 0 800 -570 0 -570 0 0 -800z\"/> <path d=\"M3000 3450 l0 -1770 570 0 570 0 0 1770 0 1770 -570 0 -570 0 0 -1770z\"/> </g> </svg>';\n\n// TODO:\n// default\nBrushTrack.config = {\n    type: 'brush-track',\n    datatype: ['projection'],\n    local: false, // TODO:\n    projection: true,\n    orientation: '2d',\n    thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n    availableOptions: [\n        'innerRadius',\n        'outerRadius',\n        'startAngle',\n        'endAngle',\n        'axisPositionHorizontal',\n        'projectionFillColor',\n        'projectionStrokeColor',\n        'projectionFillOpacity',\n        'projectionStrokeOpacity',\n        'strokeWidth'\n    ],\n    defaultOptions: {\n        innerRadius: 100,\n        outerRadius: 200,\n        startAngle: 0,\n        endAngle: 360,\n        axisPositionHorizontal: 'left',\n        projectionFillColor: '#777',\n        projectionStrokeColor: '#777',\n        projectionFillOpacity: 0.3,\n        projectionStrokeOpacity: 0.7,\n        strokeWidth: 1\n    }\n};\n\nexport default BrushTrack;\n","import { createNanoEvents, type Emitter } from 'nanoevents';\nimport type * as D3Selection from 'd3-selection';\nimport type * as D3Drag from 'd3-drag';\nimport type { EventStyle } from '@gosling-lang/gosling-schema';\n\nconst HIDDEN_BRUSH_EDGE_SIZE = 3;\n\ninterface Interval {\n    start: number;\n    end: number;\n}\n\ntype LinearBrushData = [\n    { type: 'body'; cursor: 'grab' } & Interval,\n    { type: 'start'; cursor: 'ew-resize' } & Interval,\n    { type: 'end'; cursor: 'ew-resize' } & Interval\n];\n\ninterface LinearBrushEvents {\n    brush: (range: [number, number] | null, skipApiTrigger: boolean) => void;\n}\n\n// default styles for brush\nconst BRUSH_STYLE_DEFAULT: Required<Omit<EventStyle, 'arrange'>> = {\n    color: '#777',\n    stroke: '#777',\n    strokeWidth: 1,\n    strokeOpacity: 0.7,\n    opacity: 0.3\n};\n\n/**\n * A model to manage 1D brush graphics and its data.\n */\nexport class LinearBrushModel {\n    /* graphical elements */\n    private brushSelection: D3Selection.Selection<SVGRectElement, LinearBrushData[number], SVGGElement, any>;\n    private readonly style: Required<Omit<EventStyle, 'arrange'>>;\n\n    /* data */\n    private range: [number, number] | null;\n    private data: LinearBrushData;\n\n    /* drag */\n    private startEvent: D3Drag.D3DragEvent<SVGElement, LinearBrushData[number], D3Drag.SubjectPosition>['sourceEvent'];\n    private prevExtent: [number, number] | null;\n\n    /* visual parameters */\n    private offset: [number, number];\n    private size: number; // fixed size of one-dimension of a brush (e.g., height)\n\n    /* External libraries that we re-use from HiGlass */\n    private externals: {\n        d3Selection: typeof D3Selection;\n        d3Drag: typeof D3Drag;\n    };\n\n    private emitter: Emitter<LinearBrushEvents>;\n\n    constructor(\n        selection: D3Selection.Selection<SVGGElement, unknown, null, unknown>,\n        hgLibraries: any,\n        style: EventStyle = {}\n    ) {\n        this.emitter = createNanoEvents<LinearBrushEvents>();\n        this.range = null;\n        this.prevExtent = [0, 0];\n        this.data = this.rangeToData(0, 0);\n\n        this.offset = [0, 0];\n        this.size = 0;\n\n        this.externals = {\n            d3Selection: hgLibraries.d3Selection,\n            d3Drag: hgLibraries.d3Drag\n        };\n\n        this.style = Object.assign({}, BRUSH_STYLE_DEFAULT, style);\n\n        this.brushSelection = selection\n            .selectAll('.genomic-range-brush')\n            .data(this.data)\n            .enter()\n            .append('rect')\n            .attr('class', 'genomic-range-brush')\n            .call(this.onDrag());\n    }\n\n    public getRange() {\n        return this.range;\n    }\n\n    public setSize(size: number) {\n        this.size = size;\n        return this;\n    }\n\n    /**\n     * Update the left and top offsets for drawing the brush.\n     */\n    public setOffset(offsetX: number, offsetY: number) {\n        this.offset = [offsetX, offsetY];\n        return this;\n    }\n\n    /**\n     * Update brush data based on the positions of two edges.\n     */\n    public updateRange(range: [number, number] | null) {\n        if (range) {\n            this.range = [Math.min(...range), Math.max(...range)];\n            this.data = this.rangeToData(...this.range);\n        } else {\n            this.range = null;\n        }\n        return this;\n    }\n\n    /**\n     * Update the brush using the internal range value. By default,\n     * This function calls a render function from gosling-track.\n     */\n    public drawBrush(skipApiTrigger = false) {\n        const [x, y] = this.offset;\n        const height = this.size;\n        const getWidth = (d: LinearBrushData[number]) => Math.abs(d.end - d.start); // the start and end can be minus values\n        this.brushSelection\n            .data(this.data)\n            .attr('transform', d => `translate(${x + d.start}, ${y + 1})`)\n            .attr('width', d => `${getWidth(d)}px`)\n            .attr('height', `${height - 2}px`)\n            .attr('fill', this.style.color)\n            .attr('stroke', this.style.stroke)\n            .attr('stroke-width', `${this.style.strokeWidth}px`)\n            .attr('fill-opacity', d => (d.type === 'body' ? this.style.opacity : 0))\n            .attr('stroke-opacity', d => (d.type === 'body' ? this.style.strokeOpacity : 0))\n            .attr('cursor', d => d.cursor);\n\n        this.emitter.emit('brush', this.getRange(), skipApiTrigger);\n        return this;\n    }\n\n    public enable() {\n        this.brushSelection.attr('pointer-events', 'all');\n        return this;\n    }\n\n    public disable() {\n        this.brushSelection.attr('pointer-events', 'none');\n        return this;\n    }\n\n    public visible() {\n        this.brushSelection.attr('visibility', 'visible');\n        return this;\n    }\n\n    public hidden() {\n        this.brushSelection.attr('visibility', 'hidden');\n        return this;\n    }\n\n    public clear() {\n        this.updateRange(null).drawBrush().hidden().disable();\n        return this;\n    }\n\n    public remove() {\n        this.brushSelection.remove();\n        return this;\n    }\n\n    /**\n     * Based on the extent values, generate a JSON object for the brush.\n     */\n    private rangeToData(start: number, end: number): LinearBrushData {\n        return [\n            {\n                type: 'body',\n                cursor: 'grab',\n                start,\n                end\n            },\n            {\n                type: 'start',\n                cursor: 'ew-resize',\n                start: start - HIDDEN_BRUSH_EDGE_SIZE,\n                end: start\n            },\n            {\n                type: 'end',\n                cursor: 'ew-resize',\n                start: end,\n                end: end + HIDDEN_BRUSH_EDGE_SIZE\n            }\n        ];\n    }\n\n    private onDrag() {\n        const started = (event: D3Drag.D3DragEvent<SVGElement, LinearBrushData[number], D3Drag.SubjectPosition>) => {\n            this.startEvent = event.sourceEvent;\n            this.prevExtent = this.range;\n        };\n\n        const dragged = (\n            event: D3Drag.D3DragEvent<SVGElement, LinearBrushData[number], D3Drag.SubjectPosition>,\n            d: LinearBrushData[number]\n        ) => {\n            const delta = event.sourceEvent.layerX - this.startEvent.layerX;\n\n            // previous extent of brush\n            let [s, e]: [number, number] = this.prevExtent ?? [0, 0];\n\n            if (d.type === 'body') {\n                s += delta;\n                e += delta;\n            } else if (d.type === 'start') {\n                s += delta;\n            } else if (d.type === 'end') {\n                e += delta;\n            }\n\n            this.updateRange([s, e]).drawBrush();\n        };\n\n        return this.externals.d3Drag\n            .drag<SVGRectElement, LinearBrushData[number]>()\n            .on('start', started)\n            .on('drag', dragged);\n    }\n\n    on<E extends keyof LinearBrushEvents>(event: E, callback: LinearBrushEvents[E]) {\n        this.emitter.on(event, callback);\n    }\n}\n","import { pointsToDegree } from '../../../core/utils/polar';\n\n/**\n * @param point Tuple of the form `[x,y]` to be tested.\n * @param center Tuple of the form `[x,y]` that correspond to the center of an arc.\n * @param radius The inner and outer radius of the arc.\n * @param angle The start and end angle the arc in the range of [0, 360]. Anticlockwise, starting from 12 o'clock.\n * @returns If `true` point lies within the arc, i.e., the slice of the donut.\n */\nexport const isPointInsideDonutSlice: (\n    point: [number, number],\n    center: [number, number],\n    radius: [number, number],\n    angle: [number, number]\n) => boolean = ([x, y], [cx, cy], [innerRadius, outerRadius], [startAngle, endAngle]) => {\n    const dist = Math.sqrt((x - cx) ** 2 + (y - cy) ** 2);\n    if (dist < innerRadius || outerRadius < dist) {\n        // Out of the given radius range\n        return false;\n    }\n    const degree = pointsToDegree(x, y, cx, cy);\n    if (degree < startAngle || endAngle < degree) {\n        // Out of the given angle range\n        return false;\n    }\n    return true;\n};\n\n/**\n * @param point Tuple of the form `[x,y]` to be tested.\n * @param point2 Tuple of the form `[x,y]` to be tested.\n * @param radius A radius of the second point.\n * @returns If `true` point lies within the point.\n */\nexport const isPointNearPoint: (point: [number, number], point2: number[], radius?: number) => boolean = (\n    [x1, y1],\n    [x2, y2],\n    radius = 5\n) => {\n    return Math.sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2) < radius;\n};\n\n/**\n * @param range Tuple of the form `[x1,x2]` to be tested.\n * @param point A value x to be tested.\n * @returns If `true` point lies within the point.\n */\nexport const isPointInsideRange: (range: [number, number], x: number) => boolean = ([x1, x2], x) => {\n    return x1 <= x && x <= x2;\n};\n\n/**\n * @param range Tuple of the form `[x1,x2]` to be tested.\n * @param x A value x to be tested.\n * @param radius A radius of the point.\n * @returns If `true` point lies within the point.\n */\nexport const isCircleWithinRange: (range: [number, number], x: number, radius?: number) => boolean = (\n    range,\n    x,\n    radius = 5\n) => {\n    return isPointInsideRange(range, x - radius) && isPointInsideRange(range, x + radius);\n};\n\n/**\n * @param point Tuple of the form `[x1,x2]` to be tested.\n * @param path 1D list of vertices defining the line segments.\n * @return If `true` point lies within the polygon.\n */\nexport const isAllPointsWithinRange: (range: [number, number], path: number[]) => boolean = (range, path) => {\n    return path.filter((_, i) => i % 2 === 0).every(x => isPointInsideRange(range, x));\n};\n\n/**\n * From: https://www.geeksforgeeks.org/minimum-distance-from-a-point-to-the-line-segment-using-vectors/\n * @param point Tuple of the form `[x,y]` to be tested.\n * @param path 1D list of vertices defining the line segments.\n * @param dist A threshold distance for test.\n * @return If `true` point lies within the polygon.\n */\nexport const isPointNearLine: (point: [number, number], path: number[], dist?: number) => boolean = (\n    [x, y],\n    path,\n    dist = 5\n) => {\n    let x1;\n    let y1;\n    let x2;\n    let y2;\n    let isWithin = false;\n    for (let i = 0; i < path.length - 2; i += 2) {\n        x1 = path[i];\n        y1 = path[i + 1];\n        x2 = path[i + 2];\n        y2 = path[i + 3];\n\n        const AB = [x2 - x1, y2 - y1];\n        const BE = [x - x2, y - y2];\n        const AE = [x - x1, y - y1];\n\n        // Variables to store dot product\n        const AB_BE = AB[0] * BE[0] + AB[1] * BE[1];\n        const AB_AE = AB[0] * AE[0] + AB[1] * AE[1];\n\n        let actDist = 0;\n        if (AB_BE > 0) {\n            actDist = Math.sqrt((y - y2) ** 2 + (x - x2) ** 2);\n        } else if (AB_AE < 0) {\n            actDist = Math.sqrt((y - y1) ** 2 + (x - x1) ** 2);\n        } else {\n            actDist = Math.abs(AB[0] * AE[1] - AB[1] * AE[0]) / Math.sqrt(AB[0] ** 2 + AB[1] ** 2);\n        }\n        if (actDist < dist) {\n            isWithin = true;\n        }\n    }\n    return isWithin;\n};\n\n/**\n * Adopted from\n * https://github.com/flekschas/utils\n * https://wrf.ecse.rpi.edu//Research/Short_Notes/pnpoly.html\n * @param point Tuple of the form `[x,y]` to be tested.\n * @param polygon 1D list of vertices defining the polygon.\n * @return If `true` point lies within the polygon.\n */\nexport const isPointInPolygon: (point: [number, number], polygon: number[]) => boolean = ([x, y], polygon) => {\n    let x1;\n    let y1;\n    let x2;\n    let y2;\n    let isWithin = false;\n    for (let i = 0, j = polygon.length - 2; i < polygon.length; i += 2) {\n        x1 = polygon[i];\n        y1 = polygon[i + 1];\n        x2 = polygon[j];\n        y2 = polygon[j + 1];\n        if (y1 > y !== y2 > y && x < ((x2 - x1) * (y - y1)) / (y2 - y1) + x1) {\n            isWithin = !isWithin;\n        }\n        j = i;\n    }\n    return isWithin;\n};\n","import type { Datum } from '@gosling-lang/gosling-schema';\nimport {\n    isAllPointsWithinRange,\n    isPointInPolygon,\n    isPointNearLine,\n    isPointNearPoint,\n    isCircleWithinRange\n} from './polygon';\nimport { uuid } from '../../../core/utils/uuid';\n\nexport type MouseEventData = PointEventData | LineEventData | PolygonEventData;\n\ninterface CommonEventData {\n    uid: string;\n    value: Datum;\n}\n\ninterface PointEventData extends CommonEventData {\n    type: 'point';\n    polygon: [number, number, number]; // [x, y, radius]\n}\n\ninterface LineEventData extends CommonEventData {\n    type: 'line';\n    polygon: number[]; // [x1, y1, x2, y2, ...]\n}\n\ninterface PolygonEventData extends CommonEventData {\n    type: 'polygon';\n    polygon: number[]; // [x1, y1, x2, y2, ...]\n}\n\n/**\n * A model to manage mouse events.\n */\nexport class MouseEventModel {\n    // main data that this model manage\n    private data: MouseEventData[];\n\n    constructor() {\n        this.data = [];\n    }\n\n    /**\n     * Access the number of mouse events stored.\n     */\n    public size() {\n        return this.data.length;\n    }\n\n    /**\n     * Add a new mouse event that is polygon-based.\n     */\n    public addPolygonBasedEvent(value: Datum, polygon: number[]) {\n        this.data.push({ uid: uuid(), type: 'polygon', value, polygon });\n    }\n\n    /**\n     * Add a new mouse event that is point-based.\n     */\n    public addPointBasedEvent(value: Datum, pointAndRadius: [number, number, number]) {\n        this.data.push({ uid: uuid(), type: 'point', value, polygon: pointAndRadius });\n    }\n\n    /**\n     * Add a new mouse event that is line-based.\n     */\n    public addLineBasedEvent(value: Datum, path: number[]) {\n        this.data.push({ uid: uuid(), type: 'line', value, polygon: path });\n    }\n\n    /**\n     * Make the data array empty.\n     */\n    public clear() {\n        this.data = [];\n    }\n\n    /**\n     * Find the first event data that is within the mouse position.\n     */\n    public find(x: number, y: number, reverse = false) {\n        const _ = Array.from(this.data);\n        if (reverse) _.reverse();\n        return _.find(d => this.isMouseWithin(d, x, y));\n    }\n\n    /**\n     * Find all event data that is within the mouse position.\n     */\n    public findAll(x: number, y: number, reverse = false) {\n        const _ = Array.from(this.data);\n        if (reverse) _.reverse();\n        return _.filter(d => this.isMouseWithin(d, x, y));\n    }\n\n    /**\n     * Find all event data that matches the id values in the source and return them.\n     */\n    public getSiblings(source: MouseEventData[], idField: string) {\n        const siblings: MouseEventData[] = [];\n        const sourceUids = Array.from(new Set(source.map(d => d.uid)));\n        source.forEach(s => {\n            const id = s.value[idField];\n            if (id) {\n                siblings.push(...this.data.filter(_ => _.value[idField] === id && sourceUids.indexOf(_.uid) === -1));\n            }\n        });\n        return siblings;\n    }\n\n    /**\n     * Test if a mouse position is within a given object.\n     */\n    public isMouseWithin(data: MouseEventData, x: number, y: number) {\n        switch (data.type) {\n            case 'point':\n                return isPointNearPoint([x, y], data.polygon);\n            case 'line':\n                return isPointNearLine([x, y], data.polygon);\n            case 'polygon':\n            default:\n                return isPointInPolygon([x, y], data.polygon);\n        }\n    }\n\n    /**\n     * Find all event data that is within the range along the x-axis.\n     */\n    public findAllWithinRange(x1: number, x2: number, reverse = false) {\n        const _ = Array.from(this.data);\n        if (reverse) _.reverse();\n        return _.filter(d => this.isWithinRange(d, x1, x2));\n    }\n\n    /**\n     * Test if a given object is within an 1D range.\n     */\n    public isWithinRange(data: MouseEventData, x1: number, x2: number) {\n        switch (data.type) {\n            case 'point':\n                return isCircleWithinRange([x1, x2], data.polygon[0], data.polygon[2]);\n            case 'line':\n            case 'polygon':\n            default:\n                return isAllPointsWithinRange([x1, x2], data.polygon);\n        }\n    }\n}\n","/*\n * This code is based on the following repo:\n * https://github.com/higlass/higlass-pileup\n */\nimport { spawn } from 'threads';\nimport Worker from './bam-worker.ts?worker&inline';\n\nimport type { BamData, Assembly } from '@gosling-lang/gosling-schema';\nimport type { ModuleThread } from 'threads';\nimport type { WorkerApi, TilesetInfo, Tiles, Segment, Junction, SegmentWithMate } from './bam-worker';\nimport { computeChromSizes } from '../../core/utils/assembly';\nimport type { TabularDataFetcher } from '../utils';\n\nconst DEBOUNCE_TIME = 200;\n\ntype InferTileType<Config extends BamData> = Config['extractJunction'] extends true\n    ? Junction\n    : Config['loadMates'] extends true\n    ? SegmentWithMate\n    : Segment;\n\nclass BamDataFetcher<Config extends BamData> implements TabularDataFetcher<InferTileType<Config>> {\n    static config = { type: 'bam' };\n    dataConfig = {}; // required for higlass\n    uid: string;\n    fetchTimeout?: ReturnType<typeof setTimeout>;\n    toFetch: Set<string>;\n\n    MAX_TILE_WIDTH = 2e4 as const;\n\n    private worker: Promise<ModuleThread<WorkerApi>>;\n\n    // This is set by us but is accessed in `fetchTilesDebounced`\n    track?: {\n        fetching: { delete(id: string): void };\n    };\n\n    constructor(HGC: import('@higlass/types').HGC, config: Config & { assembly: Assembly }) {\n        this.uid = HGC.libraries.slugid.nice();\n        this.toFetch = new Set();\n        const { url, indexUrl, assembly, ...options } = config;\n        this.worker = spawn<WorkerApi>(new Worker()).then(async worker => {\n            const chromSizes = Object.entries(computeChromSizes(assembly).size);\n            await worker.init(this.uid, { url, indexUrl }, chromSizes, options);\n            return worker;\n        });\n    }\n\n    /*\n     * Collect Tileset Information, such as tile size and genomic positions\n     */\n    async tilesetInfo(callback: (info: TilesetInfo) => void) {\n        (await this.worker).tilesetInfo(this.uid).then(callback);\n    }\n\n    fetchTilesDebounced(receivedTiles: (tiles: Tiles) => void, tileIds: string[]) {\n        const { toFetch } = this;\n\n        const thisZoomLevel = tileIds[0].split('.')[0]; // Example of tileIds: [\"3.0\", \"3.1\"]\n        const toFetchZoomLevel = toFetch.size ? [...toFetch][0].split('.')[0] : null;\n\n        if (thisZoomLevel !== toFetchZoomLevel) {\n            for (const tileId of this.toFetch) {\n                this.track?.fetching.delete(tileId);\n            }\n            this.toFetch.clear();\n        }\n\n        tileIds.forEach(x => this.toFetch.add(x));\n\n        if (this.fetchTimeout) {\n            clearTimeout(this.fetchTimeout);\n        }\n\n        this.fetchTimeout = setTimeout(() => {\n            this.sendFetch(receivedTiles, [...this.toFetch]);\n            this.toFetch.clear();\n        }, DEBOUNCE_TIME);\n    }\n\n    async sendFetch(receivedTiles: (tiles: Tiles) => void, tileIds: string[]) {\n        (await this.worker).fetchTilesDebounced(this.uid, tileIds).then(receivedTiles);\n    }\n\n    async getTabularData(tileIds: string[]): Promise<InferTileType<Config>[]> {\n        const buf = await (await this.worker).getTabularData(this.uid, tileIds);\n        return JSON.parse(new TextDecoder().decode(buf));\n    }\n}\n\nexport default BamDataFetcher;\n","/*\n * This document is heavily based on the following repo by @alexander-veit:\n * https://github.com/dbmi-bgm/higlass-sv/blob/main/src/sv-fetcher.js\n */\nimport { spawn } from 'threads';\nimport Worker from './vcf-worker.ts?worker&inline';\n\nimport { computeChromSizes } from '../../core/utils/assembly';\n\nimport type { ModuleThread } from 'threads';\nimport type { Assembly, VcfData } from '@gosling-lang/gosling-schema';\nimport type { WorkerApi, TilesetInfo } from './vcf-worker';\nimport type { TabularDataFetcher } from '../utils';\nimport { getSubstitutionType, getMutationType } from './utils';\n\nconst DEBOUNCE_TIME = 200;\n\n// const MAX_TILES = 20;\n// https://github.com/GMOD/vcf-js/blob/c4a9cbad3ba5a3f0d1c817d685213f111bf9de9b/src/parse.ts#L284-L291\nexport type VcfRecord = {\n    CHROM: string;\n    POS: number;\n    ID: null | string[];\n    REF: string;\n    ALT: null | string[];\n    QUAL: null | number;\n    FILTER: null | string;\n    INFO: Record<string, true | (number | null)[] | string[]>;\n};\n\nexport type VcfTile = Omit<VcfRecord, 'ALT' | 'INFO'> & {\n    ALT: string | undefined;\n    MUTTYPE: ReturnType<typeof getMutationType>;\n    SUBTYPE: ReturnType<typeof getSubstitutionType>;\n    INFO: string;\n    ORIGINALPOS: number;\n    POS: number;\n    POSEND: number;\n    DISTPREV: number | null;\n    DISTPREVLOGE: number | null;\n} & { [infoKey: string]: any };\n\nclass VcfDataFetcher implements TabularDataFetcher<VcfTile> {\n    static config = { type: 'vcf' };\n    dataConfig = {}; // required for higlass\n    uid: string;\n    prevRequestTime: number;\n    track?: any;\n\n    private toFetch: Set<string>;\n    private fetchTimeout?: ReturnType<typeof setTimeout>;\n    private worker: Promise<ModuleThread<WorkerApi>>;\n\n    constructor(HGC: import('@higlass/types').HGC, config: VcfData & { assembly: Assembly }) {\n        this.uid = HGC.libraries.slugid.nice();\n        this.prevRequestTime = 0;\n        this.toFetch = new Set();\n        const { url, indexUrl, assembly, ...options } = config;\n        this.worker = spawn<WorkerApi>(new Worker()).then(async worker => {\n            const chromSizes = Object.entries(computeChromSizes(assembly).size);\n            await worker.init(this.uid, { url, indexUrl }, chromSizes, options);\n            return worker;\n        });\n    }\n\n    /*\n     * Collect Tileset Information, such as tile size and genomic positions\n     */\n    async tilesetInfo(callback: (info: TilesetInfo) => void) {\n        (await this.worker).tilesetInfo(this.uid).then(callback);\n    }\n\n    fetchTilesDebounced(receivedTiles: (tiles: Record<string, VcfTile>) => void, tileIds: string[]) {\n        this.track.drawLoadingCue();\n\n        tileIds.forEach(tileId => this.toFetch.add(tileId));\n\n        if (this.fetchTimeout) {\n            clearTimeout(this.fetchTimeout);\n        }\n\n        this.fetchTimeout = setTimeout(() => {\n            this.sendFetch(receivedTiles, [...this.toFetch]);\n            this.toFetch.clear();\n        }, DEBOUNCE_TIME);\n    }\n\n    async sendFetch(receivedTiles: (tiles: Record<string, VcfTile>) => void, tileIds: string[]) {\n        (await this.worker).fetchTilesDebounced(this.uid, tileIds).then(receivedTiles);\n    }\n\n    async getTabularData(tileIds: string[]): Promise<VcfTile[]> {\n        const buf = await (await this.worker).getTabularData(this.uid, tileIds);\n        return JSON.parse(new TextDecoder().decode(buf));\n    }\n}\n\nexport default VcfDataFetcher;\n","const BigInt32 = BigInt(32);\nexport function getBigInt64(dataView, byteOffset, littleEndian) {\n    const littleEndianMask = Number(!!littleEndian);\n    const bigEndianMask = Number(!littleEndian);\n    return ((BigInt(dataView.getInt32(byteOffset, littleEndian) * bigEndianMask +\n        dataView.getInt32(byteOffset + 4, littleEndian) * littleEndianMask) <<\n        BigInt32) |\n        BigInt(dataView.getUint32(byteOffset, littleEndian) * littleEndianMask +\n            dataView.getUint32(byteOffset + 4, littleEndian) * bigEndianMask));\n}\nexport function getBigUint64(dataView, byteOffset, littleEndian) {\n    const a = dataView.getUint32(byteOffset, littleEndian);\n    const b = dataView.getUint32(byteOffset + 4, littleEndian);\n    const littleEndianMask = Number(!!littleEndian);\n    const bigEndianMask = Number(!littleEndian);\n    // This branch-less optimization is 77x faster than normal ternary operator.\n    // and only 3% slower than native implementation\n    // https://jsbench.me/p8kyhg1eqv/1\n    return ((BigInt(a * bigEndianMask + b * littleEndianMask) << BigInt32) |\n        BigInt(a * littleEndianMask + b * bigEndianMask));\n}\nexport function setBigInt64(dataView, byteOffset, value, littleEndian) {\n    const hi = Number(value >> BigInt32);\n    const lo = Number(value & BigInt(0xffffffff));\n    if (littleEndian) {\n        dataView.setInt32(byteOffset + 4, hi, littleEndian);\n        dataView.setUint32(byteOffset, lo, littleEndian);\n    }\n    else {\n        dataView.setInt32(byteOffset, hi, littleEndian);\n        dataView.setUint32(byteOffset + 4, lo, littleEndian);\n    }\n}\nexport function setBigUint64(dataView, byteOffset, value, littleEndian) {\n    const hi = Number(value >> BigInt32);\n    const lo = Number(value & BigInt(0xffffffff));\n    if (littleEndian) {\n        dataView.setUint32(byteOffset + 4, hi, littleEndian);\n        dataView.setUint32(byteOffset, lo, littleEndian);\n    }\n    else {\n        dataView.setUint32(byteOffset, hi, littleEndian);\n        dataView.setUint32(byteOffset + 4, lo, littleEndian);\n    }\n}\n//# sourceMappingURL=pure.js.map","import { getBigInt64, getBigUint64, setBigInt64, setBigUint64 } from './pure';\nif (!('getBigInt64' in DataView)) {\n    DataView.prototype.getBigInt64 = function (byteOffset, littleEndian) {\n        return getBigInt64(this, byteOffset, littleEndian);\n    };\n}\nif (!('getBigUint64' in DataView)) {\n    DataView.prototype.getBigUint64 = function (byteOffset, littleEndian) {\n        return getBigUint64(this, byteOffset, littleEndian);\n    };\n}\nif (!('setBigInt64' in DataView)) {\n    DataView.prototype.setBigInt64 = function (byteOffset, value, littleEndian) {\n        setBigInt64(this, byteOffset, value, littleEndian);\n    };\n}\nif (!('setBigUint64' in DataView)) {\n    DataView.prototype.setBigUint64 = function (byteOffset, value, littleEndian) {\n        setBigUint64(this, byteOffset, value, littleEndian);\n    };\n}\n//# sourceMappingURL=polyfill.js.map","class Context {\n    constructor(importPath, useContextVariables) {\n        this.code = \"\";\n        this.scopes = [[\"vars\"]];\n        this.bitFields = [];\n        this.tmpVariableCount = 0;\n        this.references = new Map();\n        this.imports = [];\n        this.reverseImports = new Map();\n        this.useContextVariables = false;\n        this.importPath = importPath;\n        this.useContextVariables = useContextVariables;\n    }\n    generateVariable(name) {\n        const scopes = [...this.scopes[this.scopes.length - 1]];\n        if (name) {\n            scopes.push(name);\n        }\n        return scopes.join(\".\");\n    }\n    generateOption(val) {\n        switch (typeof val) {\n            case \"number\":\n                return val.toString();\n            case \"string\":\n                return this.generateVariable(val);\n            case \"function\":\n                return `${this.addImport(val)}.call(${this.generateVariable()}, vars)`;\n        }\n    }\n    generateError(err) {\n        this.pushCode(`throw new Error(${err});`);\n    }\n    generateTmpVariable() {\n        return \"$tmp\" + this.tmpVariableCount++;\n    }\n    pushCode(code) {\n        this.code += code + \"\\n\";\n    }\n    pushPath(name) {\n        if (name) {\n            this.scopes[this.scopes.length - 1].push(name);\n        }\n    }\n    popPath(name) {\n        if (name) {\n            this.scopes[this.scopes.length - 1].pop();\n        }\n    }\n    pushScope(name) {\n        this.scopes.push([name]);\n    }\n    popScope() {\n        this.scopes.pop();\n    }\n    addImport(im) {\n        if (!this.importPath)\n            return `(${im})`;\n        let id = this.reverseImports.get(im);\n        if (!id) {\n            id = this.imports.push(im) - 1;\n            this.reverseImports.set(im, id);\n        }\n        return `${this.importPath}[${id}]`;\n    }\n    addReference(alias) {\n        if (!this.references.has(alias)) {\n            this.references.set(alias, { resolved: false, requested: false });\n        }\n    }\n    markResolved(alias) {\n        const reference = this.references.get(alias);\n        if (reference) {\n            reference.resolved = true;\n        }\n    }\n    markRequested(aliasList) {\n        aliasList.forEach((alias) => {\n            const reference = this.references.get(alias);\n            if (reference) {\n                reference.requested = true;\n            }\n        });\n    }\n    getUnresolvedReferences() {\n        return Array.from(this.references)\n            .filter(([_, reference]) => !reference.resolved && !reference.requested)\n            .map(([alias, _]) => alias);\n    }\n}\nconst aliasRegistry = new Map();\nconst FUNCTION_PREFIX = \"___parser_\";\nconst PRIMITIVE_SIZES = {\n    uint8: 1,\n    uint16le: 2,\n    uint16be: 2,\n    uint32le: 4,\n    uint32be: 4,\n    int8: 1,\n    int16le: 2,\n    int16be: 2,\n    int32le: 4,\n    int32be: 4,\n    int64be: 8,\n    int64le: 8,\n    uint64be: 8,\n    uint64le: 8,\n    floatle: 4,\n    floatbe: 4,\n    doublele: 8,\n    doublebe: 8,\n};\nconst PRIMITIVE_NAMES = {\n    uint8: \"Uint8\",\n    uint16le: \"Uint16\",\n    uint16be: \"Uint16\",\n    uint32le: \"Uint32\",\n    uint32be: \"Uint32\",\n    int8: \"Int8\",\n    int16le: \"Int16\",\n    int16be: \"Int16\",\n    int32le: \"Int32\",\n    int32be: \"Int32\",\n    int64be: \"BigInt64\",\n    int64le: \"BigInt64\",\n    uint64be: \"BigUint64\",\n    uint64le: \"BigUint64\",\n    floatle: \"Float32\",\n    floatbe: \"Float32\",\n    doublele: \"Float64\",\n    doublebe: \"Float64\",\n};\nconst PRIMITIVE_LITTLE_ENDIANS = {\n    uint8: false,\n    uint16le: true,\n    uint16be: false,\n    uint32le: true,\n    uint32be: false,\n    int8: false,\n    int16le: true,\n    int16be: false,\n    int32le: true,\n    int32be: false,\n    int64be: false,\n    int64le: true,\n    uint64be: false,\n    uint64le: true,\n    floatle: true,\n    floatbe: false,\n    doublele: true,\n    doublebe: false,\n};\nexport class Parser {\n    constructor() {\n        this.varName = \"\";\n        this.type = \"\";\n        this.options = {};\n        this.endian = \"be\";\n        this.useContextVariables = false;\n    }\n    static start() {\n        return new Parser();\n    }\n    primitiveGenerateN(type, ctx) {\n        const typeName = PRIMITIVE_NAMES[type];\n        const littleEndian = PRIMITIVE_LITTLE_ENDIANS[type];\n        ctx.pushCode(`${ctx.generateVariable(this.varName)} = dataView.get${typeName}(offset, ${littleEndian});`);\n        ctx.pushCode(`offset += ${PRIMITIVE_SIZES[type]};`);\n    }\n    primitiveN(type, varName, options) {\n        return this.setNextParser(type, varName, options);\n    }\n    useThisEndian(type) {\n        return (type + this.endian.toLowerCase());\n    }\n    uint8(varName, options = {}) {\n        return this.primitiveN(\"uint8\", varName, options);\n    }\n    uint16(varName, options = {}) {\n        return this.primitiveN(this.useThisEndian(\"uint16\"), varName, options);\n    }\n    uint16le(varName, options = {}) {\n        return this.primitiveN(\"uint16le\", varName, options);\n    }\n    uint16be(varName, options = {}) {\n        return this.primitiveN(\"uint16be\", varName, options);\n    }\n    uint32(varName, options = {}) {\n        return this.primitiveN(this.useThisEndian(\"uint32\"), varName, options);\n    }\n    uint32le(varName, options = {}) {\n        return this.primitiveN(\"uint32le\", varName, options);\n    }\n    uint32be(varName, options = {}) {\n        return this.primitiveN(\"uint32be\", varName, options);\n    }\n    int8(varName, options = {}) {\n        return this.primitiveN(\"int8\", varName, options);\n    }\n    int16(varName, options = {}) {\n        return this.primitiveN(this.useThisEndian(\"int16\"), varName, options);\n    }\n    int16le(varName, options = {}) {\n        return this.primitiveN(\"int16le\", varName, options);\n    }\n    int16be(varName, options = {}) {\n        return this.primitiveN(\"int16be\", varName, options);\n    }\n    int32(varName, options = {}) {\n        return this.primitiveN(this.useThisEndian(\"int32\"), varName, options);\n    }\n    int32le(varName, options = {}) {\n        return this.primitiveN(\"int32le\", varName, options);\n    }\n    int32be(varName, options = {}) {\n        return this.primitiveN(\"int32be\", varName, options);\n    }\n    bigIntVersionCheck() {\n        if (!DataView.prototype.getBigInt64)\n            throw new Error(\"BigInt64 is unsupported on this runtime\");\n    }\n    int64(varName, options = {}) {\n        this.bigIntVersionCheck();\n        return this.primitiveN(this.useThisEndian(\"int64\"), varName, options);\n    }\n    int64be(varName, options = {}) {\n        this.bigIntVersionCheck();\n        return this.primitiveN(\"int64be\", varName, options);\n    }\n    int64le(varName, options = {}) {\n        this.bigIntVersionCheck();\n        return this.primitiveN(\"int64le\", varName, options);\n    }\n    uint64(varName, options = {}) {\n        this.bigIntVersionCheck();\n        return this.primitiveN(this.useThisEndian(\"uint64\"), varName, options);\n    }\n    uint64be(varName, options = {}) {\n        this.bigIntVersionCheck();\n        return this.primitiveN(\"uint64be\", varName, options);\n    }\n    uint64le(varName, options = {}) {\n        this.bigIntVersionCheck();\n        return this.primitiveN(\"uint64le\", varName, options);\n    }\n    floatle(varName, options = {}) {\n        return this.primitiveN(\"floatle\", varName, options);\n    }\n    floatbe(varName, options = {}) {\n        return this.primitiveN(\"floatbe\", varName, options);\n    }\n    doublele(varName, options = {}) {\n        return this.primitiveN(\"doublele\", varName, options);\n    }\n    doublebe(varName, options = {}) {\n        return this.primitiveN(\"doublebe\", varName, options);\n    }\n    bitN(size, varName, options) {\n        options.length = size;\n        return this.setNextParser(\"bit\", varName, options);\n    }\n    bit1(varName, options = {}) {\n        return this.bitN(1, varName, options);\n    }\n    bit2(varName, options = {}) {\n        return this.bitN(2, varName, options);\n    }\n    bit3(varName, options = {}) {\n        return this.bitN(3, varName, options);\n    }\n    bit4(varName, options = {}) {\n        return this.bitN(4, varName, options);\n    }\n    bit5(varName, options = {}) {\n        return this.bitN(5, varName, options);\n    }\n    bit6(varName, options = {}) {\n        return this.bitN(6, varName, options);\n    }\n    bit7(varName, options = {}) {\n        return this.bitN(7, varName, options);\n    }\n    bit8(varName, options = {}) {\n        return this.bitN(8, varName, options);\n    }\n    bit9(varName, options = {}) {\n        return this.bitN(9, varName, options);\n    }\n    bit10(varName, options = {}) {\n        return this.bitN(10, varName, options);\n    }\n    bit11(varName, options = {}) {\n        return this.bitN(11, varName, options);\n    }\n    bit12(varName, options = {}) {\n        return this.bitN(12, varName, options);\n    }\n    bit13(varName, options = {}) {\n        return this.bitN(13, varName, options);\n    }\n    bit14(varName, options = {}) {\n        return this.bitN(14, varName, options);\n    }\n    bit15(varName, options = {}) {\n        return this.bitN(15, varName, options);\n    }\n    bit16(varName, options = {}) {\n        return this.bitN(16, varName, options);\n    }\n    bit17(varName, options = {}) {\n        return this.bitN(17, varName, options);\n    }\n    bit18(varName, options = {}) {\n        return this.bitN(18, varName, options);\n    }\n    bit19(varName, options = {}) {\n        return this.bitN(19, varName, options);\n    }\n    bit20(varName, options = {}) {\n        return this.bitN(20, varName, options);\n    }\n    bit21(varName, options = {}) {\n        return this.bitN(21, varName, options);\n    }\n    bit22(varName, options = {}) {\n        return this.bitN(22, varName, options);\n    }\n    bit23(varName, options = {}) {\n        return this.bitN(23, varName, options);\n    }\n    bit24(varName, options = {}) {\n        return this.bitN(24, varName, options);\n    }\n    bit25(varName, options = {}) {\n        return this.bitN(25, varName, options);\n    }\n    bit26(varName, options = {}) {\n        return this.bitN(26, varName, options);\n    }\n    bit27(varName, options = {}) {\n        return this.bitN(27, varName, options);\n    }\n    bit28(varName, options = {}) {\n        return this.bitN(28, varName, options);\n    }\n    bit29(varName, options = {}) {\n        return this.bitN(29, varName, options);\n    }\n    bit30(varName, options = {}) {\n        return this.bitN(30, varName, options);\n    }\n    bit31(varName, options = {}) {\n        return this.bitN(31, varName, options);\n    }\n    bit32(varName, options = {}) {\n        return this.bitN(32, varName, options);\n    }\n    namely(alias) {\n        aliasRegistry.set(alias, this);\n        this.alias = alias;\n        return this;\n    }\n    skip(length, options = {}) {\n        return this.seek(length, options);\n    }\n    seek(relOffset, options = {}) {\n        if (options.assert) {\n            throw new Error(\"assert option on seek is not allowed.\");\n        }\n        return this.setNextParser(\"seek\", \"\", { length: relOffset });\n    }\n    string(varName, options) {\n        if (!options.zeroTerminated && !options.length && !options.greedy) {\n            throw new Error(\"One of length, zeroTerminated, or greedy must be defined for string.\");\n        }\n        if ((options.zeroTerminated || options.length) && options.greedy) {\n            throw new Error(\"greedy is mutually exclusive with length and zeroTerminated for string.\");\n        }\n        if (options.stripNull && !(options.length || options.greedy)) {\n            throw new Error(\"length or greedy must be defined if stripNull is enabled.\");\n        }\n        options.encoding = options.encoding || \"utf8\";\n        return this.setNextParser(\"string\", varName, options);\n    }\n    buffer(varName, options) {\n        if (!options.length && !options.readUntil) {\n            throw new Error(\"length or readUntil must be defined for buffer.\");\n        }\n        return this.setNextParser(\"buffer\", varName, options);\n    }\n    wrapped(varName, options) {\n        if (typeof options !== \"object\" && typeof varName === \"object\") {\n            options = varName;\n            varName = \"\";\n        }\n        if (!options || !options.wrapper || !options.type) {\n            throw new Error(\"Both wrapper and type must be defined for wrapped.\");\n        }\n        if (!options.length && !options.readUntil) {\n            throw new Error(\"length or readUntil must be defined for wrapped.\");\n        }\n        return this.setNextParser(\"wrapper\", varName, options);\n    }\n    array(varName, options) {\n        if (!options.readUntil && !options.length && !options.lengthInBytes) {\n            throw new Error(\"One of readUntil, length and lengthInBytes must be defined for array.\");\n        }\n        if (!options.type) {\n            throw new Error(\"type is required for array.\");\n        }\n        if (typeof options.type === \"string\" &&\n            !aliasRegistry.has(options.type) &&\n            !(options.type in PRIMITIVE_SIZES)) {\n            throw new Error(`Array element type \"${options.type}\" is unkown.`);\n        }\n        return this.setNextParser(\"array\", varName, options);\n    }\n    choice(varName, options) {\n        if (typeof options !== \"object\" && typeof varName === \"object\") {\n            options = varName;\n            varName = \"\";\n        }\n        if (!options) {\n            throw new Error(\"tag and choices are are required for choice.\");\n        }\n        if (!options.tag) {\n            throw new Error(\"tag is requird for choice.\");\n        }\n        if (!options.choices) {\n            throw new Error(\"choices is required for choice.\");\n        }\n        for (const keyString in options.choices) {\n            const key = parseInt(keyString, 10);\n            const value = options.choices[key];\n            if (isNaN(key)) {\n                throw new Error(`Choice key \"${keyString}\" is not a number.`);\n            }\n            if (typeof value === \"string\" &&\n                !aliasRegistry.has(value) &&\n                !(value in PRIMITIVE_SIZES)) {\n                throw new Error(`Choice type \"${value}\" is unkown.`);\n            }\n        }\n        return this.setNextParser(\"choice\", varName, options);\n    }\n    nest(varName, options) {\n        if (typeof options !== \"object\" && typeof varName === \"object\") {\n            options = varName;\n            varName = \"\";\n        }\n        if (!options || !options.type) {\n            throw new Error(\"type is required for nest.\");\n        }\n        if (!(options.type instanceof Parser) && !aliasRegistry.has(options.type)) {\n            throw new Error(\"type must be a known parser name or a Parser object.\");\n        }\n        if (!(options.type instanceof Parser) && !varName) {\n            throw new Error(\"type must be a Parser object if the variable name is omitted.\");\n        }\n        return this.setNextParser(\"nest\", varName, options);\n    }\n    pointer(varName, options) {\n        if (!options.offset) {\n            throw new Error(\"offset is required for pointer.\");\n        }\n        if (!options.type) {\n            throw new Error(\"type is required for pointer.\");\n        }\n        if (typeof options.type === \"string\" &&\n            !(options.type in PRIMITIVE_SIZES) &&\n            !aliasRegistry.has(options.type)) {\n            throw new Error(`Pointer type \"${options.type}\" is unkown.`);\n        }\n        return this.setNextParser(\"pointer\", varName, options);\n    }\n    saveOffset(varName, options = {}) {\n        return this.setNextParser(\"saveOffset\", varName, options);\n    }\n    endianness(endianness) {\n        switch (endianness.toLowerCase()) {\n            case \"little\":\n                this.endian = \"le\";\n                break;\n            case \"big\":\n                this.endian = \"be\";\n                break;\n            default:\n                throw new Error('endianness must be one of \"little\" or \"big\"');\n        }\n        return this;\n    }\n    endianess(endianess) {\n        return this.endianness(endianess);\n    }\n    useContextVars(useContextVariables = true) {\n        this.useContextVariables = useContextVariables;\n        return this;\n    }\n    create(constructorFn) {\n        if (!(constructorFn instanceof Function)) {\n            throw new Error(\"Constructor must be a Function object.\");\n        }\n        this.constructorFn = constructorFn;\n        return this;\n    }\n    getContext(importPath) {\n        const ctx = new Context(importPath, this.useContextVariables);\n        ctx.pushCode(\"var dataView = new DataView(buffer.buffer, buffer.byteOffset, buffer.length);\");\n        if (!this.alias) {\n            this.addRawCode(ctx);\n        }\n        else {\n            this.addAliasedCode(ctx);\n            ctx.pushCode(`return ${FUNCTION_PREFIX + this.alias}(0).result;`);\n        }\n        return ctx;\n    }\n    getCode() {\n        const importPath = \"imports\";\n        return this.getContext(importPath).code;\n    }\n    addRawCode(ctx) {\n        ctx.pushCode(\"var offset = 0;\");\n        ctx.pushCode(`var vars = ${this.constructorFn ? \"new constructorFn()\" : \"{}\"};`);\n        ctx.pushCode(\"vars.$parent = null;\");\n        ctx.pushCode(\"vars.$root = vars;\");\n        this.generate(ctx);\n        this.resolveReferences(ctx);\n        ctx.pushCode(\"delete vars.$parent;\");\n        ctx.pushCode(\"delete vars.$root;\");\n        ctx.pushCode(\"return vars;\");\n    }\n    addAliasedCode(ctx) {\n        ctx.pushCode(`function ${FUNCTION_PREFIX + this.alias}(offset, context) {`);\n        ctx.pushCode(`var vars = ${this.constructorFn ? \"new constructorFn()\" : \"{}\"};`);\n        ctx.pushCode(\"var ctx = Object.assign({$parent: null, $root: vars}, context || {});\");\n        ctx.pushCode(`vars = Object.assign(vars, ctx);`);\n        this.generate(ctx);\n        ctx.markResolved(this.alias);\n        this.resolveReferences(ctx);\n        ctx.pushCode(\"Object.keys(ctx).forEach(function (item) { delete vars[item]; });\");\n        ctx.pushCode(\"return { offset: offset, result: vars };\");\n        ctx.pushCode(\"}\");\n        return ctx;\n    }\n    resolveReferences(ctx) {\n        const references = ctx.getUnresolvedReferences();\n        ctx.markRequested(references);\n        references.forEach((alias) => {\n            var _a;\n            (_a = aliasRegistry.get(alias)) === null || _a === void 0 ? void 0 : _a.addAliasedCode(ctx);\n        });\n    }\n    compile() {\n        const importPath = \"imports\";\n        const ctx = this.getContext(importPath);\n        this.compiled = new Function(importPath, \"TextDecoder\", `return function (buffer, constructorFn) { ${ctx.code} };`)(ctx.imports, TextDecoder);\n    }\n    sizeOf() {\n        let size = NaN;\n        if (Object.keys(PRIMITIVE_SIZES).indexOf(this.type) >= 0) {\n            size = PRIMITIVE_SIZES[this.type];\n            // if this is a fixed length string\n        }\n        else if (this.type === \"string\" &&\n            typeof this.options.length === \"number\") {\n            size = this.options.length;\n            // if this is a fixed length buffer\n        }\n        else if (this.type === \"buffer\" &&\n            typeof this.options.length === \"number\") {\n            size = this.options.length;\n            // if this is a fixed length array\n        }\n        else if (this.type === \"array\" &&\n            typeof this.options.length === \"number\") {\n            let elementSize = NaN;\n            if (typeof this.options.type === \"string\") {\n                elementSize = PRIMITIVE_SIZES[this.options.type];\n            }\n            else if (this.options.type instanceof Parser) {\n                elementSize = this.options.type.sizeOf();\n            }\n            size = this.options.length * elementSize;\n            // if this a skip\n        }\n        else if (this.type === \"seek\") {\n            size = this.options.length;\n            // if this is a nested parser\n        }\n        else if (this.type === \"nest\") {\n            size = this.options.type.sizeOf();\n        }\n        else if (!this.type) {\n            size = 0;\n        }\n        if (this.next) {\n            size += this.next.sizeOf();\n        }\n        return size;\n    }\n    // Follow the parser chain till the root and start parsing from there\n    parse(buffer) {\n        if (!this.compiled) {\n            this.compile();\n        }\n        return this.compiled(buffer, this.constructorFn);\n    }\n    setNextParser(type, varName, options) {\n        const parser = new Parser();\n        parser.type = type;\n        parser.varName = varName;\n        parser.options = options;\n        parser.endian = this.endian;\n        if (this.head) {\n            this.head.next = parser;\n        }\n        else {\n            this.next = parser;\n        }\n        this.head = parser;\n        return this;\n    }\n    // Call code generator for this parser\n    generate(ctx) {\n        if (this.type) {\n            switch (this.type) {\n                case \"uint8\":\n                case \"uint16le\":\n                case \"uint16be\":\n                case \"uint32le\":\n                case \"uint32be\":\n                case \"int8\":\n                case \"int16le\":\n                case \"int16be\":\n                case \"int32le\":\n                case \"int32be\":\n                case \"int64be\":\n                case \"int64le\":\n                case \"uint64be\":\n                case \"uint64le\":\n                case \"floatle\":\n                case \"floatbe\":\n                case \"doublele\":\n                case \"doublebe\":\n                    this.primitiveGenerateN(this.type, ctx);\n                    break;\n                case \"bit\":\n                    this.generateBit(ctx);\n                    break;\n                case \"string\":\n                    this.generateString(ctx);\n                    break;\n                case \"buffer\":\n                    this.generateBuffer(ctx);\n                    break;\n                case \"seek\":\n                    this.generateSeek(ctx);\n                    break;\n                case \"nest\":\n                    this.generateNest(ctx);\n                    break;\n                case \"array\":\n                    this.generateArray(ctx);\n                    break;\n                case \"choice\":\n                    this.generateChoice(ctx);\n                    break;\n                case \"pointer\":\n                    this.generatePointer(ctx);\n                    break;\n                case \"saveOffset\":\n                    this.generateSaveOffset(ctx);\n                    break;\n                case \"wrapper\":\n                    this.generateWrapper(ctx);\n                    break;\n            }\n            if (this.type !== \"bit\")\n                this.generateAssert(ctx);\n        }\n        const varName = ctx.generateVariable(this.varName);\n        if (this.options.formatter && this.type !== \"bit\") {\n            this.generateFormatter(ctx, varName, this.options.formatter);\n        }\n        return this.generateNext(ctx);\n    }\n    generateAssert(ctx) {\n        if (!this.options.assert) {\n            return;\n        }\n        const varName = ctx.generateVariable(this.varName);\n        switch (typeof this.options.assert) {\n            case \"function\":\n                {\n                    const func = ctx.addImport(this.options.assert);\n                    ctx.pushCode(`if (!${func}.call(vars, ${varName})) {`);\n                }\n                break;\n            case \"number\":\n                ctx.pushCode(`if (${this.options.assert} !== ${varName}) {`);\n                break;\n            case \"string\":\n                ctx.pushCode(`if (${JSON.stringify(this.options.assert)} !== ${varName}) {`);\n                break;\n            default:\n                throw new Error(\"assert option must be a string, number or a function.\");\n        }\n        ctx.generateError(`\"Assertion error: ${varName} is \" + ${JSON.stringify(this.options.assert.toString())}`);\n        ctx.pushCode(\"}\");\n    }\n    // Recursively call code generators and append results\n    generateNext(ctx) {\n        if (this.next) {\n            ctx = this.next.generate(ctx);\n        }\n        return ctx;\n    }\n    generateBit(ctx) {\n        // TODO find better method to handle nested bit fields\n        const parser = JSON.parse(JSON.stringify(this));\n        parser.options = this.options;\n        parser.generateAssert = this.generateAssert.bind(this);\n        parser.generateFormatter = this.generateFormatter.bind(this);\n        parser.varName = ctx.generateVariable(parser.varName);\n        ctx.bitFields.push(parser);\n        if (!this.next ||\n            (this.next && [\"bit\", \"nest\"].indexOf(this.next.type) < 0)) {\n            const val = ctx.generateTmpVariable();\n            ctx.pushCode(`var ${val} = 0;`);\n            const getMaxBits = (from = 0) => {\n                let sum = 0;\n                for (let i = from; i < ctx.bitFields.length; i++) {\n                    const length = ctx.bitFields[i].options.length;\n                    if (sum + length > 32)\n                        break;\n                    sum += length;\n                }\n                return sum;\n            };\n            const getBytes = (sum) => {\n                if (sum <= 8) {\n                    ctx.pushCode(`${val} = dataView.getUint8(offset);`);\n                    sum = 8;\n                }\n                else if (sum <= 16) {\n                    ctx.pushCode(`${val} = dataView.getUint16(offset);`);\n                    sum = 16;\n                }\n                else if (sum <= 24) {\n                    ctx.pushCode(`${val} = (dataView.getUint16(offset) << 8) | dataView.getUint8(offset + 2);`);\n                    sum = 24;\n                }\n                else {\n                    ctx.pushCode(`${val} = dataView.getUint32(offset);`);\n                    sum = 32;\n                }\n                ctx.pushCode(`offset += ${sum / 8};`);\n                return sum;\n            };\n            let bitOffset = 0;\n            const isBigEndian = this.endian === \"be\";\n            let sum = 0;\n            let rem = 0;\n            ctx.bitFields.forEach((parser, i) => {\n                let length = parser.options.length;\n                if (length > rem) {\n                    if (rem) {\n                        const mask = -1 >>> (32 - rem);\n                        ctx.pushCode(`${parser.varName} = (${val} & 0x${mask.toString(16)}) << ${length - rem};`);\n                        length -= rem;\n                    }\n                    bitOffset = 0;\n                    rem = sum = getBytes(getMaxBits(i) - rem);\n                }\n                const offset = isBigEndian ? sum - bitOffset - length : bitOffset;\n                const mask = -1 >>> (32 - length);\n                ctx.pushCode(`${parser.varName} ${length < parser.options.length ? \"|=\" : \"=\"} ${val} >> ${offset} & 0x${mask.toString(16)};`);\n                // Ensure value is unsigned\n                if (parser.options.length === 32) {\n                    ctx.pushCode(`${parser.varName} >>>= 0`);\n                }\n                if (parser.options.assert) {\n                    parser.generateAssert(ctx);\n                }\n                if (parser.options.formatter) {\n                    parser.generateFormatter(ctx, parser.varName, parser.options.formatter);\n                }\n                bitOffset += length;\n                rem -= length;\n            });\n            ctx.bitFields = [];\n        }\n    }\n    generateSeek(ctx) {\n        const length = ctx.generateOption(this.options.length);\n        ctx.pushCode(`offset += ${length};`);\n    }\n    generateString(ctx) {\n        const name = ctx.generateVariable(this.varName);\n        const start = ctx.generateTmpVariable();\n        const encoding = this.options.encoding;\n        const isHex = encoding.toLowerCase() === \"hex\";\n        const toHex = 'b => b.toString(16).padStart(2, \"0\")';\n        if (this.options.length && this.options.zeroTerminated) {\n            const len = this.options.length;\n            ctx.pushCode(`var ${start} = offset;`);\n            ctx.pushCode(`while(dataView.getUint8(offset++) !== 0 && offset - ${start} < ${len});`);\n            const end = `offset - ${start} < ${len} ? offset - 1 : offset`;\n            ctx.pushCode(isHex\n                ? `${name} = Array.from(buffer.subarray(${start}, ${end}), ${toHex}).join('');`\n                : `${name} = new TextDecoder('${encoding}').decode(buffer.subarray(${start}, ${end}));`);\n        }\n        else if (this.options.length) {\n            const len = ctx.generateOption(this.options.length);\n            ctx.pushCode(isHex\n                ? `${name} = Array.from(buffer.subarray(offset, offset + ${len}), ${toHex}).join('');`\n                : `${name} = new TextDecoder('${encoding}').decode(buffer.subarray(offset, offset + ${len}));`);\n            ctx.pushCode(`offset += ${len};`);\n        }\n        else if (this.options.zeroTerminated) {\n            ctx.pushCode(`var ${start} = offset;`);\n            ctx.pushCode(\"while(dataView.getUint8(offset++) !== 0);\");\n            ctx.pushCode(isHex\n                ? `${name} = Array.from(buffer.subarray(${start}, offset - 1), ${toHex}).join('');`\n                : `${name} = new TextDecoder('${encoding}').decode(buffer.subarray(${start}, offset - 1));`);\n        }\n        else if (this.options.greedy) {\n            ctx.pushCode(`var ${start} = offset;`);\n            ctx.pushCode(\"while(buffer.length > offset++);\");\n            ctx.pushCode(isHex\n                ? `${name} = Array.from(buffer.subarray(${start}, offset), ${toHex}).join('');`\n                : `${name} = new TextDecoder('${encoding}').decode(buffer.subarray(${start}, offset));`);\n        }\n        if (this.options.stripNull) {\n            ctx.pushCode(`${name} = ${name}.replace(/\\\\x00+$/g, '')`);\n        }\n    }\n    generateBuffer(ctx) {\n        const varName = ctx.generateVariable(this.varName);\n        if (typeof this.options.readUntil === \"function\") {\n            const pred = this.options.readUntil;\n            const start = ctx.generateTmpVariable();\n            const cur = ctx.generateTmpVariable();\n            ctx.pushCode(`var ${start} = offset;`);\n            ctx.pushCode(`var ${cur} = 0;`);\n            ctx.pushCode(`while (offset < buffer.length) {`);\n            ctx.pushCode(`${cur} = dataView.getUint8(offset);`);\n            const func = ctx.addImport(pred);\n            ctx.pushCode(`if (${func}.call(${ctx.generateVariable()}, ${cur}, buffer.subarray(offset))) break;`);\n            ctx.pushCode(`offset += 1;`);\n            ctx.pushCode(`}`);\n            ctx.pushCode(`${varName} = buffer.subarray(${start}, offset);`);\n        }\n        else if (this.options.readUntil === \"eof\") {\n            ctx.pushCode(`${varName} = buffer.subarray(offset);`);\n        }\n        else {\n            const len = ctx.generateOption(this.options.length);\n            ctx.pushCode(`${varName} = buffer.subarray(offset, offset + ${len});`);\n            ctx.pushCode(`offset += ${len};`);\n        }\n        if (this.options.clone) {\n            ctx.pushCode(`${varName} = buffer.constructor.from(${varName});`);\n        }\n    }\n    generateArray(ctx) {\n        const length = ctx.generateOption(this.options.length);\n        const lengthInBytes = ctx.generateOption(this.options.lengthInBytes);\n        const type = this.options.type;\n        const counter = ctx.generateTmpVariable();\n        const lhs = ctx.generateVariable(this.varName);\n        const item = ctx.generateTmpVariable();\n        const key = this.options.key;\n        const isHash = typeof key === \"string\";\n        if (isHash) {\n            ctx.pushCode(`${lhs} = {};`);\n        }\n        else {\n            ctx.pushCode(`${lhs} = [];`);\n        }\n        if (typeof this.options.readUntil === \"function\") {\n            ctx.pushCode(\"do {\");\n        }\n        else if (this.options.readUntil === \"eof\") {\n            ctx.pushCode(`for (var ${counter} = 0; offset < buffer.length; ${counter}++) {`);\n        }\n        else if (lengthInBytes !== undefined) {\n            ctx.pushCode(`for (var ${counter} = offset + ${lengthInBytes}; offset < ${counter}; ) {`);\n        }\n        else {\n            ctx.pushCode(`for (var ${counter} = ${length}; ${counter} > 0; ${counter}--) {`);\n        }\n        if (typeof type === \"string\") {\n            if (!aliasRegistry.get(type)) {\n                const typeName = PRIMITIVE_NAMES[type];\n                const littleEndian = PRIMITIVE_LITTLE_ENDIANS[type];\n                ctx.pushCode(`var ${item} = dataView.get${typeName}(offset, ${littleEndian});`);\n                ctx.pushCode(`offset += ${PRIMITIVE_SIZES[type]};`);\n            }\n            else {\n                const tempVar = ctx.generateTmpVariable();\n                ctx.pushCode(`var ${tempVar} = ${FUNCTION_PREFIX + type}(offset, {`);\n                if (ctx.useContextVariables) {\n                    const parentVar = ctx.generateVariable();\n                    ctx.pushCode(`$parent: ${parentVar},`);\n                    ctx.pushCode(`$root: ${parentVar}.$root,`);\n                    if (!this.options.readUntil && lengthInBytes === undefined) {\n                        ctx.pushCode(`$index: ${length} - ${counter},`);\n                    }\n                }\n                ctx.pushCode(`});`);\n                ctx.pushCode(`var ${item} = ${tempVar}.result; offset = ${tempVar}.offset;`);\n                if (type !== this.alias)\n                    ctx.addReference(type);\n            }\n        }\n        else if (type instanceof Parser) {\n            ctx.pushCode(`var ${item} = {};`);\n            const parentVar = ctx.generateVariable();\n            ctx.pushScope(item);\n            if (ctx.useContextVariables) {\n                ctx.pushCode(`${item}.$parent = ${parentVar};`);\n                ctx.pushCode(`${item}.$root = ${parentVar}.$root;`);\n                if (!this.options.readUntil && lengthInBytes === undefined) {\n                    ctx.pushCode(`${item}.$index = ${length} - ${counter};`);\n                }\n            }\n            type.generate(ctx);\n            if (ctx.useContextVariables) {\n                ctx.pushCode(`delete ${item}.$parent;`);\n                ctx.pushCode(`delete ${item}.$root;`);\n                ctx.pushCode(`delete ${item}.$index;`);\n            }\n            ctx.popScope();\n        }\n        if (isHash) {\n            ctx.pushCode(`${lhs}[${item}.${key}] = ${item};`);\n        }\n        else {\n            ctx.pushCode(`${lhs}.push(${item});`);\n        }\n        ctx.pushCode(\"}\");\n        if (typeof this.options.readUntil === \"function\") {\n            const pred = this.options.readUntil;\n            const func = ctx.addImport(pred);\n            ctx.pushCode(`while (!${func}.call(${ctx.generateVariable()}, ${item}, buffer.subarray(offset)));`);\n        }\n    }\n    generateChoiceCase(ctx, varName, type) {\n        if (typeof type === \"string\") {\n            const varName = ctx.generateVariable(this.varName);\n            if (!aliasRegistry.has(type)) {\n                const typeName = PRIMITIVE_NAMES[type];\n                const littleEndian = PRIMITIVE_LITTLE_ENDIANS[type];\n                ctx.pushCode(`${varName} = dataView.get${typeName}(offset, ${littleEndian});`);\n                ctx.pushCode(`offset += ${PRIMITIVE_SIZES[type]}`);\n            }\n            else {\n                const tempVar = ctx.generateTmpVariable();\n                ctx.pushCode(`var ${tempVar} = ${FUNCTION_PREFIX + type}(offset, {`);\n                if (ctx.useContextVariables) {\n                    ctx.pushCode(`$parent: ${varName}.$parent,`);\n                    ctx.pushCode(`$root: ${varName}.$root,`);\n                }\n                ctx.pushCode(`});`);\n                ctx.pushCode(`${varName} = ${tempVar}.result; offset = ${tempVar}.offset;`);\n                if (type !== this.alias)\n                    ctx.addReference(type);\n            }\n        }\n        else if (type instanceof Parser) {\n            ctx.pushPath(varName);\n            type.generate(ctx);\n            ctx.popPath(varName);\n        }\n    }\n    generateChoice(ctx) {\n        const tag = ctx.generateOption(this.options.tag);\n        const nestVar = ctx.generateVariable(this.varName);\n        if (this.varName) {\n            ctx.pushCode(`${nestVar} = {};`);\n            if (ctx.useContextVariables) {\n                const parentVar = ctx.generateVariable();\n                ctx.pushCode(`${nestVar}.$parent = ${parentVar};`);\n                ctx.pushCode(`${nestVar}.$root = ${parentVar}.$root;`);\n            }\n        }\n        ctx.pushCode(`switch(${tag}) {`);\n        for (const tagString in this.options.choices) {\n            const tag = parseInt(tagString, 10);\n            const type = this.options.choices[tag];\n            ctx.pushCode(`case ${tag}:`);\n            this.generateChoiceCase(ctx, this.varName, type);\n            ctx.pushCode(\"break;\");\n        }\n        ctx.pushCode(\"default:\");\n        if (this.options.defaultChoice) {\n            this.generateChoiceCase(ctx, this.varName, this.options.defaultChoice);\n        }\n        else {\n            ctx.generateError(`\"Met undefined tag value \" + ${tag} + \" at choice\"`);\n        }\n        ctx.pushCode(\"}\");\n        if (this.varName && ctx.useContextVariables) {\n            ctx.pushCode(`delete ${nestVar}.$parent;`);\n            ctx.pushCode(`delete ${nestVar}.$root;`);\n        }\n    }\n    generateNest(ctx) {\n        const nestVar = ctx.generateVariable(this.varName);\n        if (this.options.type instanceof Parser) {\n            if (this.varName) {\n                ctx.pushCode(`${nestVar} = {};`);\n                if (ctx.useContextVariables) {\n                    const parentVar = ctx.generateVariable();\n                    ctx.pushCode(`${nestVar}.$parent = ${parentVar};`);\n                    ctx.pushCode(`${nestVar}.$root = ${parentVar}.$root;`);\n                }\n            }\n            ctx.pushPath(this.varName);\n            this.options.type.generate(ctx);\n            ctx.popPath(this.varName);\n            if (this.varName && ctx.useContextVariables) {\n                if (ctx.useContextVariables) {\n                    ctx.pushCode(`delete ${nestVar}.$parent;`);\n                    ctx.pushCode(`delete ${nestVar}.$root;`);\n                }\n            }\n        }\n        else if (aliasRegistry.has(this.options.type)) {\n            const tempVar = ctx.generateTmpVariable();\n            ctx.pushCode(`var ${tempVar} = ${FUNCTION_PREFIX + this.options.type}(offset, {`);\n            if (ctx.useContextVariables) {\n                const parentVar = ctx.generateVariable();\n                ctx.pushCode(`$parent: ${parentVar},`);\n                ctx.pushCode(`$root: ${parentVar}.$root,`);\n            }\n            ctx.pushCode(`});`);\n            ctx.pushCode(`${nestVar} = ${tempVar}.result; offset = ${tempVar}.offset;`);\n            if (this.options.type !== this.alias) {\n                ctx.addReference(this.options.type);\n            }\n        }\n    }\n    generateWrapper(ctx) {\n        const wrapperVar = ctx.generateVariable(this.varName);\n        const wrappedBuf = ctx.generateTmpVariable();\n        if (typeof this.options.readUntil === \"function\") {\n            const pred = this.options.readUntil;\n            const start = ctx.generateTmpVariable();\n            const cur = ctx.generateTmpVariable();\n            ctx.pushCode(`var ${start} = offset;`);\n            ctx.pushCode(`var ${cur} = 0;`);\n            ctx.pushCode(`while (offset < buffer.length) {`);\n            ctx.pushCode(`${cur} = dataView.getUint8(offset);`);\n            const func = ctx.addImport(pred);\n            ctx.pushCode(`if (${func}.call(${ctx.generateVariable()}, ${cur}, buffer.subarray(offset))) break;`);\n            ctx.pushCode(`offset += 1;`);\n            ctx.pushCode(`}`);\n            ctx.pushCode(`${wrappedBuf} = buffer.subarray(${start}, offset);`);\n        }\n        else if (this.options.readUntil === \"eof\") {\n            ctx.pushCode(`${wrappedBuf} = buffer.subarray(offset);`);\n        }\n        else {\n            const len = ctx.generateOption(this.options.length);\n            ctx.pushCode(`${wrappedBuf} = buffer.subarray(offset, offset + ${len});`);\n            ctx.pushCode(`offset += ${len};`);\n        }\n        if (this.options.clone) {\n            ctx.pushCode(`${wrappedBuf} = buffer.constructor.from(${wrappedBuf});`);\n        }\n        const tempBuf = ctx.generateTmpVariable();\n        const tempOff = ctx.generateTmpVariable();\n        const tempView = ctx.generateTmpVariable();\n        const func = ctx.addImport(this.options.wrapper);\n        ctx.pushCode(`${wrappedBuf} = ${func}.call(this, ${wrappedBuf}).subarray(0);`);\n        ctx.pushCode(`var ${tempBuf} = buffer;`);\n        ctx.pushCode(`var ${tempOff} = offset;`);\n        ctx.pushCode(`var ${tempView} = dataView;`);\n        ctx.pushCode(`buffer = ${wrappedBuf};`);\n        ctx.pushCode(`offset = 0;`);\n        ctx.pushCode(`dataView = new DataView(buffer.buffer, buffer.byteOffset, buffer.length);`);\n        if (this.options.type instanceof Parser) {\n            if (this.varName) {\n                ctx.pushCode(`${wrapperVar} = {};`);\n            }\n            ctx.pushPath(this.varName);\n            this.options.type.generate(ctx);\n            ctx.popPath(this.varName);\n        }\n        else if (aliasRegistry.has(this.options.type)) {\n            const tempVar = ctx.generateTmpVariable();\n            ctx.pushCode(`var ${tempVar} = ${FUNCTION_PREFIX + this.options.type}(0);`);\n            ctx.pushCode(`${wrapperVar} = ${tempVar}.result;`);\n            if (this.options.type !== this.alias) {\n                ctx.addReference(this.options.type);\n            }\n        }\n        ctx.pushCode(`buffer = ${tempBuf};`);\n        ctx.pushCode(`dataView = ${tempView};`);\n        ctx.pushCode(`offset = ${tempOff};`);\n    }\n    generateFormatter(ctx, varName, formatter) {\n        if (typeof formatter === \"function\") {\n            const func = ctx.addImport(formatter);\n            ctx.pushCode(`${varName} = ${func}.call(${ctx.generateVariable()}, ${varName});`);\n        }\n    }\n    generatePointer(ctx) {\n        const type = this.options.type;\n        const offset = ctx.generateOption(this.options.offset);\n        const tempVar = ctx.generateTmpVariable();\n        const nestVar = ctx.generateVariable(this.varName);\n        // Save current offset\n        ctx.pushCode(`var ${tempVar} = offset;`);\n        // Move offset\n        ctx.pushCode(`offset = ${offset};`);\n        if (this.options.type instanceof Parser) {\n            ctx.pushCode(`${nestVar} = {};`);\n            if (ctx.useContextVariables) {\n                const parentVar = ctx.generateVariable();\n                ctx.pushCode(`${nestVar}.$parent = ${parentVar};`);\n                ctx.pushCode(`${nestVar}.$root = ${parentVar}.$root;`);\n            }\n            ctx.pushPath(this.varName);\n            this.options.type.generate(ctx);\n            ctx.popPath(this.varName);\n            if (ctx.useContextVariables) {\n                ctx.pushCode(`delete ${nestVar}.$parent;`);\n                ctx.pushCode(`delete ${nestVar}.$root;`);\n            }\n        }\n        else if (aliasRegistry.has(this.options.type)) {\n            const tempVar = ctx.generateTmpVariable();\n            ctx.pushCode(`var ${tempVar} = ${FUNCTION_PREFIX + this.options.type}(offset, {`);\n            if (ctx.useContextVariables) {\n                const parentVar = ctx.generateVariable();\n                ctx.pushCode(`$parent: ${parentVar},`);\n                ctx.pushCode(`$root: ${parentVar}.$root,`);\n            }\n            ctx.pushCode(`});`);\n            ctx.pushCode(`${nestVar} = ${tempVar}.result; offset = ${tempVar}.offset;`);\n            if (this.options.type !== this.alias) {\n                ctx.addReference(this.options.type);\n            }\n        }\n        else if (Object.keys(PRIMITIVE_SIZES).indexOf(this.options.type) >= 0) {\n            const typeName = PRIMITIVE_NAMES[type];\n            const littleEndian = PRIMITIVE_LITTLE_ENDIANS[type];\n            ctx.pushCode(`${nestVar} = dataView.get${typeName}(offset, ${littleEndian});`);\n            ctx.pushCode(`offset += ${PRIMITIVE_SIZES[type]};`);\n        }\n        // Restore offset\n        ctx.pushCode(`offset = ${tempVar};`);\n    }\n    generateSaveOffset(ctx) {\n        const varName = ctx.generateVariable(this.varName);\n        ctx.pushCode(`${varName} = offset`);\n    }\n}\n//# sourceMappingURL=binary_parser.js.map","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nvar Emitter = /*#__PURE__*/function () {\n  function Emitter() {\n    _classCallCheck(this, Emitter);\n\n    Object.defineProperty(this, 'listeners', {\n      value: {},\n      writable: true,\n      configurable: true\n    });\n  }\n\n  _createClass(Emitter, [{\n    key: \"addEventListener\",\n    value: function addEventListener(type, callback, options) {\n      if (!(type in this.listeners)) {\n        this.listeners[type] = [];\n      }\n\n      this.listeners[type].push({\n        callback: callback,\n        options: options\n      });\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(type, callback) {\n      if (!(type in this.listeners)) {\n        return;\n      }\n\n      var stack = this.listeners[type];\n\n      for (var i = 0, l = stack.length; i < l; i++) {\n        if (stack[i].callback === callback) {\n          stack.splice(i, 1);\n          return;\n        }\n      }\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(event) {\n      if (!(event.type in this.listeners)) {\n        return;\n      }\n\n      var stack = this.listeners[event.type];\n      var stackToCall = stack.slice();\n\n      for (var i = 0, l = stackToCall.length; i < l; i++) {\n        var listener = stackToCall[i];\n\n        try {\n          listener.callback.call(this, event);\n        } catch (e) {\n          Promise.resolve().then(function () {\n            throw e;\n          });\n        }\n\n        if (listener.options && listener.options.once) {\n          this.removeEventListener(event.type, listener.callback);\n        }\n      }\n\n      return !event.defaultPrevented;\n    }\n  }]);\n\n  return Emitter;\n}();\n\nvar AbortSignal = /*#__PURE__*/function (_Emitter) {\n  _inherits(AbortSignal, _Emitter);\n\n  var _super = _createSuper(AbortSignal);\n\n  function AbortSignal() {\n    var _this;\n\n    _classCallCheck(this, AbortSignal);\n\n    _this = _super.call(this); // Some versions of babel does not transpile super() correctly for IE <= 10, if the parent\n    // constructor has failed to run, then \"this.listeners\" will still be undefined and then we call\n    // the parent constructor directly instead as a workaround. For general details, see babel bug:\n    // https://github.com/babel/babel/issues/3041\n    // This hack was added as a fix for the issue described here:\n    // https://github.com/Financial-Times/polyfill-library/pull/59#issuecomment-477558042\n\n    if (!_this.listeners) {\n      Emitter.call(_assertThisInitialized(_this));\n    } // Compared to assignment, Object.defineProperty makes properties non-enumerable by default and\n    // we want Object.keys(new AbortController().signal) to be [] for compat with the native impl\n\n\n    Object.defineProperty(_assertThisInitialized(_this), 'aborted', {\n      value: false,\n      writable: true,\n      configurable: true\n    });\n    Object.defineProperty(_assertThisInitialized(_this), 'onabort', {\n      value: null,\n      writable: true,\n      configurable: true\n    });\n    Object.defineProperty(_assertThisInitialized(_this), 'reason', {\n      value: undefined,\n      writable: true,\n      configurable: true\n    });\n    return _this;\n  }\n\n  _createClass(AbortSignal, [{\n    key: \"toString\",\n    value: function toString() {\n      return '[object AbortSignal]';\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(event) {\n      if (event.type === 'abort') {\n        this.aborted = true;\n\n        if (typeof this.onabort === 'function') {\n          this.onabort.call(this, event);\n        }\n      }\n\n      _get(_getPrototypeOf(AbortSignal.prototype), \"dispatchEvent\", this).call(this, event);\n    }\n  }]);\n\n  return AbortSignal;\n}(Emitter);\nvar AbortController = /*#__PURE__*/function () {\n  function AbortController() {\n    _classCallCheck(this, AbortController);\n\n    // Compared to assignment, Object.defineProperty makes properties non-enumerable by default and\n    // we want Object.keys(new AbortController()) to be [] for compat with the native impl\n    Object.defineProperty(this, 'signal', {\n      value: new AbortSignal(),\n      writable: true,\n      configurable: true\n    });\n  }\n\n  _createClass(AbortController, [{\n    key: \"abort\",\n    value: function abort(reason) {\n      var event;\n\n      try {\n        event = new Event('abort');\n      } catch (e) {\n        if (typeof document !== 'undefined') {\n          if (!document.createEvent) {\n            // For Internet Explorer 8:\n            event = document.createEventObject();\n            event.type = 'abort';\n          } else {\n            // For Internet Explorer 11:\n            event = document.createEvent('Event');\n            event.initEvent('abort', false, false);\n          }\n        } else {\n          // Fallback where document isn't available:\n          event = {\n            type: 'abort',\n            bubbles: false,\n            cancelable: false\n          };\n        }\n      }\n\n      var signalReason = reason;\n\n      if (signalReason === undefined) {\n        if (typeof document === 'undefined') {\n          signalReason = new Error('This operation was aborted');\n          signalReason.name = 'AbortError';\n        } else {\n          try {\n            signalReason = new DOMException('signal is aborted without reason');\n          } catch (err) {\n            // IE 11 does not support calling the DOMException constructor, use a\n            // regular error object on it instead.\n            signalReason = new Error('This operation was aborted');\n            signalReason.name = 'AbortError';\n          }\n        }\n      }\n\n      this.signal.reason = signalReason;\n      this.signal.dispatchEvent(event);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return '[object AbortController]';\n    }\n  }]);\n\n  return AbortController;\n}();\n\nif (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n  // These are necessary to make sure that we get correct output for:\n  // Object.prototype.toString.call(new AbortController())\n  AbortController.prototype[Symbol.toStringTag] = 'AbortController';\n  AbortSignal.prototype[Symbol.toStringTag] = 'AbortSignal';\n}\n\nfunction polyfillNeeded(self) {\n  if (self.__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL) {\n    console.log('__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL=true is set, will force install polyfill');\n    return true;\n  } // Note that the \"unfetch\" minimal fetch polyfill defines fetch() without\n  // defining window.Request, and this polyfill need to work on top of unfetch\n  // so the below feature detection needs the !self.AbortController part.\n  // The Request.prototype check is also needed because Safari versions 11.1.2\n  // up to and including 12.1.x has a window.AbortController present but still\n  // does NOT correctly implement abortable fetch:\n  // https://bugs.webkit.org/show_bug.cgi?id=174980#c2\n\n\n  return typeof self.Request === 'function' && !self.Request.prototype.hasOwnProperty('signal') || !self.AbortController;\n}\n\n/**\n * Note: the \"fetch.Request\" default value is available for fetch imported from\n * the \"node-fetch\" package and not in browsers. This is OK since browsers\n * will be importing umd-polyfill.js from that path \"self\" is passed the\n * decorator so the default value will not be used (because browsers that define\n * fetch also has Request). One quirky setup where self.fetch exists but\n * self.Request does not is when the \"unfetch\" minimal fetch polyfill is used\n * on top of IE11; for this case the browser will try to use the fetch.Request\n * default value which in turn will be undefined but then then \"if (Request)\"\n * will ensure that you get a patched fetch but still no Request (as expected).\n * @param {fetch, Request = fetch.Request}\n * @returns {fetch: abortableFetch, Request: AbortableRequest}\n */\n\nfunction abortableFetchDecorator(patchTargets) {\n  if ('function' === typeof patchTargets) {\n    patchTargets = {\n      fetch: patchTargets\n    };\n  }\n\n  var _patchTargets = patchTargets,\n      fetch = _patchTargets.fetch,\n      _patchTargets$Request = _patchTargets.Request,\n      NativeRequest = _patchTargets$Request === void 0 ? fetch.Request : _patchTargets$Request,\n      NativeAbortController = _patchTargets.AbortController,\n      _patchTargets$__FORCE = _patchTargets.__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL,\n      __FORCE_INSTALL_ABORTCONTROLLER_POLYFILL = _patchTargets$__FORCE === void 0 ? false : _patchTargets$__FORCE;\n\n  if (!polyfillNeeded({\n    fetch: fetch,\n    Request: NativeRequest,\n    AbortController: NativeAbortController,\n    __FORCE_INSTALL_ABORTCONTROLLER_POLYFILL: __FORCE_INSTALL_ABORTCONTROLLER_POLYFILL\n  })) {\n    return {\n      fetch: fetch,\n      Request: Request\n    };\n  }\n\n  var Request = NativeRequest; // Note that the \"unfetch\" minimal fetch polyfill defines fetch() without\n  // defining window.Request, and this polyfill need to work on top of unfetch\n  // hence we only patch it if it's available. Also we don't patch it if signal\n  // is already available on the Request prototype because in this case support\n  // is present and the patching below can cause a crash since it assigns to\n  // request.signal which is technically a read-only property. This latter error\n  // happens when you run the main5.js node-fetch example in the repo\n  // \"abortcontroller-polyfill-examples\". The exact error is:\n  //   request.signal = init.signal;\n  //   ^\n  // TypeError: Cannot set property signal of #<Request> which has only a getter\n\n  if (Request && !Request.prototype.hasOwnProperty('signal') || __FORCE_INSTALL_ABORTCONTROLLER_POLYFILL) {\n    Request = function Request(input, init) {\n      var signal;\n\n      if (init && init.signal) {\n        signal = init.signal; // Never pass init.signal to the native Request implementation when the polyfill has\n        // been installed because if we're running on top of a browser with a\n        // working native AbortController (i.e. the polyfill was installed due to\n        // __FORCE_INSTALL_ABORTCONTROLLER_POLYFILL being set), then passing our\n        // fake AbortSignal to the native fetch will trigger:\n        // TypeError: Failed to construct 'Request': member signal is not of type AbortSignal.\n\n        delete init.signal;\n      }\n\n      var request = new NativeRequest(input, init);\n\n      if (signal) {\n        Object.defineProperty(request, 'signal', {\n          writable: false,\n          enumerable: false,\n          configurable: true,\n          value: signal\n        });\n      }\n\n      return request;\n    };\n\n    Request.prototype = NativeRequest.prototype;\n  }\n\n  var realFetch = fetch;\n\n  var abortableFetch = function abortableFetch(input, init) {\n    var signal = Request && Request.prototype.isPrototypeOf(input) ? input.signal : init ? init.signal : undefined;\n\n    if (signal) {\n      var abortError;\n\n      try {\n        abortError = new DOMException('Aborted', 'AbortError');\n      } catch (err) {\n        // IE 11 does not support calling the DOMException constructor, use a\n        // regular error object on it instead.\n        abortError = new Error('Aborted');\n        abortError.name = 'AbortError';\n      } // Return early if already aborted, thus avoiding making an HTTP request\n\n\n      if (signal.aborted) {\n        return Promise.reject(abortError);\n      } // Turn an event into a promise, reject it once `abort` is dispatched\n\n\n      var cancellation = new Promise(function (_, reject) {\n        signal.addEventListener('abort', function () {\n          return reject(abortError);\n        }, {\n          once: true\n        });\n      });\n\n      if (init && init.signal) {\n        // Never pass .signal to the native implementation when the polyfill has\n        // been installed because if we're running on top of a browser with a\n        // working native AbortController (i.e. the polyfill was installed due to\n        // __FORCE_INSTALL_ABORTCONTROLLER_POLYFILL being set), then passing our\n        // fake AbortSignal to the native fetch will trigger:\n        // TypeError: Failed to execute 'fetch' on 'Window': member signal is not of type AbortSignal.\n        delete init.signal;\n      } // Return the fastest promise (don't need to wait for request to finish)\n\n\n      return Promise.race([cancellation, realFetch(input, init)]);\n    }\n\n    return realFetch(input, init);\n  };\n\n  return {\n    fetch: abortableFetch,\n    Request: Request\n  };\n}\n\nexports.AbortController = AbortController;\nexports.AbortSignal = AbortSignal;\nexports.abortableFetch = abortableFetchDecorator;\n","\"use strict\";\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbortSignal = exports.AbortController = void 0;\nconst cjs_ponyfill_1 = require(\"abortcontroller-polyfill/dist/cjs-ponyfill\");\nvar getGlobal = function () {\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('unable to locate global object');\n};\n//@ts-ignore\nlet AbortController = typeof getGlobal().AbortController === 'undefined' ? cjs_ponyfill_1.AbortController : getGlobal().AbortController;\nexports.AbortController = AbortController;\n//@ts-ignore\nlet AbortSignal = typeof getGlobal().AbortController === 'undefined' ? cjs_ponyfill_1.AbortSignal : getGlobal().AbortSignal;\nexports.AbortSignal = AbortSignal;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst abortcontroller_ponyfill_1 = require(\"./abortcontroller-ponyfill\");\nclass NullSignal {\n}\n/**\n * aggregates a number of abort signals, will only fire the aggregated\n * abort if all of the input signals have been aborted\n */\nclass AggregateAbortController {\n    constructor() {\n        this.signals = new Set();\n        this.abortController = new abortcontroller_ponyfill_1.AbortController();\n    }\n    /**\n     * @param {AbortSignal} [signal] optional AbortSignal to add. if falsy,\n     *  will be treated as a null-signal, and this abortcontroller will no\n     *  longer be abortable.\n     */\n    //@ts-ignore\n    addSignal(signal = new NullSignal()) {\n        if (this.signal.aborted) {\n            throw new Error('cannot add a signal, already aborted!');\n        }\n        // note that a NullSignal will never fire, so if we\n        // have one this thing will never actually abort\n        this.signals.add(signal);\n        if (signal.aborted) {\n            // handle the abort immediately if it is already aborted\n            // for some reason\n            this.handleAborted(signal);\n        }\n        else if (typeof signal.addEventListener === 'function') {\n            signal.addEventListener('abort', () => {\n                this.handleAborted(signal);\n            });\n        }\n    }\n    handleAborted(signal) {\n        this.signals.delete(signal);\n        if (this.signals.size === 0) {\n            this.abortController.abort();\n        }\n    }\n    get signal() {\n        return this.abortController.signal;\n    }\n    abort() {\n        this.abortController.abort();\n    }\n}\nexports.default = AggregateAbortController;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass AggregateStatusReporter {\n    constructor() {\n        this.callbacks = new Set();\n    }\n    addCallback(callback = () => { }) {\n        this.callbacks.add(callback);\n        callback(this.currentMessage);\n    }\n    callback(message) {\n        this.currentMessage = message;\n        this.callbacks.forEach(elt => {\n            elt(message);\n        });\n    }\n}\nexports.default = AggregateStatusReporter;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst abortcontroller_ponyfill_1 = require(\"./abortcontroller-ponyfill\");\nconst AggregateAbortController_1 = __importDefault(require(\"./AggregateAbortController\"));\nconst AggregateStatusReporter_1 = __importDefault(require(\"./AggregateStatusReporter\"));\nclass AbortablePromiseCache {\n    constructor({ fill, cache, }) {\n        if (typeof fill !== 'function') {\n            throw new TypeError('must pass a fill function');\n        }\n        if (typeof cache !== 'object') {\n            throw new TypeError('must pass a cache object');\n        }\n        if (typeof cache.get !== 'function' ||\n            typeof cache.set !== 'function' ||\n            typeof cache.delete !== 'function') {\n            throw new TypeError('cache must implement get(key), set(key, val), and and delete(key)');\n        }\n        this.cache = cache;\n        this.fillCallback = fill;\n    }\n    static isAbortException(exception) {\n        return (\n        // DOMException\n        exception.name === 'AbortError' ||\n            // standard-ish non-DOM abort exception\n            //@ts-ignore\n            exception.code === 'ERR_ABORTED' ||\n            // stringified DOMException\n            exception.message === 'AbortError: aborted' ||\n            // stringified standard-ish exception\n            exception.message === 'Error: aborted');\n    }\n    evict(key, entry) {\n        if (this.cache.get(key) === entry) {\n            this.cache.delete(key);\n        }\n    }\n    fill(key, data, signal, statusCallback) {\n        const aborter = new AggregateAbortController_1.default();\n        const statusReporter = new AggregateStatusReporter_1.default();\n        statusReporter.addCallback(statusCallback);\n        const newEntry = {\n            aborter: aborter,\n            promise: this.fillCallback(data, aborter.signal, (message) => {\n                statusReporter.callback(message);\n            }),\n            settled: false,\n            statusReporter,\n            get aborted() {\n                return this.aborter.signal.aborted;\n            },\n        };\n        newEntry.aborter.addSignal(signal);\n        // remove the fill from the cache when its abortcontroller fires, if still in there\n        newEntry.aborter.signal.addEventListener('abort', () => {\n            if (!newEntry.settled) {\n                this.evict(key, newEntry);\n            }\n        });\n        // chain off the cached promise to record when it settles\n        newEntry.promise\n            .then(() => {\n            newEntry.settled = true;\n        }, () => {\n            newEntry.settled = true;\n            // if the fill throws an error (including abort) and is still in the cache, remove it\n            this.evict(key, newEntry);\n        })\n            .catch(e => {\n            // this will only be reached if there is some kind of\n            // bad bug in this library\n            console.error(e);\n            throw e;\n        });\n        this.cache.set(key, newEntry);\n    }\n    static checkSinglePromise(promise, signal) {\n        // check just this signal for having been aborted, and abort the\n        // promise if it was, regardless of what happened with the cached\n        // response\n        function checkForSingleAbort() {\n            if (signal && signal.aborted) {\n                throw Object.assign(new Error('aborted'), { code: 'ERR_ABORTED' });\n            }\n        }\n        return promise.then(result => {\n            checkForSingleAbort();\n            return result;\n        }, error => {\n            checkForSingleAbort();\n            throw error;\n        });\n    }\n    has(key) {\n        return this.cache.has(key);\n    }\n    /**\n     * Callback for getting status of the pending async\n     *\n     * @callback statusCallback\n     * @param {any} status, current status string or message object\n     */\n    /**\n     * @param {any} key cache key to use for this request\n     * @param {any} data data passed as the first argument to the fill callback\n     * @param {AbortSignal} [signal] optional AbortSignal object that aborts the request\n     * @param {statusCallback} a callback to get the current status of a pending async operation\n     */\n    get(key, data, signal, statusCallback) {\n        if (!signal && data instanceof abortcontroller_ponyfill_1.AbortSignal) {\n            throw new TypeError('second get argument appears to be an AbortSignal, perhaps you meant to pass `null` for the fill data?');\n        }\n        const cacheEntry = this.cache.get(key);\n        if (cacheEntry) {\n            if (cacheEntry.aborted && !cacheEntry.settled) {\n                // if it's aborted but has not realized it yet, evict it and redispatch\n                this.evict(key, cacheEntry);\n                return this.get(key, data, signal, statusCallback);\n            }\n            if (cacheEntry.settled) {\n                // too late to abort, just return it\n                return cacheEntry.promise;\n            }\n            // request is in-flight, add this signal to its list of signals,\n            // or if there is no signal, the aborter will become non-abortable\n            cacheEntry.aborter.addSignal(signal);\n            cacheEntry.statusReporter.addCallback(statusCallback);\n            return AbortablePromiseCache.checkSinglePromise(cacheEntry.promise, signal);\n        }\n        // if we got here, it is not in the cache. fill.\n        this.fill(key, data, signal, statusCallback);\n        return AbortablePromiseCache.checkSinglePromise(\n        //see https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#non-null-assertion-operator-postfix-\n        //eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.cache.get(key).promise, signal);\n    }\n    /**\n     * delete the given entry from the cache. if it exists and its fill request has\n     * not yet settled, the fill will be signaled to abort.\n     *\n     * @param {any} key\n     */\n    delete(key) {\n        const cachedEntry = this.cache.get(key);\n        if (cachedEntry) {\n            if (!cachedEntry.settled) {\n                cachedEntry.aborter.abort();\n            }\n            this.cache.delete(key);\n        }\n    }\n    /**\n     * Clear all requests from the cache. Aborts any that have not settled.\n     * @returns {number} count of entries deleted\n     */\n    clear() {\n        // iterate without needing regenerator-runtime\n        const keyIter = this.cache.keys();\n        let deleteCount = 0;\n        for (let result = keyIter.next(); !result.done; result = keyIter.next()) {\n            this.delete(result.value);\n            deleteCount += 1;\n        }\n        return deleteCount;\n    }\n}\nexports.default = AbortablePromiseCache;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AbortablePromiseCache_1 = __importDefault(require(\"./AbortablePromiseCache\"));\nexports.default = AbortablePromiseCache_1.default;\n","/* eslint prefer-rest-params:0, no-nested-ternary:0 */\n/**\n * Adapted from a combination of Range and _Compound in the\n * Dalliance Genome Explorer, (c) Thomas Down 2006-2010.\n */\nexport default class Range {\n    constructor(arg1, arg2) {\n        this.ranges =\n            arguments.length === 2\n                ? [{ min: arg1, max: arg2 }]\n                : 0 in arg1\n                    ? Object.assign({}, arg1)\n                    : [arg1];\n    }\n    min() {\n        return this.ranges[0].min;\n    }\n    max() {\n        return this.ranges[this.ranges.length - 1].max;\n    }\n    contains(pos) {\n        for (let s = 0; s < this.ranges.length; s += 1) {\n            const r = this.ranges[s];\n            if (r.min <= pos && r.max >= pos) {\n                return true;\n            }\n        }\n        return false;\n    }\n    isContiguous() {\n        return this.ranges.length > 1;\n    }\n    getRanges() {\n        return this.ranges.map((r) => new Range(r.min, r.max));\n    }\n    toString() {\n        return this.ranges.map((r) => `[${r.min}-${r.max}]`).join(',');\n    }\n    union(s1) {\n        const ranges = this.getRanges().concat(s1.getRanges()).sort(this.rangeOrder);\n        const oranges = [];\n        let current = ranges[0];\n        for (let i = 1; i < ranges.length; i += 1) {\n            const nxt = ranges[i];\n            if (nxt.min() > current.max() + 1) {\n                oranges.push(current);\n                current = nxt;\n            }\n            else if (nxt.max() > current.max()) {\n                current = new Range(current.min(), nxt.max());\n            }\n        }\n        oranges.push(current);\n        if (oranges.length === 1) {\n            return oranges[0];\n        }\n        return new Range(oranges);\n    }\n    intersection(arg) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let s0 = this;\n        let s1 = arg;\n        const r0 = this.ranges();\n        const r1 = s1.ranges();\n        const l0 = r0.length;\n        const l1 = r1.length;\n        let i0 = 0;\n        let i1 = 0;\n        const or = [];\n        while (i0 < l0 && i1 < l1) {\n            s0 = r0[i0];\n            s1 = r1[i1];\n            const lapMin = Math.max(s0.min(), s1.min());\n            const lapMax = Math.min(s0.max(), s1.max());\n            if (lapMax >= lapMin) {\n                or.push(new Range(lapMin, lapMax));\n            }\n            if (s0.max() > s1.max()) {\n                i1 += 1;\n            }\n            else {\n                i0 += 1;\n            }\n        }\n        if (or.length === 0) {\n            throw new Error('found range of length 0');\n        }\n        if (or.length === 1) {\n            return or[0];\n        }\n        return new Range(or);\n    }\n    coverage() {\n        let tot = 0;\n        const rl = this.ranges();\n        for (let ri = 0; ri < rl.length; ri += 1) {\n            const r = rl[ri];\n            tot += r.max() - r.min() + 1;\n        }\n        return tot;\n    }\n    rangeOrder(tmpa, tmpb) {\n        let a = tmpa;\n        let b = tmpb;\n        if (arguments.length < 2) {\n            b = a;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            a = this;\n        }\n        if (a.min() < b.min()) {\n            return -1;\n        }\n        if (a.min() > b.min()) {\n            return 1;\n        }\n        if (a.max() < b.max()) {\n            return -1;\n        }\n        if (b.max() > a.max()) {\n            return 1;\n        }\n        return 0;\n    }\n}\n//# sourceMappingURL=range.js.map","\n/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH$3) ||\n                        flush === Z_NO_FLUSH$2 ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH$3 && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH$2 && flush !== Z_FINISH$3 &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH$3) && flush !== Z_NO_FLUSH$2 &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH$3 && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR$2;\n  }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\n/* ========================================================================= */\nconst deflate$2 = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK$3;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 16209;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n","import { inflateRaw } from 'pako';\nexport function unzip(input) {\n    return inflateRaw(input.subarray(2));\n}\n//# sourceMappingURL=unzip-pako.js.map","/* eslint no-bitwise: [\"error\", { \"allow\": [\"|\"] }] */\nexport class AbortError extends Error {\n    constructor(message) {\n        super(message);\n        this.code = 'ERR_ABORTED';\n    }\n}\n// sort blocks by file offset and\n// group blocks that are within 2KB of eachother\nexport function groupBlocks(blocks) {\n    blocks.sort((b0, b1) => Number(b0.offset) - Number(b1.offset));\n    const blockGroups = [];\n    let lastBlock;\n    let lastBlockEnd;\n    for (let i = 0; i < blocks.length; i += 1) {\n        if (lastBlock &&\n            lastBlockEnd &&\n            Number(blocks[i].offset) - lastBlockEnd <= 2000) {\n            lastBlock.length = BigInt(Number(lastBlock.length) +\n                Number(blocks[i].length) -\n                lastBlockEnd +\n                Number(blocks[i].offset));\n            lastBlock.blocks.push(blocks[i]);\n        }\n        else {\n            blockGroups.push((lastBlock = {\n                blocks: [blocks[i]],\n                length: blocks[i].length,\n                offset: blocks[i].offset,\n            }));\n        }\n        lastBlockEnd = Number(lastBlock.offset) + Number(lastBlock.length);\n    }\n    return blockGroups;\n}\n/**\n * Properly check if the given AbortSignal is aborted.\n * Per the standard, if the signal reads as aborted,\n * this function throws either a DOMException AbortError, or a regular error\n * with a `code` attribute set to `ERR_ABORTED`.\n *\n * For convenience, passing `undefined` is a no-op\n *\n * @param {AbortSignal} [signal] an AbortSignal, or anything with an `aborted` attribute\n * @returns nothing\n */\nexport function checkAbortSignal(signal) {\n    if (!signal) {\n        return;\n    }\n    if (signal.aborted) {\n        // console.log('bam aborted!')\n        if (typeof DOMException !== 'undefined') {\n            throw new DOMException('aborted', 'AbortError');\n        }\n        else {\n            const e = new AbortError('aborted');\n            e.code = 'ERR_ABORTED';\n            throw e;\n        }\n    }\n}\n/**\n * Skips to the next tick, then runs `checkAbortSignal`.\n * Await this to inside an otherwise synchronous loop to\n * provide a place to break when an abort signal is received.\n * @param {AbortSignal} signal\n */\nexport async function abortBreakPoint(signal) {\n    await Promise.resolve();\n    checkAbortSignal(signal);\n}\n//# sourceMappingURL=util.js.map","import { Buffer } from 'buffer';\nimport { Parser } from 'binary-parser';\nimport AbortablePromiseCache from 'abortable-promise-cache';\nimport QuickLRU from 'quick-lru';\n// locals\nimport Range from './range';\nimport { unzip } from './unzip';\nimport { groupBlocks, checkAbortSignal } from './util';\nconst BIG_WIG_TYPE_GRAPH = 1;\nconst BIG_WIG_TYPE_VSTEP = 2;\nconst BIG_WIG_TYPE_FSTEP = 3;\nfunction coordFilter(s1, e1, s2, e2) {\n    return s1 < e2 && e1 >= s2;\n}\nfunction getParsers(isBigEndian) {\n    const le = isBigEndian ? 'big' : 'little';\n    const summaryParser = new Parser()\n        .endianess(le)\n        .uint32('chromId')\n        .uint32('start')\n        .uint32('end')\n        .uint32('validCnt')\n        .floatle('minScore')\n        .floatle('maxScore')\n        .floatle('sumData')\n        .floatle('sumSqData')\n        .saveOffset('offset');\n    const leafParser = new Parser()\n        .endianess(le)\n        .uint8('isLeaf')\n        .skip(1)\n        .uint16('cnt')\n        .choice({\n        tag: 'isLeaf',\n        choices: {\n            1: new Parser().endianess(le).array('blocksToFetch', {\n                length: 'cnt',\n                type: new Parser()\n                    .endianess(le)\n                    .uint32('startChrom')\n                    .uint32('startBase')\n                    .uint32('endChrom')\n                    .uint32('endBase')\n                    .uint64('blockOffset')\n                    .uint64('blockSize')\n                    .saveOffset('offset'),\n            }),\n            0: new Parser().array('recurOffsets', {\n                length: 'cnt',\n                type: new Parser()\n                    .endianess(le)\n                    .uint32('startChrom')\n                    .uint32('startBase')\n                    .uint32('endChrom')\n                    .uint32('endBase')\n                    .uint64('blockOffset')\n                    .saveOffset('offset'),\n            }),\n        },\n    });\n    const bigBedParser = new Parser()\n        .endianess(le)\n        .uint32('chromId')\n        .int32('start')\n        .int32('end')\n        .string('rest', {\n        zeroTerminated: true,\n    })\n        .saveOffset('offset');\n    const bigWigParser = new Parser()\n        .endianess(le)\n        .skip(4)\n        .int32('blockStart')\n        .skip(4)\n        .uint32('itemStep')\n        .uint32('itemSpan')\n        .uint8('blockType')\n        .skip(1)\n        .uint16('itemCount')\n        .choice({\n        tag: 'blockType',\n        choices: {\n            [BIG_WIG_TYPE_FSTEP]: new Parser().array('items', {\n                length: 'itemCount',\n                type: new Parser().floatle('score'),\n            }),\n            [BIG_WIG_TYPE_VSTEP]: new Parser().array('items', {\n                length: 'itemCount',\n                type: new Parser().endianess(le).int32('start').floatle('score'),\n            }),\n            [BIG_WIG_TYPE_GRAPH]: new Parser().array('items', {\n                length: 'itemCount',\n                type: new Parser()\n                    .endianess(le)\n                    .int32('start')\n                    .int32('end')\n                    .floatle('score'),\n            }),\n        },\n    });\n    return {\n        bigWigParser,\n        bigBedParser,\n        summaryParser,\n        leafParser,\n    };\n}\n/**\n * View into a subset of the data in a BigWig file.\n *\n * Adapted by Robert Buels and Colin Diesh from bigwig.js in the Dalliance Genome\n * Explorer by Thomas Down.\n * @constructs\n */\nexport class BlockView {\n    constructor(bbi, refsByName, cirTreeOffset, isBigEndian, isCompressed, blockType) {\n        this.bbi = bbi;\n        this.refsByName = refsByName;\n        this.cirTreeOffset = cirTreeOffset;\n        this.isBigEndian = isBigEndian;\n        this.isCompressed = isCompressed;\n        this.blockType = blockType;\n        this.featureCache = new AbortablePromiseCache({\n            cache: new QuickLRU({ maxSize: 1000 }),\n            fill: async (requestData, signal) => {\n                const len = Number(requestData.length);\n                const off = Number(requestData.offset);\n                const { buffer } = await this.bbi.read(Buffer.alloc(len), 0, len, off, {\n                    signal,\n                });\n                return buffer;\n            },\n        });\n        if (!(cirTreeOffset >= 0)) {\n            throw new Error('invalid cirTreeOffset!');\n        }\n        const parsers = getParsers(isBigEndian);\n        this.leafParser = parsers.leafParser;\n        this.bigBedParser = parsers.bigBedParser;\n    }\n    async readWigData(chrName, start, end, observer, opts) {\n        try {\n            const { refsByName, bbi, cirTreeOffset, isBigEndian } = this;\n            const chrId = refsByName[chrName];\n            if (chrId === undefined) {\n                observer.complete();\n            }\n            const request = { chrId, start, end };\n            if (!this.cirTreePromise) {\n                this.cirTreePromise = bbi.read(Buffer.alloc(48), 0, 48, Number(cirTreeOffset), opts);\n            }\n            const { buffer } = await this.cirTreePromise;\n            const cirBlockSize = isBigEndian\n                ? buffer.readUInt32BE(4)\n                : buffer.readUInt32LE(4);\n            let blocksToFetch = [];\n            let outstanding = 0;\n            const cirFobRecur2 = (cirBlockData, offset, level) => {\n                try {\n                    const data = cirBlockData.subarray(offset);\n                    const p = this.leafParser.parse(data);\n                    if (p.blocksToFetch) {\n                        blocksToFetch = blocksToFetch.concat(p.blocksToFetch\n                            .filter(filterFeats)\n                            .map((l) => ({\n                            offset: l.blockOffset,\n                            length: l.blockSize,\n                        })));\n                    }\n                    if (p.recurOffsets) {\n                        const recurOffsets = p.recurOffsets\n                            .filter(filterFeats)\n                            .map(l => Number(l.blockOffset));\n                        if (recurOffsets.length > 0) {\n                            cirFobRecur(recurOffsets, level + 1);\n                        }\n                    }\n                }\n                catch (e) {\n                    observer.error(e);\n                }\n            };\n            const filterFeats = (b) => {\n                const { startChrom, startBase, endChrom, endBase } = b;\n                return ((startChrom < chrId || (startChrom === chrId && startBase <= end)) &&\n                    (endChrom > chrId || (endChrom === chrId && endBase >= start)));\n            };\n            const cirFobStartFetch = async (off, fr, level) => {\n                try {\n                    const length = fr.max() - fr.min();\n                    const offset = fr.min();\n                    const resultBuffer = await this.featureCache.get(`${length}_${offset}`, { length, offset }, opts.signal);\n                    for (let i = 0; i < off.length; i += 1) {\n                        if (fr.contains(off[i])) {\n                            cirFobRecur2(resultBuffer, off[i] - offset, level);\n                            outstanding -= 1;\n                            if (outstanding === 0) {\n                                this.readFeatures(observer, blocksToFetch, { ...opts, request });\n                            }\n                        }\n                    }\n                }\n                catch (e) {\n                    observer.error(e);\n                }\n            };\n            const cirFobRecur = (offset, level) => {\n                try {\n                    outstanding += offset.length;\n                    const maxCirBlockSpan = 4 + Number(cirBlockSize) * 32; // Upper bound on size, based on a completely full leaf node.\n                    let spans = new Range(offset[0], offset[0] + maxCirBlockSpan);\n                    for (let i = 1; i < offset.length; i += 1) {\n                        const blockSpan = new Range(offset[i], offset[i] + maxCirBlockSpan);\n                        spans = spans.union(blockSpan);\n                    }\n                    spans.getRanges().map(fr => cirFobStartFetch(offset, fr, level));\n                }\n                catch (e) {\n                    observer.error(e);\n                }\n            };\n            return cirFobRecur([Number(cirTreeOffset) + 48], 1);\n        }\n        catch (e) {\n            observer.error(e);\n        }\n    }\n    parseSummaryBlock(buffer, startOffset, request) {\n        const features = [];\n        let offset = startOffset;\n        const dataView = new DataView(buffer.buffer, buffer.byteOffset, buffer.length);\n        while (offset < buffer.byteLength) {\n            // this was extracted from looking at the runtime code generated by\n            // binary-parser\n            const chromId = dataView.getUint32(offset, true);\n            offset += 4;\n            const start = dataView.getUint32(offset, true);\n            offset += 4;\n            const end = dataView.getUint32(offset, true);\n            offset += 4;\n            const validCnt = dataView.getUint32(offset, true);\n            offset += 4;\n            const minScore = dataView.getFloat32(offset, true);\n            offset += 4;\n            const maxScore = dataView.getFloat32(offset, true);\n            offset += 4;\n            const sumData = dataView.getFloat32(offset, true);\n            offset += 4;\n            // unused\n            // const sumSqData = dataView.getFloat32(offset, true)\n            offset += 4;\n            if (request\n                ? chromId === request.chrId &&\n                    coordFilter(start, end, request.start, request.end)\n                : true) {\n                features.push({\n                    start,\n                    end,\n                    maxScore,\n                    minScore,\n                    summary: true,\n                    score: sumData / (validCnt || 1),\n                });\n            }\n        }\n        return features;\n    }\n    parseBigBedBlock(data, startOffset, offset, request) {\n        const items = [];\n        let currOffset = startOffset;\n        while (currOffset < data.byteLength) {\n            const res = this.bigBedParser.parse(data.subarray(currOffset));\n            items.push({ ...res, uniqueId: `bb-${offset + currOffset}` });\n            currOffset += res.offset;\n        }\n        return request\n            ? items.filter((f) => coordFilter(f.start, f.end, request.start, request.end))\n            : items;\n    }\n    parseBigWigBlock(buffer, startOffset, request) {\n        const b = buffer.subarray(startOffset);\n        const dataView = new DataView(b.buffer, b.byteOffset, b.length);\n        let offset = 0;\n        offset += 4;\n        const blockStart = dataView.getInt32(offset, true);\n        offset += 8;\n        const itemStep = dataView.getUint32(offset, true);\n        offset += 4;\n        const itemSpan = dataView.getUint32(offset, true);\n        offset += 4;\n        const blockType = dataView.getUint8(offset);\n        offset += 2;\n        const itemCount = dataView.getUint16(offset, true);\n        offset += 2;\n        const items = new Array(itemCount);\n        switch (blockType) {\n            case 1:\n                for (let i = 0; i < itemCount; i++) {\n                    const start = dataView.getInt32(offset, true);\n                    offset += 4;\n                    const end = dataView.getInt32(offset, true);\n                    offset += 4;\n                    const score = dataView.getFloat32(offset, true);\n                    offset += 4;\n                    items[i] = { start, end, score };\n                }\n                break;\n            case 2:\n                for (let i = 0; i < itemCount; i++) {\n                    const start = dataView.getInt32(offset, true);\n                    offset += 4;\n                    const score = dataView.getFloat32(offset, true);\n                    offset += 4;\n                    items[i] = { score, start, end: start + itemSpan };\n                }\n                break;\n            case 3:\n                for (let i = 0; i < itemCount; i++) {\n                    const score = dataView.getFloat32(offset, true);\n                    offset += 4;\n                    const start = blockStart + i * itemStep;\n                    items[i] = { score, start, end: start + itemSpan };\n                }\n                break;\n        }\n        return request\n            ? items.filter((f) => coordFilter(f.start, f.end, request.start, request.end))\n            : items;\n    }\n    async readFeatures(observer, blocks, opts = {}) {\n        try {\n            const { blockType, isCompressed } = this;\n            const { signal, request } = opts;\n            const blockGroupsToFetch = groupBlocks(blocks);\n            checkAbortSignal(signal);\n            await Promise.all(blockGroupsToFetch.map(async (blockGroup) => {\n                checkAbortSignal(signal);\n                const { length, offset } = blockGroup;\n                const data = await this.featureCache.get(`${length}_${offset}`, blockGroup, signal);\n                blockGroup.blocks.forEach(block => {\n                    checkAbortSignal(signal);\n                    let blockOffset = Number(block.offset) - Number(blockGroup.offset);\n                    let resultData = data;\n                    if (isCompressed) {\n                        resultData = unzip(data.subarray(blockOffset));\n                        blockOffset = 0;\n                    }\n                    checkAbortSignal(signal);\n                    switch (blockType) {\n                        case 'summary':\n                            observer.next(this.parseSummaryBlock(resultData, blockOffset, request));\n                            break;\n                        case 'bigwig':\n                            observer.next(this.parseBigWigBlock(resultData, blockOffset, request));\n                            break;\n                        case 'bigbed':\n                            observer.next(this.parseBigBedBlock(resultData, blockOffset, Number(block.offset) * (1 << 8), request));\n                            break;\n                        default:\n                            console.warn(`Don't know what to do with ${blockType}`);\n                    }\n                });\n            }));\n            observer.complete();\n        }\n        catch (e) {\n            observer.error(e);\n        }\n    }\n}\n//# sourceMappingURL=blockView.js.map","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","export function isFunction(value) {\n    return typeof value === 'function';\n}\n//# sourceMappingURL=isFunction.js.map","export function createErrorClass(createImpl) {\n    var _super = function (instance) {\n        Error.call(instance);\n        instance.stack = new Error().stack;\n    };\n    var ctorFunc = createImpl(_super);\n    ctorFunc.prototype = Object.create(Error.prototype);\n    ctorFunc.prototype.constructor = ctorFunc;\n    return ctorFunc;\n}\n//# sourceMappingURL=createErrorClass.js.map","import { createErrorClass } from './createErrorClass';\nexport var UnsubscriptionError = createErrorClass(function (_super) {\n    return function UnsubscriptionErrorImpl(errors) {\n        _super(this);\n        this.message = errors\n            ? errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ')\n            : '';\n        this.name = 'UnsubscriptionError';\n        this.errors = errors;\n    };\n});\n//# sourceMappingURL=UnsubscriptionError.js.map","export function arrRemove(arr, item) {\n    if (arr) {\n        var index = arr.indexOf(item);\n        0 <= index && arr.splice(index, 1);\n    }\n}\n//# sourceMappingURL=arrRemove.js.map","import { __read, __spreadArray, __values } from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { arrRemove } from './util/arrRemove';\nvar Subscription = (function () {\n    function Subscription(initialTeardown) {\n        this.initialTeardown = initialTeardown;\n        this.closed = false;\n        this._parentage = null;\n        this._finalizers = null;\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var e_1, _a, e_2, _b;\n        var errors;\n        if (!this.closed) {\n            this.closed = true;\n            var _parentage = this._parentage;\n            if (_parentage) {\n                this._parentage = null;\n                if (Array.isArray(_parentage)) {\n                    try {\n                        for (var _parentage_1 = __values(_parentage), _parentage_1_1 = _parentage_1.next(); !_parentage_1_1.done; _parentage_1_1 = _parentage_1.next()) {\n                            var parent_1 = _parentage_1_1.value;\n                            parent_1.remove(this);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (_parentage_1_1 && !_parentage_1_1.done && (_a = _parentage_1.return)) _a.call(_parentage_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    _parentage.remove(this);\n                }\n            }\n            var initialFinalizer = this.initialTeardown;\n            if (isFunction(initialFinalizer)) {\n                try {\n                    initialFinalizer();\n                }\n                catch (e) {\n                    errors = e instanceof UnsubscriptionError ? e.errors : [e];\n                }\n            }\n            var _finalizers = this._finalizers;\n            if (_finalizers) {\n                this._finalizers = null;\n                try {\n                    for (var _finalizers_1 = __values(_finalizers), _finalizers_1_1 = _finalizers_1.next(); !_finalizers_1_1.done; _finalizers_1_1 = _finalizers_1.next()) {\n                        var finalizer = _finalizers_1_1.value;\n                        try {\n                            execFinalizer(finalizer);\n                        }\n                        catch (err) {\n                            errors = errors !== null && errors !== void 0 ? errors : [];\n                            if (err instanceof UnsubscriptionError) {\n                                errors = __spreadArray(__spreadArray([], __read(errors)), __read(err.errors));\n                            }\n                            else {\n                                errors.push(err);\n                            }\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_finalizers_1_1 && !_finalizers_1_1.done && (_b = _finalizers_1.return)) _b.call(_finalizers_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            if (errors) {\n                throw new UnsubscriptionError(errors);\n            }\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var _a;\n        if (teardown && teardown !== this) {\n            if (this.closed) {\n                execFinalizer(teardown);\n            }\n            else {\n                if (teardown instanceof Subscription) {\n                    if (teardown.closed || teardown._hasParent(this)) {\n                        return;\n                    }\n                    teardown._addParent(this);\n                }\n                (this._finalizers = (_a = this._finalizers) !== null && _a !== void 0 ? _a : []).push(teardown);\n            }\n        }\n    };\n    Subscription.prototype._hasParent = function (parent) {\n        var _parentage = this._parentage;\n        return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _parentage = this._parentage;\n        this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n    };\n    Subscription.prototype._removeParent = function (parent) {\n        var _parentage = this._parentage;\n        if (_parentage === parent) {\n            this._parentage = null;\n        }\n        else if (Array.isArray(_parentage)) {\n            arrRemove(_parentage, parent);\n        }\n    };\n    Subscription.prototype.remove = function (teardown) {\n        var _finalizers = this._finalizers;\n        _finalizers && arrRemove(_finalizers, teardown);\n        if (teardown instanceof Subscription) {\n            teardown._removeParent(this);\n        }\n    };\n    Subscription.EMPTY = (function () {\n        var empty = new Subscription();\n        empty.closed = true;\n        return empty;\n    })();\n    return Subscription;\n}());\nexport { Subscription };\nexport var EMPTY_SUBSCRIPTION = Subscription.EMPTY;\nexport function isSubscription(value) {\n    return (value instanceof Subscription ||\n        (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe)));\n}\nfunction execFinalizer(finalizer) {\n    if (isFunction(finalizer)) {\n        finalizer();\n    }\n    else {\n        finalizer.unsubscribe();\n    }\n}\n//# sourceMappingURL=Subscription.js.map","export var config = {\n    onUnhandledError: null,\n    onStoppedNotification: null,\n    Promise: undefined,\n    useDeprecatedSynchronousErrorHandling: false,\n    useDeprecatedNextContext: false,\n};\n//# sourceMappingURL=config.js.map","import { __read, __spreadArray } from \"tslib\";\nexport var timeoutProvider = {\n    setTimeout: function (handler, timeout) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var delegate = timeoutProvider.delegate;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setTimeout) {\n            return delegate.setTimeout.apply(delegate, __spreadArray([handler, timeout], __read(args)));\n        }\n        return setTimeout.apply(void 0, __spreadArray([handler, timeout], __read(args)));\n    },\n    clearTimeout: function (handle) {\n        var delegate = timeoutProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearTimeout) || clearTimeout)(handle);\n    },\n    delegate: undefined,\n};\n//# sourceMappingURL=timeoutProvider.js.map","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\nexport function reportUnhandledError(err) {\n    timeoutProvider.setTimeout(function () {\n        var onUnhandledError = config.onUnhandledError;\n        if (onUnhandledError) {\n            onUnhandledError(err);\n        }\n        else {\n            throw err;\n        }\n    });\n}\n//# sourceMappingURL=reportUnhandledError.js.map","export function noop() { }\n//# sourceMappingURL=noop.js.map","import { config } from '../config';\nvar context = null;\nexport function errorContext(cb) {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n        var isRoot = !context;\n        if (isRoot) {\n            context = { errorThrown: false, error: null };\n        }\n        cb();\n        if (isRoot) {\n            var _a = context, errorThrown = _a.errorThrown, error = _a.error;\n            context = null;\n            if (errorThrown) {\n                throw error;\n            }\n        }\n    }\n    else {\n        cb();\n    }\n}\nexport function captureError(err) {\n    if (config.useDeprecatedSynchronousErrorHandling && context) {\n        context.errorThrown = true;\n        context.error = err;\n    }\n}\n//# sourceMappingURL=errorContext.js.map","import { __extends } from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    function Subscriber(destination) {\n        var _this = _super.call(this) || this;\n        _this.isStopped = false;\n        if (destination) {\n            _this.destination = destination;\n            if (isSubscription(destination)) {\n                destination.add(_this);\n            }\n        }\n        else {\n            _this.destination = EMPTY_OBSERVER;\n        }\n        return _this;\n    }\n    Subscriber.create = function (next, error, complete) {\n        return new SafeSubscriber(next, error, complete);\n    };\n    Subscriber.prototype.next = function (value) {\n        if (this.isStopped) {\n            handleStoppedNotification(nextNotification(value), this);\n        }\n        else {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (this.isStopped) {\n            handleStoppedNotification(errorNotification(err), this);\n        }\n        else {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (this.isStopped) {\n            handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n        }\n        else {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            this.isStopped = true;\n            _super.prototype.unsubscribe.call(this);\n            this.destination = null;\n        }\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        try {\n            this.destination.error(err);\n        }\n        finally {\n            this.unsubscribe();\n        }\n    };\n    Subscriber.prototype._complete = function () {\n        try {\n            this.destination.complete();\n        }\n        finally {\n            this.unsubscribe();\n        }\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\nvar _bind = Function.prototype.bind;\nfunction bind(fn, thisArg) {\n    return _bind.call(fn, thisArg);\n}\nvar ConsumerObserver = (function () {\n    function ConsumerObserver(partialObserver) {\n        this.partialObserver = partialObserver;\n    }\n    ConsumerObserver.prototype.next = function (value) {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.next) {\n            try {\n                partialObserver.next(value);\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n    };\n    ConsumerObserver.prototype.error = function (err) {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.error) {\n            try {\n                partialObserver.error(err);\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n        else {\n            handleUnhandledError(err);\n        }\n    };\n    ConsumerObserver.prototype.complete = function () {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.complete) {\n            try {\n                partialObserver.complete();\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n    };\n    return ConsumerObserver;\n}());\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        var partialObserver;\n        if (isFunction(observerOrNext) || !observerOrNext) {\n            partialObserver = {\n                next: (observerOrNext !== null && observerOrNext !== void 0 ? observerOrNext : undefined),\n                error: error !== null && error !== void 0 ? error : undefined,\n                complete: complete !== null && complete !== void 0 ? complete : undefined,\n            };\n        }\n        else {\n            var context_1;\n            if (_this && config.useDeprecatedNextContext) {\n                context_1 = Object.create(observerOrNext);\n                context_1.unsubscribe = function () { return _this.unsubscribe(); };\n                partialObserver = {\n                    next: observerOrNext.next && bind(observerOrNext.next, context_1),\n                    error: observerOrNext.error && bind(observerOrNext.error, context_1),\n                    complete: observerOrNext.complete && bind(observerOrNext.complete, context_1),\n                };\n            }\n            else {\n                partialObserver = observerOrNext;\n            }\n        }\n        _this.destination = new ConsumerObserver(partialObserver);\n        return _this;\n    }\n    return SafeSubscriber;\n}(Subscriber));\nexport { SafeSubscriber };\nfunction handleUnhandledError(error) {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n        captureError(error);\n    }\n    else {\n        reportUnhandledError(error);\n    }\n}\nfunction defaultErrorHandler(err) {\n    throw err;\n}\nfunction handleStoppedNotification(notification, subscriber) {\n    var onStoppedNotification = config.onStoppedNotification;\n    onStoppedNotification && timeoutProvider.setTimeout(function () { return onStoppedNotification(notification, subscriber); });\n}\nexport var EMPTY_OBSERVER = {\n    closed: true,\n    next: noop,\n    error: defaultErrorHandler,\n    complete: noop,\n};\n//# sourceMappingURL=Subscriber.js.map","export var observable = (function () { return (typeof Symbol === 'function' && Symbol.observable) || '@@observable'; })();\n//# sourceMappingURL=observable.js.map","export function identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map","import { identity } from './identity';\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexport function pipeFromArray(fns) {\n    if (fns.length === 0) {\n        return identity;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map","import { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription } from './Subscription';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\nvar Observable = (function () {\n    function Observable(subscribe) {\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var _this = this;\n        var subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n        errorContext(function () {\n            var _a = _this, operator = _a.operator, source = _a.source;\n            subscriber.add(operator\n                ?\n                    operator.call(subscriber, source)\n                : source\n                    ?\n                        _this._subscribe(subscriber)\n                    :\n                        _this._trySubscribe(subscriber));\n        });\n        return subscriber;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.error(err);\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscriber = new SafeSubscriber({\n                next: function (value) {\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscriber.unsubscribe();\n                    }\n                },\n                error: reject,\n                complete: resolve,\n            });\n            _this.subscribe(subscriber);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var _a;\n        return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\n    };\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        return pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return (value = x); }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexport { Observable };\nfunction getPromiseCtor(promiseCtor) {\n    var _a;\n    return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;\n}\nfunction isObserver(value) {\n    return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\nfunction isSubscriber(value) {\n    return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n//# sourceMappingURL=Observable.js.map","import { isFunction } from './isFunction';\nexport function hasLift(source) {\n    return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n}\nexport function operate(init) {\n    return function (source) {\n        if (hasLift(source)) {\n            return source.lift(function (liftedSource) {\n                try {\n                    return init(liftedSource, this);\n                }\n                catch (err) {\n                    this.error(err);\n                }\n            });\n        }\n        throw new TypeError('Unable to lift unknown Observable type');\n    };\n}\n//# sourceMappingURL=lift.js.map","import { __extends } from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {\n    return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\nvar OperatorSubscriber = (function (_super) {\n    __extends(OperatorSubscriber, _super);\n    function OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {\n        var _this = _super.call(this, destination) || this;\n        _this.onFinalize = onFinalize;\n        _this.shouldUnsubscribe = shouldUnsubscribe;\n        _this._next = onNext\n            ? function (value) {\n                try {\n                    onNext(value);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n            }\n            : _super.prototype._next;\n        _this._error = onError\n            ? function (err) {\n                try {\n                    onError(err);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : _super.prototype._error;\n        _this._complete = onComplete\n            ? function () {\n                try {\n                    onComplete();\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : _super.prototype._complete;\n        return _this;\n    }\n    OperatorSubscriber.prototype.unsubscribe = function () {\n        var _a;\n        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n            var closed_1 = this.closed;\n            _super.prototype.unsubscribe.call(this);\n            !closed_1 && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n        }\n    };\n    return OperatorSubscriber;\n}(Subscriber));\nexport { OperatorSubscriber };\n//# sourceMappingURL=OperatorSubscriber.js.map","import { createErrorClass } from './createErrorClass';\nexport var EmptyError = createErrorClass(function (_super) { return function EmptyErrorImpl() {\n    _super(this);\n    this.name = 'EmptyError';\n    this.message = 'no elements in sequence';\n}; });\n//# sourceMappingURL=EmptyError.js.map","import { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\nexport function firstValueFrom(source, config) {\n    var hasConfig = typeof config === 'object';\n    return new Promise(function (resolve, reject) {\n        var subscriber = new SafeSubscriber({\n            next: function (value) {\n                resolve(value);\n                subscriber.unsubscribe();\n            },\n            error: reject,\n            complete: function () {\n                if (hasConfig) {\n                    resolve(config.defaultValue);\n                }\n                else {\n                    reject(new EmptyError());\n                }\n            },\n        });\n        source.subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=firstValueFrom.js.map","import { createOperatorSubscriber } from './OperatorSubscriber';\nexport function scanInternals(accumulator, seed, hasSeed, emitOnNext, emitBeforeComplete) {\n    return function (source, subscriber) {\n        var hasState = hasSeed;\n        var state = seed;\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var i = index++;\n            state = hasState\n                ?\n                    accumulator(state, value, i)\n                :\n                    ((hasState = true), value);\n            emitOnNext && subscriber.next(state);\n        }, emitBeforeComplete &&\n            (function () {\n                hasState && subscriber.next(state);\n                subscriber.complete();\n            })));\n    };\n}\n//# sourceMappingURL=scanInternals.js.map","import { scanInternals } from './scanInternals';\nimport { operate } from '../util/lift';\nexport function reduce(accumulator, seed) {\n    return operate(scanInternals(accumulator, seed, arguments.length >= 2, false, true));\n}\n//# sourceMappingURL=reduce.js.map","import { reduce } from './reduce';\nimport { operate } from '../util/lift';\nvar arrReducer = function (arr, value) { return (arr.push(value), arr); };\nexport function toArray() {\n    return operate(function (source, subscriber) {\n        reduce(arrReducer, [])(source).subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=toArray.js.map","import { Buffer } from 'buffer';\nimport { Parser } from 'binary-parser';\nimport { LocalFile, RemoteFile } from 'generic-filehandle';\nimport { firstValueFrom, Observable } from 'rxjs';\nimport { toArray } from 'rxjs/operators';\nimport { BlockView } from './blockView';\nconst BIG_WIG_MAGIC = -2003829722;\nconst BIG_BED_MAGIC = -2021002517;\nfunction toString(arr) {\n    return new TextDecoder().decode(arr);\n}\n/* get the compiled parsers for different sections of the bigwig file\n *\n * @param isBE - is big endian, typically false\n * @return an object with compiled parsers\n */\nfunction getParsers(isBE) {\n    const le = isBE ? 'big' : 'little';\n    const headerParser = new Parser()\n        .endianess(le)\n        .int32('magic')\n        .uint16('version')\n        .uint16('numZoomLevels')\n        .uint64('chromTreeOffset')\n        .uint64('unzoomedDataOffset')\n        .uint64('unzoomedIndexOffset')\n        .uint16('fieldCount')\n        .uint16('definedFieldCount')\n        .uint64('asOffset') // autoSql offset, used in bigbed\n        .uint64('totalSummaryOffset')\n        .uint32('uncompressBufSize')\n        .uint64('extHeaderOffset') // name index offset, used in bigbed\n        .array('zoomLevels', {\n        length: 'numZoomLevels',\n        type: new Parser()\n            .endianess(le)\n            .uint32('reductionLevel')\n            .uint32('reserved')\n            .uint64('dataOffset')\n            .uint64('indexOffset'),\n    });\n    const totalSummaryParser = new Parser()\n        .endianess(le)\n        .uint64('basesCovered')\n        .doublele('scoreMin')\n        .doublele('scoreMax')\n        .doublele('scoreSum')\n        .doublele('scoreSumSquares');\n    const chromTreeParser = new Parser()\n        .endianess(le)\n        .uint32('magic')\n        .uint32('blockSize')\n        .uint32('keySize')\n        .uint32('valSize')\n        .uint64('itemCount');\n    const isLeafNode = new Parser()\n        .endianess(le)\n        .uint8('isLeafNode')\n        .skip(1)\n        .uint16('cnt')\n        .saveOffset('offset');\n    return {\n        chromTreeParser,\n        totalSummaryParser,\n        headerParser,\n        isLeafNode,\n    };\n}\nexport class BBI {\n    /* fetch and parse header information from a bigwig or bigbed file\n     * @param abortSignal - abort the operation, can be null\n     * @return a Header object\n     */\n    getHeader(opts = {}) {\n        const options = 'aborted' in opts ? { signal: opts } : opts;\n        if (!this.headerP) {\n            this.headerP = this._getHeader(options).catch(e => {\n                this.headerP = undefined;\n                throw e;\n            });\n        }\n        return this.headerP;\n    }\n    /*\n     * @param filehandle - a filehandle from generic-filehandle or implementing something similar to the node10 fs.promises API\n     * @param path - a Local file path as a string\n     * @param url - a URL string\n     * @param renameRefSeqs - an optional method to rename the internal reference sequences using a mapping function\n     */\n    constructor(options = {}) {\n        const { filehandle, renameRefSeqs = s => s, path, url } = options;\n        this.renameRefSeqs = renameRefSeqs;\n        if (filehandle) {\n            this.bbi = filehandle;\n        }\n        else if (url) {\n            this.bbi = new RemoteFile(url);\n        }\n        else if (path) {\n            this.bbi = new LocalFile(path);\n        }\n        else {\n            throw new Error('no file given');\n        }\n    }\n    async _getHeader(opts) {\n        const header = await this._getMainHeader(opts);\n        const chroms = await this._readChromTree(header, opts);\n        return { ...header, ...chroms };\n    }\n    async _getMainHeader(opts, requestSize = 2000) {\n        const { buffer } = await this.bbi.read(Buffer.alloc(requestSize), 0, requestSize, 0, opts);\n        const isBigEndian = this._isBigEndian(buffer);\n        const ret = getParsers(isBigEndian);\n        const header = ret.headerParser.parse(buffer);\n        const { magic, asOffset, totalSummaryOffset } = header;\n        header.fileType = magic === BIG_BED_MAGIC ? 'bigbed' : 'bigwig';\n        if (asOffset > requestSize || totalSummaryOffset > requestSize) {\n            return this._getMainHeader(opts, requestSize * 2);\n        }\n        if (asOffset) {\n            const off = Number(header.asOffset);\n            header.autoSql = toString(buffer.subarray(off, buffer.indexOf(0, off)));\n        }\n        if (header.totalSummaryOffset > requestSize) {\n            return this._getMainHeader(opts, requestSize * 2);\n        }\n        if (header.totalSummaryOffset) {\n            const tail = buffer.subarray(Number(header.totalSummaryOffset));\n            const sum = ret.totalSummaryParser.parse(tail);\n            header.totalSummary = { ...sum, basesCovered: Number(sum.basesCovered) };\n        }\n        return { ...header, isBigEndian };\n    }\n    _isBigEndian(buffer) {\n        let ret = buffer.readInt32LE(0);\n        if (ret === BIG_WIG_MAGIC || ret === BIG_BED_MAGIC) {\n            return false;\n        }\n        ret = buffer.readInt32BE(0);\n        if (ret === BIG_WIG_MAGIC || ret === BIG_BED_MAGIC) {\n            return true;\n        }\n        throw new Error('not a BigWig/BigBed file');\n    }\n    // todo: add progress if long running\n    async _readChromTree(header, opts) {\n        const isBE = header.isBigEndian;\n        const le = isBE ? 'big' : 'little';\n        const refsByNumber = [];\n        const refsByName = {};\n        let unzoomedDataOffset = Number(header.unzoomedDataOffset);\n        const chromTreeOffset = Number(header.chromTreeOffset);\n        while (unzoomedDataOffset % 4 !== 0) {\n            unzoomedDataOffset += 1;\n        }\n        const off = unzoomedDataOffset - chromTreeOffset;\n        const { buffer } = await this.bbi.read(Buffer.alloc(off), 0, off, Number(chromTreeOffset), opts);\n        const p = getParsers(isBE);\n        const { keySize } = p.chromTreeParser.parse(buffer);\n        const leafNodeParser = new Parser()\n            .endianess(le)\n            .string('key', { stripNull: true, length: keySize })\n            .uint32('refId')\n            .uint32('refSize')\n            .saveOffset('offset');\n        const nonleafNodeParser = new Parser()\n            .endianess(le)\n            .skip(keySize)\n            .uint64('childOffset')\n            .saveOffset('offset');\n        const rootNodeOffset = 32;\n        const bptReadNode = async (currentOffset) => {\n            let offset = currentOffset;\n            if (offset >= buffer.length) {\n                throw new Error('reading beyond end of buffer');\n            }\n            const ret = p.isLeafNode.parse(buffer.subarray(offset));\n            const { isLeafNode, cnt } = ret;\n            offset += ret.offset;\n            if (isLeafNode) {\n                for (let n = 0; n < cnt; n += 1) {\n                    const leafRet = leafNodeParser.parse(buffer.subarray(offset));\n                    offset += leafRet.offset;\n                    const { key, refId, refSize } = leafRet;\n                    const refRec = { name: key, id: refId, length: refSize };\n                    refsByName[this.renameRefSeqs(key)] = refId;\n                    refsByNumber[refId] = refRec;\n                }\n            }\n            else {\n                // parse index node\n                const nextNodes = [];\n                for (let n = 0; n < cnt; n += 1) {\n                    const nonleafRet = nonleafNodeParser.parse(buffer.subarray(offset));\n                    const { childOffset } = nonleafRet;\n                    offset += nonleafRet.offset;\n                    nextNodes.push(bptReadNode(Number(childOffset) - Number(chromTreeOffset)));\n                }\n                await Promise.all(nextNodes);\n            }\n        };\n        await bptReadNode(rootNodeOffset);\n        return {\n            refsByName,\n            refsByNumber,\n        };\n    }\n    /*\n     * fetches the \"unzoomed\" view of the bigwig data. this is the default for bigbed\n     * @param abortSignal - a signal to optionally abort this operation\n     */\n    async getUnzoomedView(opts) {\n        const { unzoomedIndexOffset, refsByName, uncompressBufSize, isBigEndian, fileType, } = await this.getHeader(opts);\n        return new BlockView(this.bbi, refsByName, unzoomedIndexOffset, isBigEndian, uncompressBufSize > 0, fileType);\n    }\n    /**\n     * Gets features from a BigWig file\n     *\n     * @param refName - The chromosome name\n     * @param start - The start of a region\n     * @param end - The end of a region\n     * @param opts - An object containing basesPerSpan (e.g. pixels per basepair) or scale used to infer the zoomLevel to use\n     */\n    async getFeatureStream(refName, start, end, opts = {\n        scale: 1,\n    }) {\n        await this.getHeader(opts);\n        const chrName = this.renameRefSeqs(refName);\n        let view;\n        if (opts.basesPerSpan) {\n            view = await this.getView(1 / opts.basesPerSpan, opts);\n        }\n        else if (opts.scale) {\n            view = await this.getView(opts.scale, opts);\n        }\n        else {\n            view = await this.getView(1, opts);\n        }\n        if (!view) {\n            throw new Error('unable to get block view for data');\n        }\n        return new Observable((observer) => {\n            view.readWigData(chrName, start, end, observer, opts);\n        });\n    }\n    async getFeatures(refName, start, end, opts = {\n        scale: 1,\n    }) {\n        const ob = await this.getFeatureStream(refName, start, end, opts);\n        const ret = await firstValueFrom(ob.pipe(toArray()));\n        return ret.flat();\n    }\n}\n//# sourceMappingURL=bbi.js.map","import { BlockView } from './blockView';\nimport { BBI } from './bbi';\nexport class BigWig extends BBI {\n    /**\n     * Retrieves a BlockView of a specific zoomLevel\n     *\n     * @param scale - number\n     * @param opts - An object containing basesPerSpan (e.g. pixels per basepair) or scale used to infer the zoomLevel to use\n     */\n    async getView(scale, opts) {\n        const { zoomLevels, refsByName, fileSize, isBigEndian, uncompressBufSize } = await this.getHeader(opts);\n        const basesPerPx = 1 / scale;\n        let maxLevel = zoomLevels.length;\n        if (!fileSize) {\n            // if we don't know the file size, we can't fetch the highest zoom level :-(\n            maxLevel -= 1;\n        }\n        for (let i = maxLevel; i >= 0; i -= 1) {\n            const zh = zoomLevels[i];\n            if (zh && zh.reductionLevel <= 2 * basesPerPx) {\n                const indexOffset = Number(zh.indexOffset);\n                return new BlockView(this.bbi, refsByName, indexOffset, isBigEndian, uncompressBufSize > 0, 'summary');\n            }\n        }\n        return this.getUnzoomedView(opts);\n    }\n}\n//# sourceMappingURL=bigwig.js.map","/*\n * This code is based on the following repo:\n * https://github.com/higlass/higlass-bigwig-datafetcher/blob/main/src/BigwigDataFetcher.js\n */\nimport { BigWig } from '@gmod/bbi';\nimport type { Assembly, BigWigData } from '@gosling-lang/gosling-schema';\nimport { computeChromSizes } from '../../core/utils/assembly';\nimport { type CommonDataConfig, RemoteFile } from '../utils';\n\nimport type { Feature } from '@gmod/bbi';\nimport type { ChromInfo, TilesetInfo } from '@higlass/types';\n\ntype BigWigDataConfig = BigWigData & CommonDataConfig;\n\ntype Tile = {\n    tilePos: [number];\n    tileId: string;\n    zoomLevel: number;\n    min_value: number;\n    max_value: number;\n    dense: (number | null)[];\n    denseDataExtrema: InstanceType<import('@higlass/types').HGC['utils']['DenseDataExtrema1D']>;\n    minNonZero: number;\n    maxNonZero: number;\n};\n\ntype BigWigHeader = {\n    zoomLevels: { reductionLevel: number }[];\n};\n\ntype ExtendedFeature = Feature & { startAbs: number; endAbs: number };\n\nfunction BigWigDataFetcher(HGC: import('@higlass/types').HGC, dataConfig: BigWigDataConfig) {\n    if (!new.target) {\n        throw new Error('Uncaught TypeError: Class constructor cannot be invoked without \"new\"');\n    }\n\n    const cls = class BigWigDataFetcherClass {\n        dataConfig: typeof dataConfig;\n        bwFileHeader: BigWigHeader | null;\n        bwFile: BigWig | null;\n        TILE_SIZE: number;\n        errorTxt: string;\n        dataPromises: Promise<unknown>[];\n        chromSizes: ChromInfo<string> & { chrToAbs: (name: string, pos: number) => number };\n        assembly?: Assembly;\n        tilesetInfoLoading?: boolean;\n\n        constructor() {\n            this.dataConfig = dataConfig;\n            this.assembly = this.dataConfig.assembly;\n            this.bwFileHeader = null;\n            this.bwFile = null;\n            this.TILE_SIZE = 1024;\n\n            this.errorTxt = '';\n            this.dataPromises = [];\n\n            // Prepare chromosome interval information\n            const chromosomeSizes = computeChromSizes(this.assembly).size;\n\n            const chromosomeCumPositions: ChromInfo['cumPositions'] = [];\n            const chromosomePositions: Record<string, ChromInfo['cumPositions'][number]> = {};\n            let prevEndPosition = 0;\n\n            Object.keys(computeChromSizes(this.assembly).size).forEach((chrStr, i) => {\n                const positionInfo = {\n                    id: i,\n                    chr: chrStr,\n                    pos: prevEndPosition\n                };\n\n                chromosomeCumPositions.push(positionInfo);\n                chromosomePositions[chrStr] = positionInfo;\n\n                prevEndPosition += computeChromSizes(this.assembly).size[chrStr];\n            });\n            this.chromSizes = {\n                chrToAbs: (chrom, chromPos) => this.chromSizes.chrPositions[chrom].pos + chromPos,\n                cumPositions: chromosomeCumPositions,\n                chrPositions: chromosomePositions,\n                totalLength: prevEndPosition,\n                chromLengths: chromosomeSizes\n            };\n\n            this.dataPromises.push(this.loadBBI(dataConfig));\n        }\n\n        async loadBBI(dataConfig: BigWigDataConfig) {\n            if (dataConfig.url) {\n                this.bwFile = new BigWig({\n                    filehandle: new RemoteFile(dataConfig.url, { overrides: dataConfig.urlFetchOptions })\n                });\n                return this.bwFile.getHeader().then((h: BigWigHeader) => {\n                    this.bwFileHeader = h;\n                });\n            } else {\n                console.error('Please enter a \"url\" field to the data config');\n                return null;\n            }\n        }\n\n        tilesetInfo(callback?: (info: TilesetInfo | { error: string }) => void) {\n            this.tilesetInfoLoading = true;\n\n            return Promise.all(this.dataPromises)\n                .then(() => {\n                    this.tilesetInfoLoading = false;\n\n                    const totalLength = this.chromSizes.totalLength;\n\n                    const retVal = {\n                        tile_size: this.TILE_SIZE,\n                        max_zoom: Math.ceil(Math.log(totalLength / this.TILE_SIZE) / Math.log(2)),\n                        max_width: 2 ** Math.ceil(Math.log(totalLength) / Math.log(2)),\n                        min_pos: [0],\n                        max_pos: [totalLength]\n                    };\n\n                    if (callback) {\n                        callback(retVal);\n                    }\n\n                    return retVal;\n                })\n                .catch(err => {\n                    this.tilesetInfoLoading = false;\n\n                    console.error(err);\n\n                    if (callback) {\n                        callback({\n                            error: `Error parsing bigwig: ${err}`\n                        });\n                    }\n                    return null;\n                });\n        }\n\n        fetchTilesDebounced(receivedTiles: (tiles: Record<string, Tile>) => void, tileIds: string[]) {\n            const tiles: Record<string, Tile & { tilePositionId?: string }> = {};\n            const validTileIds: string[] = [];\n            const tilePromises = [];\n\n            for (const tileId of tileIds) {\n                const parts = tileId.split('.');\n                const z = parseInt(parts[0], 10);\n                const x = parseInt(parts[1], 10);\n\n                if (Number.isNaN(x) || Number.isNaN(z)) {\n                    console.warn('Invalid tile zoom or position:', z, x);\n                    continue;\n                }\n\n                validTileIds.push(tileId);\n                tilePromises.push(this.tile(z, x));\n            }\n\n            Promise.all(tilePromises).then(values => {\n                for (let i = 0; i < values.length; i++) {\n                    const validTileId = validTileIds[i];\n                    tiles[validTileId] = values[i];\n                    tiles[validTileId].tilePositionId = validTileId;\n                }\n\n                receivedTiles(tiles);\n            });\n            // tiles = tileResponseToData(tiles, null, tileIds);\n            return tiles;\n        }\n\n        async tile(z: number, x: number) {\n            const tsInfo = (await this.tilesetInfo())!;\n            const tileWidth = +tsInfo.max_width / 2 ** +z;\n\n            const recordPromises: Promise<ExtendedFeature[]>[] = [];\n\n            const tile: Partial<Tile> = {\n                tilePos: [x],\n                tileId: `bigwig.${z}.${x}`,\n                zoomLevel: z\n            };\n\n            // get the bounds of the tile\n            const minXOriginal = tsInfo.min_pos[0] + x * tileWidth;\n            let minX = minXOriginal;\n            const maxX = tsInfo.min_pos[0] + (x + 1) * tileWidth;\n\n            const basesPerPixel = this.determineScale(minX, maxX);\n            const basesPerBin = (maxX - minX) / this.TILE_SIZE;\n\n            const binStarts: number[] = [];\n            for (let i = 0; i < this.TILE_SIZE; i++) {\n                binStarts.push(minX + i * basesPerBin);\n            }\n\n            const { chromLengths, cumPositions } = this.chromSizes;\n\n            cumPositions.forEach(cumPos => {\n                const chromName = cumPos.chr;\n                const chromStart = cumPos.pos;\n                const chromEnd = cumPos.pos + chromLengths[chromName];\n\n                let startPos, endPos;\n\n                if (chromStart <= minX && minX < chromEnd) {\n                    // start of the visible region is within this chromosome\n\n                    if (maxX > chromEnd) {\n                        // the visible region extends beyond the end of this chromosome\n                        // fetch from the start until the end of the chromosome\n                        startPos = minX - chromStart;\n                        endPos = chromEnd - chromStart;\n                        recordPromises.push(\n                            this.bwFile!.getFeatures(chromName, startPos, endPos, {\n                                scale: 1 / basesPerPixel\n                            }).then(values => {\n                                values.forEach((v: Feature & { startAbs?: number; endAbs?: number }) => {\n                                    v['startAbs'] = HGC.utils.chrToAbs(chromName, v.start, this.chromSizes);\n                                    v['endAbs'] = HGC.utils.chrToAbs(chromName, v.end, this.chromSizes);\n                                });\n                                return values as (Feature & { startAbs: number; endAbs: number })[];\n                            })\n                        );\n\n                        minX = chromEnd;\n                    } else {\n                        startPos = Math.floor(minX - chromStart);\n                        endPos = Math.ceil(maxX - chromStart);\n                        if (!this.bwFile) return;\n                        recordPromises.push(\n                            this.bwFile\n                                .getFeatures(chromName, startPos, endPos, {\n                                    scale: 1 / basesPerPixel\n                                })\n                                .then(values => {\n                                    values.forEach((v: Feature & { startAbs?: number; endAbs?: number }) => {\n                                        v['startAbs'] = HGC.utils.chrToAbs(chromName, v.start, this.chromSizes);\n                                        v['endAbs'] = HGC.utils.chrToAbs(chromName, v.end, this.chromSizes);\n                                    });\n                                    return values as (Feature & { startAbs: number; endAbs: number })[];\n                                })\n                        );\n                        return;\n                    }\n                }\n            });\n\n            return Promise.all(recordPromises).then(v => {\n                const values = v.flat();\n\n                const dense: (number | null)[] = [];\n                for (let i = 0; i < this.TILE_SIZE; i++) {\n                    dense.push(null);\n                }\n\n                // Currently we use the same binning strategy in all cases (basesPerBin =>< basesPerBinInFile)\n                binStarts.forEach((curStart, index) => {\n                    if (curStart < minXOriginal || curStart > maxX) {\n                        return;\n                    }\n                    const filtered = values\n                        .filter(v => {\n                            return curStart >= v.startAbs && curStart < v.endAbs;\n                        })\n                        .map(v => v.score);\n                    dense[index] = filtered.length > 0 ? filtered[0] : null;\n                });\n\n                const dde = new HGC.utils.DenseDataExtrema1D(dense);\n                // @ts-expect-error Math.min() allows `null` but results in min\n                tile.min_value = Math.min(...dense);\n                // @ts-expect-error Math.max() allows `null` but results in min\n                tile.max_value = Math.max(...dense);\n                tile.dense = dense;\n                tile.denseDataExtrema = dde;\n                tile.minNonZero = dde.minNonZeroInTile;\n                tile.maxNonZero = dde.maxNonZeroInTile;\n                return tile as Tile;\n            });\n        }\n\n        // We never want to request more than 1024 * 20 elements from the file.\n        determineScale(minX: number, maxX: number) {\n            const reductionLevels = [1];\n            const numRequestedElements = maxX - minX;\n\n            if (!this.bwFileHeader) {\n                throw Error('no bigwig header');\n            }\n\n            this.bwFileHeader.zoomLevels.forEach(z => {\n                reductionLevels.push(z.reductionLevel);\n            });\n\n            let level: number | undefined;\n            reductionLevels.forEach(rl => {\n                if (level) return; // we found one\n\n                const numElementsFromFile = numRequestedElements / rl;\n                if (numElementsFromFile <= this.TILE_SIZE * 20) {\n                    level = rl;\n                }\n            });\n\n            // return the highest reductionLevel, if we could not find anything better\n            return level || reductionLevels.slice(-1)[0];\n        }\n    };\n\n    return new cls();\n}\n\nBigWigDataFetcher.config = {\n    type: 'bigwig'\n};\n\nexport default BigWigDataFetcher;\n","import type * as d3 from 'd3';\nimport type {\n    SingleTrack,\n    Datum,\n    FilterTransform,\n    LogTransform,\n    ExonSplitTransform,\n    Assembly,\n    StrConcatTransform,\n    StrReplaceTransform,\n    GenomicLengthTransform,\n    SvTypeTransform,\n    CoverageTransform,\n    DisplaceTransform,\n    JsonParseTransform\n} from '@gosling-lang/gosling-schema';\nimport {\n    getChannelKeysByAggregateFnc,\n    getChannelKeysByType,\n    IsChannelDeep,\n    IsIncludeFilter,\n    IsOneOfFilter,\n    IsRangeFilter\n} from '@gosling-lang/gosling-schema';\nimport { computeChromSizes } from './assembly';\n// import Logging from './log';\n\n/**\n * Apply filter\n */\nexport function filterData(filter: FilterTransform, data: Datum[]): Datum[] {\n    const { field, not } = filter;\n\n    let output: Datum[] = Array.from(data);\n    if (IsOneOfFilter(filter)) {\n        const { oneOf } = filter;\n        output = output.filter((d: Datum) => {\n            return not ? (oneOf as any[]).indexOf(d[field]) === -1 : (oneOf as any[]).indexOf(d[field]) !== -1;\n        });\n    } else if (IsRangeFilter(filter)) {\n        const { inRange } = filter;\n        output = output.filter((d: Datum) => {\n            const value = +d[field];\n            return not ? !(inRange[0] <= value && value <= inRange[1]) : inRange[0] <= value && value <= inRange[1];\n        });\n    } else if (IsIncludeFilter(filter)) {\n        const { include } = filter;\n        output = output.filter((d: Datum) => {\n            return not ? `${d[field]}`.includes(include) : !`${d[field]}`.includes(include);\n        });\n    }\n    return output;\n}\n\n/**\n * Calculate new data, like log transformation.\n */\nexport function concatString(concat: StrConcatTransform, data: Datum[]): Datum[] {\n    const { fields, separator, newField } = concat;\n\n    let output: Datum[] = Array.from(data);\n    output = output.map(d => {\n        const strs = fields.map(f => d[f]);\n        d[newField] = strs.join(separator);\n        return d;\n    });\n    return output;\n}\n\nexport function replaceString(_: StrReplaceTransform, data: Datum[]): Datum[] {\n    const { field, replace, newField } = _;\n\n    let output: Datum[] = Array.from(data);\n    output = output.map(d => {\n        d[newField] = d[field]; // copy original string\n        replace.forEach(r => {\n            const { from, to } = r;\n            d[newField] = d[newField].toString().replaceAll(from, to);\n        });\n        return d;\n    });\n    return output;\n}\n\n/**\n * Calculate new data, like log transformation.\n */\nexport function calculateData(log: LogTransform, data: Datum[]): Datum[] {\n    const { field, base, newField } = log;\n\n    let output: Datum[] = Array.from(data);\n    output = output.map(d => {\n        if (+d[field]) {\n            if (base === 'e') {\n                d[newField ?? field] = Math.log(+d[field]);\n            } else {\n                d[newField ?? field] = Math.log(+d[field]) / Math.log(base ?? 10);\n            }\n        }\n        return d;\n    });\n    return output;\n}\n\n/**\n * Calculate genomic length using two genomic fields.\n */\nexport function calculateGenomicLength(_: GenomicLengthTransform, data: Datum[]): Datum[] {\n    const { startField, endField, newField } = _;\n    const output = Array.from(data);\n    output.forEach(d => {\n        const s = d[startField];\n        const e = d[endField];\n        if (!s || !e) {\n            // such field does not exist, so skip this row\n            // console.warn(`[Genomic Length] startField or endField (${s} or ${e}) does not exist.`);\n            return;\n        }\n        d[newField] = Math.abs(+e - +s);\n    });\n    return output;\n}\n\n/*\n * Infer SV types (i.e., one of DUP, TRA, DEL, t2tINV, h2hINV).\n */\nexport function inferSvType(_: SvTypeTransform, data: Datum[]): Datum[] {\n    const { firstBp, secondBp, newField } = _;\n    const output = Array.from(data);\n    const [DUP, TRA, DEL, t2tINV, h2hINV] = ['DUP', 'TRA', 'DEL', 't2tINV', 'h2hINV'];\n\n    output.forEach(d => {\n        const chr1 = d[firstBp.chrField];\n        const chr2 = d[secondBp.chrField];\n\n        if (chr1 !== chr2) {\n            d[newField] = TRA;\n            return;\n        }\n\n        let pos1 = d[firstBp.posField];\n        let pos2 = d[secondBp.posField];\n        let strand1 = d[firstBp.strandField];\n        let strand2 = d[secondBp.strandField];\n\n        if (pos1 > pos2) {\n            // need to sort first\n            const _pos = pos1;\n            const _strand = strand1;\n            pos1 = pos2;\n            strand1 = strand2;\n            pos2 = _pos;\n            strand2 = _strand;\n        }\n\n        switch (`${strand1}${strand2}`) {\n            case '+-':\n                d[newField] = DEL;\n                break;\n            case '--':\n                d[newField] = t2tINV;\n                break;\n            case '++':\n                d[newField] = h2hINV;\n                break;\n            case '-+':\n                d[newField] = DUP;\n                break;\n            default:\n                d[newField] = 'unknown';\n        }\n    });\n    return output;\n}\n\n/**\n * Aggregate data rows and calculate coverage of reads.\n */\nexport function aggregateCoverage(\n    _: CoverageTransform,\n    data: Datum[],\n    scale: d3.ScaleContinuousNumeric<number, number>\n): Datum[] {\n    // Logging.recordTime('aggregateCoverage');\n\n    const { startField, endField, newField, groupField } = _;\n\n    const coverage: { [group: string]: { [position: string]: number } } = {};\n\n    // Calculate coverage by one pixel.\n    const binSize = 1;\n    data.forEach(d => {\n        const curStart = scale(d[startField] as number);\n        const curEnd = scale(d[endField] as number);\n        const group = groupField ? d[groupField] : '__NO_GROUP__';\n\n        const adjustedStart = Math.floor(curStart);\n        for (let i = adjustedStart; i < curEnd; i += binSize) {\n            if (!coverage[group]) {\n                coverage[group] = {};\n            }\n            if (!coverage[group][i]) {\n                coverage[group][i] = 0;\n            }\n            coverage[group][i]++;\n        }\n    });\n\n    const output = Object.entries(coverage).flatMap(group => {\n        const [groupName, coverageRecords] = group;\n        return Object.entries(coverageRecords).map(entry => {\n            const [key, value] = entry;\n            return {\n                [startField]: scale.invert(+key),\n                [endField]: scale.invert(+key + binSize),\n                [newField ?? 'coverage']: value,\n                [groupField ?? 'group']: groupName\n            };\n        });\n    });\n\n    // console.log(coverage);\n    // Logging.printTime('aggregateCoverage');\n    return output;\n}\n\n/**\n * Mark displacement transform furnctions.\n * @param t An object that contains data transformation spec.\n * @param data An array of objects that contain data.\n * @param scale A d3's linear scale that map between data-level values to screen-level values (px).\n * @returns\n */\nexport function displace(\n    t: DisplaceTransform,\n    data: Datum[],\n    scale: d3.ScaleContinuousNumeric<number, number>\n): Datum[] {\n    const { boundingBox, method, newField } = t;\n    const { startField, endField, groupField } = boundingBox;\n\n    let paddingInBp = 0;\n    if (boundingBox.padding && scale && !boundingBox.isPaddingBP) {\n        paddingInBp = Math.abs(scale.invert(boundingBox.padding) - scale.invert(0));\n    } else if (boundingBox.padding && boundingBox.isPaddingBP) {\n        paddingInBp = boundingBox.padding;\n    }\n\n    // Check whether we have sufficient information.\n    const base = Array.from(data);\n    if (base && base.length > 0) {\n        if (!Object.keys(base[0]).find(d => d === startField) || !Object.keys(base[0]).find(d => d === endField)) {\n            // We did not find the fields from the data, so exit here.\n            return base;\n        }\n    }\n\n    if (method === 'pile') {\n        // This piling algorithm is heavily based on\n        // https://github.com/higlass/higlass-pileup/blob/8538a34c6d884c28455d6178377ee1ea2c2c90ae/src/bam-fetcher-worker.js#L626\n        const { maxRows } = t;\n        const occupiedSpaceInRows: { [group: string]: { start: number; end: number }[] } = {};\n\n        const sorted = base.sort((a: Datum, b: Datum) => (a[startField] as number) - (b[startField] as number));\n\n        sorted.forEach((d: Datum) => {\n            const start = +d[startField] - paddingInBp;\n            const end = +d[endField] + paddingInBp;\n\n            // Create object if none\n            const group = groupField ? d[groupField] : '__NO_GROUP__';\n            if (!occupiedSpaceInRows[group]) {\n                occupiedSpaceInRows[group] = [];\n            }\n\n            // Find a row to place this segment\n            let rowIndex = occupiedSpaceInRows[group].findIndex(d => {\n                // Find a space and update the occupancy info.\n                if (end < d.start) {\n                    d.start = start;\n                    return true;\n                } else if (d.end < start) {\n                    d.end = end;\n                    return true;\n                }\n                return false;\n            });\n\n            if (rowIndex === -1) {\n                // We did not find sufficient space from the existing rows, so add a new row.\n                occupiedSpaceInRows[group].push({ start, end });\n                rowIndex = occupiedSpaceInRows[group].length - 1;\n            }\n\n            d[newField] = `${maxRows && maxRows <= rowIndex ? maxRows - 1 : rowIndex}`;\n        });\n    } else if (method === 'spread') {\n        const boundingBoxes: { start: number; end: number }[] = [];\n\n        base.sort((a: Datum, b: Datum) => (a[startField] as number) - (b[startField] as number)).forEach((d: Datum) => {\n            let start = (d[startField] as number) - paddingInBp;\n            let end = (d[endField] as number) + paddingInBp;\n\n            let overlapped = boundingBoxes.filter(\n                box =>\n                    (box.start === start && end === box.end) ||\n                    (box.start < start && start < box.end) ||\n                    (box.start < end && end < box.end) ||\n                    (start < box.start && box.end < end)\n            );\n\n            if (overlapped.length > 0) {\n                let trial = 0;\n                do {\n                    overlapped = boundingBoxes.filter(\n                        box =>\n                            (box.start === start && end === box.end) ||\n                            (box.start < start && start < box.end) ||\n                            (box.start < end && end < box.end) ||\n                            (start < box.start && box.end < end)\n                    );\n                    if (overlapped.length > 0) {\n                        if (trial % 2 === 0) {\n                            start += paddingInBp * trial;\n                            end += paddingInBp * trial;\n                        } else {\n                            start -= paddingInBp * trial;\n                            end -= paddingInBp * trial;\n                        }\n                    }\n                    trial++;\n                    // TODO: do not go outside of a tile.\n                } while (overlapped.length > 0 && trial < 1000);\n            }\n\n            d[`${newField}Start`] = `${start + paddingInBp}`;\n            d[`${newField}Etart`] = `${end - paddingInBp}`;\n\n            boundingBoxes.push({ start, end });\n        });\n    }\n\n    // Logging.printTime('displace()');\n    return base;\n}\n\nexport function splitExon(split: ExonSplitTransform, data: Datum[], assembly: Assembly = 'hg38'): Datum[] {\n    const { separator, fields, flag } = split;\n    let output: Datum[] = Array.from(data);\n    output = output\n        .map((d: Datum) => {\n            const newRows: Datum[] = [];\n\n            fields.forEach(f => {\n                const { field, type, newField, chrField } = f;\n                const splitted = d[field].toString().split(separator);\n\n                splitted.forEach((s, i) => {\n                    let newValue: string | number = s;\n                    if (type === 'genomic') {\n                        newValue = computeChromSizes(assembly).interval[d[chrField]][0] + +s;\n                    }\n                    if (!newRows[i]) {\n                        // No row exist, so create one.\n                        newRows[i] = Object.assign(JSON.parse(JSON.stringify(d)), {\n                            [newField]: newValue,\n                            [flag.field]: flag.value\n                        });\n                    } else {\n                        newRows[i][newField] = newValue;\n                    }\n                });\n            });\n            return [d, ...newRows];\n        })\n        .reduce((a, b) => a.concat(b), []);\n    return output;\n}\n\n// TODO: Get this data from the fetcher as a default with a flag variable.\nexport function parseSubJSON(_: JsonParseTransform, data: Datum[]): Datum[] {\n    const { field, genomicField, baseGenomicField, genomicLengthField } = _;\n    let output: Datum[] = Array.from(data);\n    output = output\n        .map((d: Datum) => {\n            let newRows: Datum[] = JSON.parse(d[field] as string);\n\n            newRows = newRows.map(row => {\n                if (row[genomicField] && d[baseGenomicField]) {\n                    row[`${genomicField}_start`] = +row[genomicField] + +d[baseGenomicField];\n                    row[`${genomicField}_end`] = +row[genomicField] + +d[baseGenomicField] + +row[genomicLengthField];\n                }\n\n                return Object.assign(JSON.parse(JSON.stringify(d)), {\n                    ...row,\n                    [`${genomicField}_start`]: row[`${genomicField}_start`],\n                    [`${genomicField}_end`]: row[`${genomicField}_end`],\n                    type: row.type ?? row.variant ?? null,\n                    isParsedRow: 'yes'\n                });\n            });\n\n            return [d, ...newRows];\n        })\n        .reduce((a, b) => a.concat(b), []);\n    return output;\n}\n\n/**\n * Experimental! Only support one category supported yet.\n */\nexport function aggregateData(spec: SingleTrack, data: Datum[]): Datum[] {\n    if (getChannelKeysByAggregateFnc(spec).length === 0) {\n        // we do not have aggregated fields\n        return data;\n    }\n\n    const nChannelKeys = getChannelKeysByType(spec, 'nominal');\n\n    if (nChannelKeys.length !== 1) {\n        console.warn('Currently, we only support aggregating datasets with single nominal field.');\n        return data;\n    }\n\n    const nFieldSpec = spec[nChannelKeys[0]];\n    if (!IsChannelDeep(nFieldSpec)) {\n        // this shouldn't be reached\n        return data;\n    }\n\n    const nField = nFieldSpec.field;\n    if (!nField) {\n        // this shouldn't be reached\n        return data;\n    }\n\n    const qChannelKeys = [...getChannelKeysByType(spec, 'quantitative'), ...getChannelKeysByType(spec, 'genomic')];\n    const aggregated: { [k: string]: number | string }[] = [];\n\n    const uniqueCategories = Array.from(new Set(data.map(d => d[nField])));\n\n    let failed = false;\n    uniqueCategories.forEach(c => {\n        const datum: { [k: string]: string | number } = {};\n\n        datum[nField] = c;\n\n        // for each quantitative fields\n        qChannelKeys.forEach(q => {\n            const qFieldSpec = spec[q];\n            if (!IsChannelDeep(qFieldSpec)) {\n                // this shouldn't be reached\n                failed = true;\n                return;\n            }\n\n            const { field: qField } = qFieldSpec;\n            if (!qField || !('aggregate' in qFieldSpec)) {\n                // this shouldn't be reached\n                failed = true;\n                return;\n            }\n\n            datum[qField] =\n                qFieldSpec.aggregate === 'max'\n                    ? Math.max(...data.filter(d => d[nField] === c).map(d => +d[qField]))\n                    : Math.min(...data.filter(d => d[nField] === c).map(d => +d[qField]));\n        });\n\n        aggregated.push(datum);\n    });\n\n    // set aggregated data only if we successfully generated it\n    return !failed ? aggregated : data;\n}\n","import { dsvFormat as d3dsvFormat, type DSVRowString } from 'd3-dsv';\nimport { computeChromSizes } from '../../core/utils/assembly';\nimport { sampleSize } from 'lodash-es';\nimport type { Assembly, CsvData, FilterTransform, Datum } from '@gosling-lang/gosling-schema';\nimport { filterData } from '../../core/utils/data-transform';\nimport { type CommonDataConfig, filterUsingGenoPos, sanitizeChrName, RemoteFile } from '../utils';\n\ntype CsvDataConfig = CsvData & CommonDataConfig & { filter?: FilterTransform[] };\n\ninterface ChromSizes {\n    chrToAbs: (chrom: string, chromPos: number) => number;\n    cumPositions: { id: number; chr: string; pos: number }[];\n    chrPositions: { [k: string]: { id: number; chr: string; pos: number } };\n    totalLength: number;\n    chromLengths: { [k: string]: number };\n}\n\n/**\n * Used in #tile() to associate tile coordinates with data\n */\ninterface TileInfo {\n    tabularData: Datum[];\n    server: null;\n    tilePos: number[];\n    zoomLevel: number;\n    tilePositionId?: string;\n}\n/**\n * This is what all the tile information eventually gets organized into.\n */\nexport interface LoadedTiles {\n    [tilePositionId: string]: TileInfo;\n}\n\n/**\n * Used in #generateTilesetInfo()\n */\ninterface TilesetInfo {\n    tile_size: number;\n    max_zoom: number;\n    max_width: number;\n    min_pos: number[];\n    max_pos: number[];\n}\n\nexport class CsvDataFetcherClass {\n    dataConfig: CsvDataConfig;\n    // @ts-ignore\n    tilesetInfoLoading: boolean; // Used in TiledPixiTrack\n\n    #dataPromise: Promise<void> | undefined;\n    #chromSizes: ChromSizes;\n    #parsedData!: DSVRowString<string>[]; // Either set in the constructor or in #fetchCsv()\n    #assembly: Assembly;\n    #filter: FilterTransform[] | undefined;\n    #file: RemoteFile;\n\n    constructor(dataConfig: CsvDataConfig) {\n        this.dataConfig = dataConfig;\n        this.tilesetInfoLoading = false;\n        this.#assembly = this.dataConfig.assembly;\n        this.#filter = this.dataConfig.filter;\n\n        if (!dataConfig.url) {\n            console.error('Please provide the `url` of the data');\n        }\n\n        // Use any headers for this particular URL\n        const { urlFetchOptions, url } = dataConfig;\n        this.#file = new RemoteFile(url, { overrides: urlFetchOptions });\n\n        this.#chromSizes = this.#generateChomSizeInfo();\n        this.#dataPromise = this.#fetchCsv();\n    }\n\n    /**\n     * Fetches CSV file from url, parses it, and sets this.#parsedData\n     */\n    async #fetchCsv(): Promise<void> {\n        const { chromosomeField, genomicFields, headerNames, longToWideId, genomicFieldsToConvert } = this.dataConfig;\n\n        const separator = this.dataConfig.separator ?? ',';\n\n        try {\n            const buffer = await this.#file.readFile();\n            const text = buffer.toString();\n            const textWithHeader = headerNames ? `${headerNames.join(separator)}\\n${text}` : text;\n\n            const parsedCSV = d3dsvFormat(separator).parse(textWithHeader, (row: DSVRowString<string>) =>\n                this.#processCsvRow(row, genomicFieldsToConvert, chromosomeField, genomicFields)\n            );\n\n            if (longToWideId && parsedCSV[0]?.[longToWideId]) {\n                // rows having identical IDs are juxtaposed horizontally\n                const columnNames = Object.keys(parsedCSV[0]);\n                const newJson: { [k: string]: DSVRowString<string> } = {};\n                parsedCSV.forEach(row => {\n                    if (!newJson[row[longToWideId] as string]) {\n                        newJson[row[longToWideId] as string] = JSON.parse(JSON.stringify(row));\n                    } else {\n                        columnNames.forEach(colName => {\n                            newJson[row[longToWideId] as string][`${colName}_2`] = row[colName];\n                        });\n                    }\n                });\n                this.#parsedData = Object.keys(newJson).map(k_3 => newJson[k_3]);\n            } else {\n                this.#parsedData = parsedCSV;\n            }\n        } catch (error) {\n            console.error('[Gosling Data Fetcher] Error fetching data', error);\n        }\n    }\n\n    /**\n     * Function passed into DSV parser to process each row\n     * @param row An object which contains the row information. The keys are the column names\n     * @param genomicFieldsToConvert From data config\n     * @param chromosomeField From data config\n     * @param genomicFields From data config\n     * @returns The processed row\n     */\n    #processCsvRow(\n        row: DSVRowString,\n        genomicFieldsToConvert: CsvData['genomicFieldsToConvert'],\n        chromosomeField: CsvData['chromosomeField'],\n        genomicFields: CsvData['genomicFields']\n    ) {\n        try {\n            if (genomicFieldsToConvert) {\n                // This spec is used when multiple chromosomes are stored in a single row\n                genomicFieldsToConvert.forEach(chromMap => {\n                    const genomicFields_1 = chromMap.genomicFields;\n                    const chromName = row[chromMap.chromosomeField] as string;\n\n                    genomicFields_1.forEach((positionCol: string) => {\n                        const chromPosition = row[positionCol] as string;\n                        row[positionCol] = String(this.#calcCumulativePos(chromName, chromPosition));\n                    });\n                });\n            } else if (chromosomeField && genomicFields) {\n                genomicFields.forEach((positionCol_1: string) => {\n                    const chromPosition_1 = row[positionCol_1] as string;\n                    const chromName_1 = row[chromosomeField] as string;\n                    row[positionCol_1] = String(this.#calcCumulativePos(chromName_1, chromPosition_1));\n                });\n            }\n            return row;\n        } catch {\n            // skip the rows that had errors in them\n            return undefined;\n        }\n    }\n\n    /**\n     * Calculates the cumulative chromosome position based on the chromosome name and position\n     * @param chromName A string, the name of the chromosome\n     * @param chromPosition A string, the position within the chromosome\n     */\n    #calcCumulativePos(chromName: string, chromPosition: string) {\n        if (this.#assembly !== 'unknown') {\n            // This means we need to use the relative position considering the start position of individual chr.\n            const chrName = sanitizeChrName(chromName, this.#assembly, this.dataConfig.chromosomePrefix);\n            return computeChromSizes(this.#assembly).interval[chrName][0] + +chromPosition;\n        } else {\n            return chromPosition;\n        }\n    }\n    /**\n     * Called in TiledPixiTrack\n     */\n    tilesetInfo(callback?: (tilesetInto: TilesetInfo) => void): Promise<TilesetInfo | void> | undefined {\n        if (!this.#dataPromise) {\n            // data promise is not prepared yet\n            return;\n        }\n\n        this.tilesetInfoLoading = true;\n\n        return this.#dataPromise\n            .then(() => this.#generateTilesetInfo(callback))\n            .catch(err => {\n                this.tilesetInfoLoading = false;\n                console.error('[Gosling Data Fetcher] Error parsing data:', err);\n            });\n    }\n    /**\n     * Called by this.tilesetInfo() to call a callback function with tileset info.\n     */\n    #generateTilesetInfo(callback?: (tilesetInfo: TilesetInfo) => void): TilesetInfo {\n        this.tilesetInfoLoading = false;\n\n        const TILE_SIZE = 1024;\n        const totalLength = this.#chromSizes.totalLength;\n        const retVal = {\n            tile_size: TILE_SIZE,\n            max_zoom: Math.ceil(Math.log(totalLength / TILE_SIZE) / Math.log(2)),\n            max_width: totalLength,\n            min_pos: [0, 0],\n            max_pos: [totalLength, totalLength]\n        };\n\n        if (callback) {\n            callback(retVal);\n        }\n\n        return retVal;\n    }\n    /**\n     * Called in TiledPixiTrack.\n     * @param receivedTiles A function from TiledPixiTrack which takes in all the loaded tiles\n     * @param tileIds An array of tile IDs. Ex. ['1.0', '1.1']\n     */\n    fetchTilesDebounced(receivedTiles: (loadedTiles: LoadedTiles) => void, tileIds: string[]): void {\n        const tiles: LoadedTiles = {};\n\n        const validTileIds: string[] = [];\n        const tilePromises = [];\n\n        for (const tileId of tileIds) {\n            const parts = tileId.split('.');\n            const z = parseInt(parts[0], 10);\n            const x = parseInt(parts[1], 10);\n            const y = parseInt(parts[2], 10);\n\n            if (Number.isNaN(x) || Number.isNaN(z)) {\n                console.warn('[Gosling Data Fetcher] Invalid tile zoom or position:', z, x, y);\n                continue;\n            }\n\n            validTileIds.push(tileId);\n            tilePromises.push(this.#tile(z, x, y));\n        }\n\n        Promise.all(tilePromises).then(tileInfo => {\n            tileInfo.forEach((tileInfo, i) => {\n                if (tileInfo) {\n                    const validTileId = validTileIds[i];\n                    tiles[validTileId] = tileInfo;\n                    tiles[validTileId].tilePositionId = validTileId;\n                }\n            });\n            receivedTiles(tiles);\n        });\n    }\n    /**\n     * Creates an object to associate a tile position with the corresponding data\n     * @param z An integer, the z coordinate of the tile\n     * @param x An integer, the x coordinate of the tile\n     * @param y An integer, the y coordinate of the tile\n     * @returns A promise of an object with tile coordinates and data\n     */\n    async #tile(z: number, x: number, y: number): Promise<TileInfo | undefined> {\n        const tilesetInfo = await this.tilesetInfo();\n        if (!tilesetInfo) return;\n\n        const tileWidth = +tilesetInfo.max_width / 2 ** +z;\n\n        // get the bounds of the tile\n        const minX = tilesetInfo.min_pos[0] + x * tileWidth;\n        const maxX = tilesetInfo.min_pos[0] + (x + 1) * tileWidth;\n\n        // filter the data so that only the visible data is sent to tracks\n        let tabularData = filterUsingGenoPos(this.#parsedData as Datum[], [minX, maxX], this.dataConfig);\n\n        // filter data based on the `DataTransform` spec\n        this.#filter?.forEach(f => {\n            tabularData = filterData(f, tabularData);\n        });\n\n        const sizeLimit = this.dataConfig.sampleLength ?? 1000;\n        return {\n            // sample the data to make it managable for visualization components\n            tabularData: tabularData.length > sizeLimit ? sampleSize(tabularData, sizeLimit) : tabularData,\n            server: null,\n            tilePos: [x, y],\n            zoomLevel: z\n        };\n    }\n\n    /**\n     * This function calculates chromosome position and size based on the assembly (this.#assembly)\n     * @returns An object containing chromosome information and a way to calculate absolute position\n     */\n    #generateChomSizeInfo(): ChromSizes {\n        // Prepare chromosome interval information\n        const chromosomeSizes: { [k: string]: number } = computeChromSizes(this.#assembly).size;\n        const chromosomeCumPositions: { id: number; chr: string; pos: number }[] = [];\n        const chromosomePositions: { [k: string]: { id: number; chr: string; pos: number } } = {};\n        let prevEndPosition = 0;\n\n        Object.keys(chromosomeSizes).forEach((chrStr, i) => {\n            const positionInfo = {\n                id: i,\n                chr: chrStr,\n                pos: prevEndPosition\n            };\n\n            chromosomeCumPositions.push(positionInfo);\n            chromosomePositions[chrStr] = positionInfo;\n\n            prevEndPosition += chromosomeSizes[chrStr];\n        });\n\n        return {\n            chrToAbs: (chrom: string, chromPos: number) => this.#chromSizes.chrPositions[chrom].pos + chromPos,\n            cumPositions: chromosomeCumPositions,\n            chrPositions: chromosomePositions,\n            totalLength: prevEndPosition,\n            chromLengths: chromosomeSizes\n        };\n    }\n}\n\n/**\n * HiGlass data fetcher specific for Gosling which ultimately will accept any types of data other than CSV files.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction CsvDataFetcher(\n    _HGC: import('@higlass/types').HGC,\n    dataConfig: CsvDataConfig,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _pubsub: Record<string, any>\n): CsvDataFetcherClass {\n    if (!new.target) {\n        throw new Error('Uncaught TypeError: Class constructor cannot be invoked without \"new\"');\n    }\n\n    return new CsvDataFetcherClass(dataConfig);\n}\n\nCsvDataFetcher.config = {\n    type: 'csv'\n};\n\nexport default CsvDataFetcher;\n","import { computeChromSizes } from '../../core/utils/assembly';\nimport { sampleSize } from 'lodash-es';\nimport type { Assembly, JsonData } from '@gosling-lang/gosling-schema';\nimport { type CommonDataConfig, filterUsingGenoPos, sanitizeChrName } from '../utils';\n\ntype CsvDataConfig = JsonData & CommonDataConfig;\n\n/**\n * HiGlass data fetcher specific for Gosling which ultimately will accept any types of data other than JSON values.\n */\nfunction JsonDataFetcher(HGC: any, ...args: any): any {\n    if (!new.target) {\n        throw new Error('Uncaught TypeError: Class constructor cannot be invoked without \"new\"');\n    }\n\n    class JsonDataFetcherClass {\n        private dataConfig: CsvDataConfig;\n        // @ts-ignore\n        private tilesetInfoLoading: boolean;\n        private chromSizes: any;\n        private values: any;\n        private assembly: Assembly;\n\n        constructor(params: any[]) {\n            const [dataConfig] = params;\n            this.dataConfig = dataConfig;\n            this.tilesetInfoLoading = false;\n            this.assembly = this.dataConfig.assembly;\n\n            if (!dataConfig.values) {\n                console.error('Please provide `values` of the JSON data');\n                return;\n            }\n\n            // Prepare chromosome interval information\n            const chromosomeSizes: { [k: string]: number } = computeChromSizes(this.assembly).size;\n            const chromosomeCumPositions: { id: number; chr: string; pos: number }[] = [];\n            const chromosomePositions: { [k: string]: { id: number; chr: string; pos: number } } = {};\n            let prevEndPosition = 0;\n\n            Object.keys(computeChromSizes(this.assembly).size).forEach((chrStr, i) => {\n                const positionInfo = {\n                    id: i,\n                    chr: chrStr,\n                    pos: prevEndPosition\n                };\n\n                chromosomeCumPositions.push(positionInfo);\n                chromosomePositions[chrStr] = positionInfo;\n\n                prevEndPosition += computeChromSizes(this.assembly).size[chrStr];\n            });\n            this.chromSizes = {\n                chrToAbs: (chrom: string, chromPos: number) => this.chromSizes.chrPositions[chrom].pos + chromPos,\n                cumPositions: chromosomeCumPositions,\n                chrPositions: chromosomePositions,\n                totalLength: prevEndPosition,\n                chromLengths: chromosomeSizes\n            };\n\n            const { chromosomeField, genomicFields, genomicFieldsToConvert } = this.dataConfig;\n            this.values = dataConfig.values.map((row: any) => {\n                try {\n                    if (genomicFieldsToConvert) {\n                        // This spec is used when multiple chromosomes are stored in a single row\n                        genomicFieldsToConvert.forEach(chromMap => {\n                            const genomicFields = chromMap.genomicFields;\n                            const chromName = sanitizeChrName(row[chromMap.chromosomeField], this.assembly) as string;\n\n                            genomicFields.forEach((positionCol: string) => {\n                                const chromPosition = row[positionCol] as string;\n                                row[positionCol] = String(this.chromSizes.chrToAbs(chromName, chromPosition));\n                            });\n                        });\n                    } else if (chromosomeField && genomicFields) {\n                        genomicFields.forEach((positionCol: string) => {\n                            const chromPosition = row[positionCol] as string;\n                            const chromName = sanitizeChrName(row[chromosomeField], this.assembly) as string;\n                            row[positionCol] = String(this.chromSizes.chrToAbs(chromName, chromPosition));\n                        });\n                    }\n                    return row;\n                } catch {\n                    // skip the rows that had errors in them\n                    return undefined;\n                }\n            });\n        }\n\n        tilesetInfo(callback?: any) {\n            this.tilesetInfoLoading = false;\n\n            const TILE_SIZE = 1024;\n            const totalLength = this.chromSizes.totalLength;\n            const retVal = {\n                tile_size: TILE_SIZE,\n                max_zoom: Math.ceil(Math.log(totalLength / TILE_SIZE) / Math.log(2)),\n                max_width: totalLength,\n                min_pos: [0, 0],\n                max_pos: [totalLength, totalLength]\n            };\n\n            if (callback) {\n                callback(retVal);\n            }\n\n            return retVal;\n        }\n\n        fetchTilesDebounced(receivedTiles: any, tileIds: any) {\n            const tiles: { [k: string]: any } = {};\n\n            const validTileIds: any[] = [];\n            const tilePromises = [];\n\n            for (const tileId of tileIds) {\n                const parts = tileId.split('.');\n                const z = parseInt(parts[0], 10);\n                const x = parseInt(parts[1], 10);\n                const y = parseInt(parts[2], 10);\n\n                if (Number.isNaN(x) || Number.isNaN(z)) {\n                    console.warn('[Gosling Data Fetcher] Invalid tile zoom or position:', z, x, y);\n                    continue;\n                }\n\n                validTileIds.push(tileId);\n                tilePromises.push(this.tile(z, x, y));\n            }\n\n            Promise.all(tilePromises).then(values => {\n                values.forEach((value, i) => {\n                    const validTileId = validTileIds[i];\n                    tiles[validTileId] = value;\n                    tiles[validTileId].tilePositionId = validTileId;\n                });\n                receivedTiles(tiles);\n            });\n\n            return tiles;\n        }\n\n        tile(z: any, x: any, y: any) {\n            const tsInfo = this.tilesetInfo();\n            const tileWidth = +tsInfo.max_width / 2 ** +z;\n\n            // get the bounds of the tile\n            const minX = tsInfo.min_pos[0] + x * tileWidth;\n            const maxX = tsInfo.min_pos[0] + (x + 1) * tileWidth;\n\n            // filter the data so that visible data is sent to tracks\n            let tabularData = filterUsingGenoPos(this.values, [minX, maxX], this.dataConfig);\n\n            // sample the data to make it managable for visualization components\n            const sizeLimit = this.dataConfig.sampleLength ?? 1000;\n            if (sizeLimit < tabularData.length) {\n                // TODO: allow to provide sampling method which incorporates order of JSON array (similar to tabularData.slice(0, sizeLimit))\n                tabularData =\n                    this.dataConfig.sampleType === 'first'\n                        ? tabularData.slice(0, sizeLimit)\n                        : sampleSize(tabularData, sizeLimit);\n            }\n\n            return {\n                tabularData,\n                server: null,\n                tilePos: [x, y],\n                zoomLevel: z\n            };\n        }\n    }\n\n    return new JsonDataFetcherClass(args);\n}\n\nJsonDataFetcher.config = {\n    type: 'json'\n};\n\nexport default JsonDataFetcher;\n","/*\n * The GFF data fetcher is based heavily on the BED and VCF data fetchers\n */\nimport { spawn } from 'threads';\nimport Worker from './gff-worker.ts?worker&inline';\n\nimport { computeChromSizes } from '../../core/utils/assembly';\n\nimport type { ModuleThread } from 'threads';\nimport type { Assembly, GffData } from '@gosling-lang/gosling-schema';\nimport type { WorkerApi, TilesetInfo, GffTile, EmptyTile } from './gff-worker';\nimport type { TabularDataFetcher } from '../utils';\n\nconst DEBOUNCE_TIME = 200;\n\nexport type GFFDataConfig = GffData & { assembly: Assembly };\n\nclass GffDataFetcher implements TabularDataFetcher<GffTile> {\n    static config = { type: 'gff' };\n    dataConfig = {}; // required for higlass\n    uid: string;\n    prevRequestTime: number;\n    track?: any;\n\n    private toFetch: Set<string>;\n    private fetchTimeout?: ReturnType<typeof setTimeout>;\n    private worker: Promise<ModuleThread<WorkerApi>>;\n\n    constructor(HGC: import('@higlass/types').HGC, config: GFFDataConfig) {\n        this.uid = HGC.libraries.slugid.nice();\n        this.prevRequestTime = 0;\n        this.toFetch = new Set();\n        const { url, indexUrl, assembly, ...options } = config;\n        this.worker = spawn<WorkerApi>(new Worker()).then(async worker => {\n            const chromSizes = Object.entries(computeChromSizes(assembly).size);\n            await worker.init(this.uid, { url, indexUrl }, chromSizes, options);\n            return worker;\n        });\n    }\n\n    /*\n     * Collect Tileset Information, such as tile size and genomic positions\n     */\n    async tilesetInfo(callback: (info: TilesetInfo) => void) {\n        (await this.worker).tilesetInfo(this.uid).then(callback);\n    }\n\n    fetchTilesDebounced(receivedTiles: (tiles: Record<string, EmptyTile>) => void, tileIds: string[]) {\n        this.track.drawLoadingCue();\n\n        tileIds.forEach(tileId => this.toFetch.add(tileId));\n\n        if (this.fetchTimeout) {\n            clearTimeout(this.fetchTimeout);\n        }\n\n        this.fetchTimeout = setTimeout(() => {\n            this.sendFetch(receivedTiles, [...this.toFetch]);\n            this.toFetch.clear();\n        }, DEBOUNCE_TIME);\n    }\n\n    async sendFetch(receivedTiles: (tiles: Record<string, EmptyTile>) => void, tileIds: string[]) {\n        (await this.worker).fetchTilesDebounced(this.uid, tileIds).then(receivedTiles);\n    }\n\n    async getTabularData(tileIds: string[]): Promise<GffTile[]> {\n        const buf = await (await this.worker).getTabularData(this.uid, tileIds);\n        const parsed = JSON.parse(new TextDecoder().decode(buf));\n        return parsed;\n    }\n}\n\nexport default GffDataFetcher;\n","/*\n * This document is heavily based on the following repo by @alexander-veit:\n * https://github.com/dbmi-bgm/higlass-sv/blob/main/src/sv-fetcher.js\n */\nimport { spawn } from 'threads';\nimport Worker from './bed-worker.ts?worker&inline';\n\nimport { computeChromSizes } from '../../core/utils/assembly';\n\nimport type { ModuleThread } from 'threads';\nimport type { Assembly, BedData } from '@gosling-lang/gosling-schema';\nimport type { WorkerApi, TilesetInfo } from './bed-worker';\nimport type { BedTile, EmptyTile } from './bed-worker';\nimport type { TabularDataFetcher } from '../utils';\n\nconst DEBOUNCE_TIME = 200;\n\nexport type BedDataConfig = BedData & { assembly: Assembly };\n\nclass BedDataFetcher implements TabularDataFetcher<BedTile> {\n    static config = { type: 'bed' };\n    dataConfig = {}; // required for higlass\n    uid: string;\n    prevRequestTime: number;\n    track?: any;\n\n    private toFetch: Set<string>;\n    private fetchTimeout?: ReturnType<typeof setTimeout>;\n    private worker: Promise<ModuleThread<WorkerApi>>;\n\n    constructor(HGC: import('@higlass/types').HGC, config: BedDataConfig) {\n        this.uid = HGC.libraries.slugid.nice();\n        this.prevRequestTime = 0;\n        this.toFetch = new Set();\n        const { url, indexUrl, assembly, ...options } = config;\n        this.worker = spawn<WorkerApi>(new Worker()).then(async worker => {\n            const chromSizes = Object.entries(computeChromSizes(assembly).size);\n            await worker.init(this.uid, { url, indexUrl }, chromSizes, options);\n            return worker;\n        });\n    }\n\n    /*\n     * Collect Tileset Information, such as tile size and genomic positions\n     */\n    async tilesetInfo(callback: (info: TilesetInfo) => void) {\n        (await this.worker).tilesetInfo(this.uid).then(callback);\n    }\n\n    fetchTilesDebounced(receivedTiles: (tiles: Record<string, EmptyTile>) => void, tileIds: string[]) {\n        this.track.drawLoadingCue();\n\n        tileIds.forEach(tileId => this.toFetch.add(tileId));\n\n        if (this.fetchTimeout) {\n            clearTimeout(this.fetchTimeout);\n        }\n\n        this.fetchTimeout = setTimeout(() => {\n            this.sendFetch(receivedTiles, [...this.toFetch]);\n            this.toFetch.clear();\n        }, DEBOUNCE_TIME);\n    }\n\n    async sendFetch(receivedTiles: (tiles: Record<string, EmptyTile>) => void, tileIds: string[]) {\n        (await this.worker).fetchTilesDebounced(this.uid, tileIds).then(receivedTiles);\n    }\n    /**\n     * Called by GoslingTrack. This is how the track gets data\n     * @param tileIds The position of the tile\n     * @returns A promise to the BedTiles\n     */\n    async getTabularData(tileIds: string[]): Promise<BedTile[]> {\n        const buf = await (await this.worker).getTabularData(this.uid, tileIds);\n        const parsed = JSON.parse(new TextDecoder().decode(buf));\n        return parsed;\n    }\n}\n\nexport default BedDataFetcher;\n","import type { SparseTile, TileData } from '@higlass/services';\nimport type { Datum, SingleTrack } from '@gosling-lang/gosling-schema';\nimport { IsDataDeepTileset } from '@gosling-lang/gosling-schema';\n\nexport const GOSLING_DATA_ROW_UID_FIELD = 'gosling-data-row-uid';\n\n/**\n * Convert genomic data formats to common tabular formats for given tile.\n */\nexport function getTabularData(\n    spec: SingleTrack,\n    data: TileData & {\n        sparse?: Array<SparseTile>;\n        shape?: [number, number];\n        tileX: number;\n        tileWidth: number;\n        tileSize: number;\n        tileY?: number; // used for matrix\n        tileHeight?: number; // used for matrix\n    }\n) {\n    const tabularData: Datum[] = [];\n\n    if (!IsDataDeepTileset(spec.data)) {\n        console.warn('No data is specified');\n        return;\n    }\n\n    if (spec.data.type === 'vector' || spec.data.type === 'bigwig') {\n        if (!('dense' in data)) {\n            // we did not get sufficient data.\n            return;\n        }\n\n        const bin = spec.data.binSize ?? 1;\n\n        const numericValues = data.dense;\n        const numOfGenomicPositions = data.tileSize;\n        const tileUnitSize = data.tileWidth / data.tileSize;\n\n        const valueName = spec.data.value ?? 'value';\n        const columnName = spec.data.column ?? 'position';\n        const startName = spec.data.start ?? 'start';\n        const endName = spec.data.end ?? 'end';\n\n        // additional columns with different aggregation functions\n        const minValueName = `${valueName}_min`;\n        const maxValueName = `${valueName}_max`;\n\n        // user's aggregation function\n        const agg = spec.data.aggregation ?? 'mean';\n\n        // convert data to a visualization-friendly format\n        let cumVal = 0;\n        let minVal = Number.MAX_SAFE_INTEGER;\n        let maxVal = Number.MIN_SAFE_INTEGER;\n        let binStart = Number.MIN_SAFE_INTEGER;\n        let binEnd = Number.MAX_SAFE_INTEGER;\n        Array.from(Array(numOfGenomicPositions).keys()).forEach((g: number, j: number) => {\n            // add individual rows\n            if (bin === 1) {\n                const value = numericValues[j] / (agg === 'mean' ? tileUnitSize : 1);\n                tabularData.push({\n                    [valueName]: value,\n                    [columnName]: data.tileX + (j + 0.5) * tileUnitSize,\n                    [startName]: data.tileX + j * tileUnitSize,\n                    [endName]: data.tileX + (j + 1) * tileUnitSize,\n                    [minValueName]: value,\n                    [maxValueName]: value\n                });\n            } else {\n                // bin the data considering the `binSize` option\n                if (j % bin === 0) {\n                    // Start storing information for this bin\n                    cumVal = minVal = maxVal = numericValues[j];\n                    binStart = j;\n                    binEnd = j + bin;\n                } else if (j % bin === bin - 1) {\n                    // Add a row using the cumulative value\n                    tabularData.push({\n                        [valueName]: cumVal / bin / (agg === 'mean' ? tileUnitSize : 1),\n                        [columnName]: data.tileX + (binStart + bin / 2.0) * tileUnitSize,\n                        [startName]: data.tileX + binStart * tileUnitSize,\n                        [endName]: data.tileX + binEnd * tileUnitSize,\n                        [minValueName]: minVal,\n                        [maxValueName]: maxVal\n                    });\n                } else if (j === numOfGenomicPositions - 1) {\n                    // Manage the remainders. Just add them as a single row.\n                    const smallBin = numOfGenomicPositions % bin;\n                    const correctedBinEnd = binStart + smallBin;\n                    tabularData.push({\n                        [valueName]: cumVal / smallBin / (agg === 'mean' ? tileUnitSize : 1),\n                        [columnName]: data.tileX + (binStart + smallBin / 2.0) * tileUnitSize,\n                        [startName]: data.tileX + binStart * tileUnitSize,\n                        [endName]: data.tileX + correctedBinEnd * tileUnitSize,\n                        [minValueName]: minVal,\n                        [maxValueName]: maxVal\n                    });\n                } else {\n                    // Add a current value\n                    cumVal += numericValues[j];\n                    if (minVal > numericValues[j]) minVal = numericValues[j];\n                    if (maxVal < numericValues[j]) maxVal = numericValues[j];\n                }\n            }\n        });\n    } else if (spec.data.type === 'multivec') {\n        if (!('dense' in data) || data.shape === undefined) {\n            // we did not get sufficient data.\n            return;\n        }\n\n        const bin = spec.data.binSize ?? 1;\n\n        const numOfTotalCategories = data.shape[0];\n        const categories: any = spec.data.categories ?? [...Array(numOfTotalCategories).keys()];\n        const numericValues = data.dense;\n        const numOfGenomicPositions = data.shape[1];\n        const tileUnitSize = data.tileWidth / data.tileSize;\n\n        const rowName = spec.data.row ?? 'category';\n        const valueName = spec.data.value ?? 'value';\n        const columnName = spec.data.column ?? 'position';\n        const startName = spec.data.start ?? 'start';\n        const endName = spec.data.end ?? 'end';\n\n        // additional columns with different aggregation functions\n        const minValueName = `${valueName}_min`;\n        const maxValueName = `${valueName}_max`;\n\n        // user's aggregation function\n        const agg = spec.data.aggregation ?? 'mean';\n\n        // convert data to a visualization-friendly format\n        categories.forEach((c: string, i: number) => {\n            let cumVal = 0;\n            let binStart = Number.MIN_SAFE_INTEGER;\n            let binEnd = Number.MAX_SAFE_INTEGER;\n            let minVal = Number.MAX_SAFE_INTEGER;\n            let maxVal = Number.MIN_SAFE_INTEGER;\n            Array.from(Array(numOfGenomicPositions).keys()).forEach((g: number, j: number) => {\n                // add individual rows\n                if (bin === 1) {\n                    const value = numericValues[numOfGenomicPositions * i + j] / (agg === 'mean' ? tileUnitSize : 1);\n                    tabularData.push({\n                        [rowName]: c,\n                        [valueName]: value,\n                        [columnName]: data.tileX + (j + 0.5) * tileUnitSize,\n                        [startName]: data.tileX + j * tileUnitSize,\n                        [endName]: data.tileX + (j + 1) * tileUnitSize,\n                        [minValueName]: value,\n                        [maxValueName]: value\n                    });\n                } else {\n                    if (j % bin === 0) {\n                        // Start storing information for this bin\n                        cumVal = minVal = maxVal = numericValues[numOfGenomicPositions * i + j];\n                        binStart = j;\n                        binEnd = j + bin;\n                    } else if (j % bin === bin - 1) {\n                        // Add a row using the cumulative value\n\n                        tabularData.push({\n                            [rowName]: c,\n                            [valueName]: agg === 'mean' ? cumVal / bin / tileUnitSize : cumVal,\n                            [columnName]: data.tileX + (binStart + bin / 2.0) * tileUnitSize,\n                            [startName]: data.tileX + binStart * tileUnitSize,\n                            [endName]: data.tileX + binEnd * tileUnitSize,\n                            [minValueName]: minVal,\n                            [maxValueName]: maxVal\n                        });\n                    } else if (j === numOfGenomicPositions - 1) {\n                        // Manage the remainders. Just add them as a single row.\n                        const smallBin = numOfGenomicPositions % bin;\n                        const correctedBinEnd = binStart + smallBin;\n                        tabularData.push({\n                            [rowName]: c,\n                            [valueName]: agg === 'mean' ? cumVal / smallBin / tileUnitSize : cumVal,\n                            [columnName]: data.tileX + (binStart + smallBin / 2.0) * tileUnitSize,\n                            [startName]: data.tileX + binStart * tileUnitSize,\n                            [endName]: data.tileX + correctedBinEnd * tileUnitSize,\n                            [minValueName]: minVal,\n                            [maxValueName]: maxVal\n                        });\n                    } else {\n                        // Add a current value\n                        const value = numericValues[numOfGenomicPositions * i + j];\n                        cumVal += value;\n                        if (minVal > value) minVal = value;\n                        if (maxVal < value) maxVal = value;\n                    }\n                }\n            });\n        });\n    } else if (spec.data.type === 'matrix') {\n        if (!('dense' in data) || typeof data.tileY === 'undefined' || typeof data.tileHeight === 'undefined') {\n            // we do not have sufficient data.\n            return;\n        }\n\n        // width and height of the tile\n        const numBins = Math.sqrt(data.dense.length);\n\n        const { tileX, tileY, tileWidth, tileHeight } = data;\n        const numericValues = data.dense;\n\n        const tileXUnitSize = tileWidth / numBins;\n        const tileYUnitSize = tileHeight / numBins;\n        const columnField = spec.data.column ?? 'x';\n        const rowField = spec.data.row ?? 'y';\n\n        // TODO: a way to improve rendering performance?\n        // For the rendering performance, we aggregate cells so that we draw smaller number of marks.\n        const aggSize = 16; // assuming that # of cells can be divided by binSize, which is mostly 256 or 1024\n        for (let i = 0; i < numericValues.length / aggSize; i++) {\n            const aggLen = Math.sqrt(aggSize);\n            const xIndex = (i * aggLen) % numBins;\n            const yIndex = Math.floor((i * aggLen) / numBins) * aggLen;\n\n            // Being xIndex and yIndex the top-let origin, aggregate 4 x 4 cells\n            let value = NaN;\n            for (let c = 0; c < aggLen; c++) {\n                for (let r = 0; r < aggLen; r++) {\n                    const curVal = numericValues[(yIndex + r) * numBins + (xIndex + c)];\n                    // If the current value is NaN, we do not need to do anything\n                    if (!isNaN(+curVal)) {\n                        // If the cumulative value is still NaN, which is the default value,\n                        // set that to zero so that we are able to add a value\n                        if (isNaN(value)) {\n                            value = 0;\n                        }\n                        value += curVal;\n                    }\n                }\n            }\n\n            if (isNaN(value)) {\n                // this means all values for this bin is NaN, hence a missing value\n                continue;\n            }\n\n            const xs = tileX + xIndex * tileXUnitSize;\n            const xe = tileX + (xIndex + aggLen) * tileXUnitSize;\n            const ys = tileY + yIndex * tileYUnitSize;\n            const ye = tileY + (yIndex + aggLen) * tileYUnitSize;\n            const x = (xs + xe) / 2.0;\n            const y = (ys + ye) / 2.0;\n            tabularData.push({\n                value,\n                [columnField]: x,\n                [`${columnField}s`]: xs,\n                [`${columnField}e`]: xe,\n                [rowField]: y,\n                [`${rowField}s`]: ys,\n                [`${rowField}e`]: ye\n            });\n        }\n    } else if (spec.data.type === 'beddb') {\n        if (!data.sparse) {\n            // we did not get sufficient data.\n            return;\n        }\n\n        const { genomicFields, exonIntervalFields, valueFields } = spec.data;\n\n        data.sparse.forEach((d, i) => {\n            const { chrOffset, fields } = d;\n\n            const datum: { [k: string]: number | string } = {};\n\n            datum[GOSLING_DATA_ROW_UID_FIELD] = `${i}`;\n\n            genomicFields.forEach(g => {\n                datum[g.name] = +fields[g.index] + chrOffset;\n            });\n\n            // values\n            valueFields?.forEach(v => {\n                datum[v.name] = v.type === 'quantitative' ? +fields[v.index] : fields[v.index];\n            });\n\n            tabularData.push({\n                ...datum,\n                type: 'gene' // this should be described in the spec\n            });\n\n            if (exonIntervalFields) {\n                const [exonStartField, exonEndField] = exonIntervalFields;\n                const exonStartStrs = (fields[exonStartField.index] as string).split(',');\n                const exonEndStrs = (fields[exonEndField.index] as string).split(',');\n\n                exonStartStrs.forEach((es, i) => {\n                    const ee = exonEndStrs[i];\n\n                    // exon\n                    tabularData.push({\n                        ...datum,\n                        [exonStartField.name]: +es + chrOffset,\n                        [exonEndField.name]: +ee + chrOffset,\n                        type: 'exon'\n                    });\n\n                    // intron\n                    if (i + 1 < exonStartStrs.length) {\n                        const nextEs = exonStartStrs[i + 1];\n                        tabularData.push({\n                            ...datum,\n                            [exonStartField.name]: +ee + chrOffset,\n                            [exonEndField.name]: +nextEs + chrOffset,\n                            type: 'intron'\n                        });\n                    }\n                });\n            }\n        });\n    }\n\n    /// DEBUG\n    // console.log(tabularData);\n\n    return tabularData;\n}\n","import type { GoslingTrackModel } from '../../tracks/gosling-track/gosling-track-model';\nimport type { Assembly, Domain } from '@gosling-lang/gosling-schema';\nimport { SUPPORTED_CHANNELS } from '../mark';\nimport { IsDomainChr, IsDomainInterval, IsDomainChrInterval, IsChannelDeep } from '@gosling-lang/gosling-schema';\nimport { computeChromSizes } from './assembly';\n\n/**\n * Get a numeric domain based on a domain specification.\n * For example, domain: { chromosome: 'chr1', interval: [1, 300,000] } => domain: [1, 300,000]\n */\nexport function getNumericDomain(domain: Domain, assembly?: Assembly) {\n    const chromInterval = computeChromSizes(assembly).interval;\n    if ('chromosome' in domain) {\n        const isThereChr = Object.keys(chromInterval).find(chr => chr === domain.chromosome);\n        if (!isThereChr) {\n            // Did not find the chromosome, so return early.\n            return;\n        }\n    }\n    if (IsDomainChr(domain)) {\n        return [chromInterval[domain.chromosome][0] + 1, chromInterval[domain.chromosome][1]];\n    } else if (IsDomainInterval(domain)) {\n        return domain.interval;\n    } else if (IsDomainChrInterval(domain)) {\n        const chrStart = chromInterval[domain.chromosome][0];\n        const [start, end] = domain.interval;\n        return [chrStart + start, chrStart + end];\n    }\n}\n\n// TODO: IMPORTANT: when panning the tiles, the extent only becomes larger\n/**\n * Use a shared scale (i.e., `domain`) across multiple gosling tracks.\n */\nexport function shareScaleAcrossTracks(trackModels: GoslingTrackModel[], force?: boolean) {\n    // we update the spec with a global domain\n    const globalDomain: { [k: string]: number[] | string[] } = {};\n    const channelKeys = SUPPORTED_CHANNELS;\n\n    // generate global domains\n    trackModels.forEach(model => {\n        channelKeys.forEach(channelKey => {\n            const channel = model.spec()[channelKey];\n            if (!IsChannelDeep(channel) || channel.domain === undefined) {\n                return;\n            }\n\n            const { domain, type } = channel;\n\n            if (type === 'quantitative') {\n                const numericDomain: number[] = Array.from(domain as number[]);\n                if (!globalDomain[channelKey]) {\n                    globalDomain[channelKey] = numericDomain;\n                } else {\n                    const channelGlobalDomain = globalDomain[channelKey] as number[];\n\n                    if (channelGlobalDomain[0] > numericDomain[0]) {\n                        // min\n                        channelGlobalDomain[0] = numericDomain[0];\n                    }\n                    if (channelGlobalDomain[1] < numericDomain[1]) {\n                        // max\n                        channelGlobalDomain[1] = numericDomain[1];\n                    }\n                }\n            } else if (type === 'nominal') {\n                const nominalDomain: string[] = Array.from(domain as string[]);\n                if (!globalDomain[channelKey]) {\n                    globalDomain[channelKey] = nominalDomain;\n                } else {\n                    globalDomain[channelKey] = Array.from(\n                        new Set([...globalDomain[channelKey], ...nominalDomain])\n                    ) as string[];\n                }\n            }\n        });\n    });\n\n    // replace the domain and update scales\n    trackModels.forEach(model => {\n        channelKeys.forEach(channelKey => {\n            const channel = model.spec()[channelKey];\n            if (IsChannelDeep(channel) && channel.type === 'genomic') return;\n            model.setChannelDomain(channelKey, globalDomain[channelKey], force);\n            model.generateScales();\n        });\n\n        // update constant default values using the updated scales\n        model.updateChannelValue();\n    });\n}\n","const example = {\n    compactLayout: false,\n    trackSourceServers: ['https://server.gosling-lang.org/api/v1/'],\n    views: [\n        {\n            genomePositionSearchBoxVisible: false,\n            genomePositionSearchBox: {\n                autocompleteServer: 'https://higlass.io/api/v1',\n                autocompleteId: 'P0PLbQMwTYGy-5uPIQid7A',\n                chromInfoServer: 'https://higlass.io/api/v1',\n                chromInfoId: 'hg38'\n            },\n            layout: { x: 0, y: 0, w: 6.4, h: 600 },\n            tracks: {\n                top: [],\n                left: [\n                    {\n                        type: 'combined',\n                        width: 130,\n                        height: 600,\n                        contents: [\n                            {\n                                type: 'gosling-track',\n                                server: 'https://server.gosling-lang.org/api/v1/',\n                                tilesetUid: 'cistrome-multivec',\n                                width: 130,\n                                height: 600,\n                                options: {\n                                    showMousePosition: true,\n                                    mousePositionColor: '#000000',\n                                    fontSize: 24,\n                                    labelPosition: 'none',\n                                    labelShowResolution: false,\n                                    labelColor: 'black',\n                                    labelBackgroundColor: 'white',\n                                    labelTextOpacity: 1,\n                                    labelLeftMargin: 1,\n                                    labelTopMargin: 1,\n                                    labelRightMargin: 0,\n                                    labelBottomMargin: 0,\n                                    backgroundColor: 'transparent',\n                                    spec: {\n                                        spacing: 10,\n                                        orientation: 'vertical',\n                                        assembly: 'hg38',\n                                        layout: 'linear',\n                                        static: false,\n                                        xDomain: { interval: [0, 1000000000] },\n                                        centerRadius: 0.3,\n                                        xOffset: 0,\n                                        yOffset: 0,\n                                        style: { outlineWidth: 0.5 },\n                                        data: {\n                                            url: 'https://server.gosling-lang.org/api/v1/tileset_info/?d=cistrome-multivec',\n                                            type: 'multivec',\n                                            row: 'sample',\n                                            column: 'position',\n                                            value: 'peak',\n                                            categories: ['sample 1', 'sample 2', 'sample 3', 'sample 4'],\n                                            binSize: 4\n                                        },\n                                        mark: 'rect',\n                                        x: {\n                                            field: 'start',\n                                            type: 'genomic',\n                                            axis: 'left',\n                                            domain: { interval: [0, 1000000000] },\n                                            linkingId: '7f94b74e-25ec-4e67-8c75-3dc0f1b0d6bd'\n                                        },\n                                        xe: { field: 'end', type: 'genomic' },\n                                        row: {\n                                            field: 'sample',\n                                            type: 'nominal',\n                                            legend: true\n                                        },\n                                        color: {\n                                            field: 'peak',\n                                            type: 'quantitative',\n                                            legend: true\n                                        },\n                                        tooltip: [\n                                            {\n                                                field: 'start',\n                                                type: 'genomic',\n                                                alt: 'Start Position'\n                                            },\n                                            {\n                                                field: 'end',\n                                                type: 'genomic',\n                                                alt: 'End Position'\n                                            },\n                                            {\n                                                field: 'peak',\n                                                type: 'quantitative',\n                                                alt: 'Value',\n                                                format: '.2'\n                                            },\n                                            { field: 'sample', type: 'nominal', alt: 'Sample' }\n                                        ],\n                                        width: 160,\n                                        height: 600,\n                                        overlayOnPreviousTrack: false\n                                    },\n                                    theme: {\n                                        base: 'light',\n                                        root: {\n                                            background: 'white',\n                                            titleColor: 'black',\n                                            titleBackgroundColor: 'transparent',\n                                            titleFontSize: 18,\n                                            titleFontFamily: 'Arial',\n                                            titleAlign: 'left',\n                                            titleFontWeight: 'bold',\n                                            subtitleColor: 'gray',\n                                            subtitleBackgroundColor: 'transparent',\n                                            subtitleFontSize: 16,\n                                            subtitleFontFamily: 'Arial',\n                                            subtitleFontWeight: 'normal',\n                                            subtitleAlign: 'left',\n                                            mousePositionColor: '#000000'\n                                        },\n                                        track: {\n                                            background: 'transparent',\n                                            alternatingBackground: 'transparent',\n                                            titleColor: 'black',\n                                            titleBackground: 'white',\n                                            titleFontSize: 24,\n                                            titleAlign: 'left',\n                                            outline: 'black',\n                                            outlineWidth: 1\n                                        },\n                                        legend: {\n                                            position: 'top',\n                                            background: 'white',\n                                            backgroundOpacity: 0.7,\n                                            labelColor: 'black',\n                                            labelFontSize: 12,\n                                            labelFontWeight: 'normal',\n                                            labelFontFamily: 'Arial',\n                                            backgroundStroke: '#DBDBDB',\n                                            tickColor: 'black'\n                                        },\n                                        axis: {\n                                            tickColor: 'black',\n                                            labelColor: 'black',\n                                            labelFontSize: 12,\n                                            labelFontWeight: 'normal',\n                                            labelFontFamily: 'Arial',\n                                            baselineColor: 'black',\n                                            gridColor: '#E3E3E3',\n                                            gridStrokeWidth: 1,\n                                            gridStrokeType: 'solid',\n                                            gridStrokeDash: [4, 4]\n                                        },\n                                        markCommon: {\n                                            color: '#E79F00',\n                                            size: 1,\n                                            stroke: 'black',\n                                            strokeWidth: 0,\n                                            opacity: 1,\n                                            nominalColorRange: [\n                                                '#E79F00',\n                                                '#029F73',\n                                                '#0072B2',\n                                                '#CB7AA7',\n                                                '#D45E00',\n                                                '#57B4E9',\n                                                '#EFE441'\n                                            ],\n                                            quantitativeSizeRange: [2, 6]\n                                        },\n                                        point: {\n                                            color: '#E79F00',\n                                            size: 3,\n                                            stroke: 'black',\n                                            strokeWidth: 0,\n                                            opacity: 1,\n                                            nominalColorRange: [\n                                                '#E79F00',\n                                                '#029F73',\n                                                '#0072B2',\n                                                '#CB7AA7',\n                                                '#D45E00',\n                                                '#57B4E9',\n                                                '#EFE441'\n                                            ],\n                                            quantitativeSizeRange: [2, 6]\n                                        },\n                                        rect: {\n                                            color: '#E79F00',\n                                            size: 1,\n                                            stroke: 'black',\n                                            strokeWidth: 0,\n                                            opacity: 1,\n                                            nominalColorRange: [\n                                                '#E79F00',\n                                                '#029F73',\n                                                '#0072B2',\n                                                '#CB7AA7',\n                                                '#D45E00',\n                                                '#57B4E9',\n                                                '#EFE441'\n                                            ],\n                                            quantitativeSizeRange: [2, 6]\n                                        },\n                                        triangle: {\n                                            color: '#E79F00',\n                                            size: 1,\n                                            stroke: 'black',\n                                            strokeWidth: 0,\n                                            opacity: 1,\n                                            nominalColorRange: [\n                                                '#E79F00',\n                                                '#029F73',\n                                                '#0072B2',\n                                                '#CB7AA7',\n                                                '#D45E00',\n                                                '#57B4E9',\n                                                '#EFE441'\n                                            ],\n                                            quantitativeSizeRange: [2, 6]\n                                        },\n                                        area: {\n                                            color: '#E79F00',\n                                            size: 1,\n                                            stroke: 'black',\n                                            strokeWidth: 0,\n                                            opacity: 1,\n                                            nominalColorRange: [\n                                                '#E79F00',\n                                                '#029F73',\n                                                '#0072B2',\n                                                '#CB7AA7',\n                                                '#D45E00',\n                                                '#57B4E9',\n                                                '#EFE441'\n                                            ],\n                                            quantitativeSizeRange: [2, 6]\n                                        },\n                                        line: {\n                                            color: '#E79F00',\n                                            size: 1,\n                                            stroke: 'black',\n                                            strokeWidth: 0,\n                                            opacity: 1,\n                                            nominalColorRange: [\n                                                '#E79F00',\n                                                '#029F73',\n                                                '#0072B2',\n                                                '#CB7AA7',\n                                                '#D45E00',\n                                                '#57B4E9',\n                                                '#EFE441'\n                                            ],\n                                            quantitativeSizeRange: [2, 6]\n                                        },\n                                        bar: {\n                                            color: '#E79F00',\n                                            size: 1,\n                                            stroke: 'black',\n                                            strokeWidth: 0,\n                                            opacity: 1,\n                                            nominalColorRange: [\n                                                '#E79F00',\n                                                '#029F73',\n                                                '#0072B2',\n                                                '#CB7AA7',\n                                                '#D45E00',\n                                                '#57B4E9',\n                                                '#EFE441'\n                                            ],\n                                            quantitativeSizeRange: [2, 6]\n                                        },\n                                        rule: {\n                                            color: '#E79F00',\n                                            size: 1,\n                                            stroke: 'black',\n                                            strokeWidth: 1,\n                                            opacity: 1,\n                                            nominalColorRange: [\n                                                '#E79F00',\n                                                '#029F73',\n                                                '#0072B2',\n                                                '#CB7AA7',\n                                                '#D45E00',\n                                                '#57B4E9',\n                                                '#EFE441'\n                                            ],\n                                            quantitativeSizeRange: [2, 6]\n                                        },\n                                        link: {\n                                            color: '#E79F00',\n                                            size: 1,\n                                            stroke: 'black',\n                                            strokeWidth: 1,\n                                            opacity: 1,\n                                            nominalColorRange: [\n                                                '#E79F00',\n                                                '#029F73',\n                                                '#0072B2',\n                                                '#CB7AA7',\n                                                '#D45E00',\n                                                '#57B4E9',\n                                                '#EFE441'\n                                            ],\n                                            quantitativeSizeRange: [2, 6]\n                                        },\n                                        text: {\n                                            color: '#E79F00',\n                                            size: 1,\n                                            stroke: 'black',\n                                            strokeWidth: 0,\n                                            opacity: 1,\n                                            nominalColorRange: [\n                                                '#E79F00',\n                                                '#029F73',\n                                                '#0072B2',\n                                                '#CB7AA7',\n                                                '#D45E00',\n                                                '#57B4E9',\n                                                '#EFE441'\n                                            ],\n                                            quantitativeSizeRange: [2, 6],\n                                            textAnchor: 'middle',\n                                            textFontWeight: 'normal'\n                                        },\n                                        brush: {\n                                            color: 'gray',\n                                            size: 1,\n                                            stroke: 'black',\n                                            strokeWidth: 1,\n                                            opacity: 0.3,\n                                            nominalColorRange: [\n                                                '#E79F00',\n                                                '#029F73',\n                                                '#0072B2',\n                                                '#CB7AA7',\n                                                '#D45E00',\n                                                '#57B4E9',\n                                                '#EFE441'\n                                            ],\n                                            quantitativeSizeRange: [2, 6]\n                                        }\n                                    }\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        uid: '15483511-f6fb-11eb-914b-976b6ecda162',\n                        type: 'axis-track',\n                        chromInfoPath: 'https://s3.amazonaws.com/gosling-lang.org/data/hg38.chrom.sizes',\n                        options: {\n                            layout: 'linear',\n                            outerRadius: null,\n                            width: 160,\n                            height: 600,\n                            theme: {\n                                base: 'light',\n                                root: {\n                                    background: 'white',\n                                    titleColor: 'black',\n                                    titleBackgroundColor: 'transparent',\n                                    titleFontSize: 18,\n                                    titleFontFamily: 'Arial',\n                                    titleAlign: 'left',\n                                    titleFontWeight: 'bold',\n                                    subtitleColor: 'gray',\n                                    subtitleBackgroundColor: 'transparent',\n                                    subtitleFontSize: 16,\n                                    subtitleFontFamily: 'Arial',\n                                    subtitleFontWeight: 'normal',\n                                    subtitleAlign: 'left',\n                                    mousePositionColor: '#000000'\n                                },\n                                track: {\n                                    background: 'transparent',\n                                    alternatingBackground: 'transparent',\n                                    titleColor: 'black',\n                                    titleBackground: 'white',\n                                    titleFontSize: 24,\n                                    titleAlign: 'left',\n                                    outline: 'black',\n                                    outlineWidth: 1\n                                },\n                                legend: {\n                                    position: 'top',\n                                    background: 'white',\n                                    backgroundOpacity: 0.7,\n                                    labelColor: 'black',\n                                    labelFontSize: 12,\n                                    labelFontWeight: 'normal',\n                                    labelFontFamily: 'Arial',\n                                    backgroundStroke: '#DBDBDB',\n                                    tickColor: 'black'\n                                },\n                                axis: {\n                                    tickColor: 'black',\n                                    labelColor: 'black',\n                                    labelFontSize: 12,\n                                    labelFontWeight: 'normal',\n                                    labelFontFamily: 'Arial',\n                                    baselineColor: 'black',\n                                    gridColor: '#E3E3E3',\n                                    gridStrokeWidth: 1,\n                                    gridStrokeType: 'solid',\n                                    gridStrokeDash: [4, 4]\n                                },\n                                markCommon: {\n                                    color: '#E79F00',\n                                    size: 1,\n                                    stroke: 'black',\n                                    strokeWidth: 0,\n                                    opacity: 1,\n                                    nominalColorRange: [\n                                        '#E79F00',\n                                        '#029F73',\n                                        '#0072B2',\n                                        '#CB7AA7',\n                                        '#D45E00',\n                                        '#57B4E9',\n                                        '#EFE441'\n                                    ],\n                                    quantitativeSizeRange: [2, 6]\n                                },\n                                point: {\n                                    color: '#E79F00',\n                                    size: 3,\n                                    stroke: 'black',\n                                    strokeWidth: 0,\n                                    opacity: 1,\n                                    nominalColorRange: [\n                                        '#E79F00',\n                                        '#029F73',\n                                        '#0072B2',\n                                        '#CB7AA7',\n                                        '#D45E00',\n                                        '#57B4E9',\n                                        '#EFE441'\n                                    ],\n                                    quantitativeSizeRange: [2, 6]\n                                },\n                                rect: {\n                                    color: '#E79F00',\n                                    size: 1,\n                                    stroke: 'black',\n                                    strokeWidth: 0,\n                                    opacity: 1,\n                                    nominalColorRange: [\n                                        '#E79F00',\n                                        '#029F73',\n                                        '#0072B2',\n                                        '#CB7AA7',\n                                        '#D45E00',\n                                        '#57B4E9',\n                                        '#EFE441'\n                                    ],\n                                    quantitativeSizeRange: [2, 6]\n                                },\n                                triangle: {\n                                    color: '#E79F00',\n                                    size: 1,\n                                    stroke: 'black',\n                                    strokeWidth: 0,\n                                    opacity: 1,\n                                    nominalColorRange: [\n                                        '#E79F00',\n                                        '#029F73',\n                                        '#0072B2',\n                                        '#CB7AA7',\n                                        '#D45E00',\n                                        '#57B4E9',\n                                        '#EFE441'\n                                    ],\n                                    quantitativeSizeRange: [2, 6]\n                                },\n                                area: {\n                                    color: '#E79F00',\n                                    size: 1,\n                                    stroke: 'black',\n                                    strokeWidth: 0,\n                                    opacity: 1,\n                                    nominalColorRange: [\n                                        '#E79F00',\n                                        '#029F73',\n                                        '#0072B2',\n                                        '#CB7AA7',\n                                        '#D45E00',\n                                        '#57B4E9',\n                                        '#EFE441'\n                                    ],\n                                    quantitativeSizeRange: [2, 6]\n                                },\n                                line: {\n                                    color: '#E79F00',\n                                    size: 1,\n                                    stroke: 'black',\n                                    strokeWidth: 0,\n                                    opacity: 1,\n                                    nominalColorRange: [\n                                        '#E79F00',\n                                        '#029F73',\n                                        '#0072B2',\n                                        '#CB7AA7',\n                                        '#D45E00',\n                                        '#57B4E9',\n                                        '#EFE441'\n                                    ],\n                                    quantitativeSizeRange: [2, 6]\n                                },\n                                bar: {\n                                    color: '#E79F00',\n                                    size: 1,\n                                    stroke: 'black',\n                                    strokeWidth: 0,\n                                    opacity: 1,\n                                    nominalColorRange: [\n                                        '#E79F00',\n                                        '#029F73',\n                                        '#0072B2',\n                                        '#CB7AA7',\n                                        '#D45E00',\n                                        '#57B4E9',\n                                        '#EFE441'\n                                    ],\n                                    quantitativeSizeRange: [2, 6]\n                                },\n                                rule: {\n                                    color: '#E79F00',\n                                    size: 1,\n                                    stroke: 'black',\n                                    strokeWidth: 1,\n                                    opacity: 1,\n                                    nominalColorRange: [\n                                        '#E79F00',\n                                        '#029F73',\n                                        '#0072B2',\n                                        '#CB7AA7',\n                                        '#D45E00',\n                                        '#57B4E9',\n                                        '#EFE441'\n                                    ],\n                                    quantitativeSizeRange: [2, 6]\n                                },\n                                link: {\n                                    color: '#E79F00',\n                                    size: 1,\n                                    stroke: 'black',\n                                    strokeWidth: 1,\n                                    opacity: 1,\n                                    nominalColorRange: [\n                                        '#E79F00',\n                                        '#029F73',\n                                        '#0072B2',\n                                        '#CB7AA7',\n                                        '#D45E00',\n                                        '#57B4E9',\n                                        '#EFE441'\n                                    ],\n                                    quantitativeSizeRange: [2, 6]\n                                },\n                                text: {\n                                    color: '#E79F00',\n                                    size: 1,\n                                    stroke: 'black',\n                                    strokeWidth: 0,\n                                    opacity: 1,\n                                    nominalColorRange: [\n                                        '#E79F00',\n                                        '#029F73',\n                                        '#0072B2',\n                                        '#CB7AA7',\n                                        '#D45E00',\n                                        '#57B4E9',\n                                        '#EFE441'\n                                    ],\n                                    quantitativeSizeRange: [2, 6],\n                                    textAnchor: 'middle',\n                                    textFontWeight: 'normal'\n                                },\n                                brush: {\n                                    color: 'gray',\n                                    size: 1,\n                                    stroke: 'black',\n                                    strokeWidth: 1,\n                                    opacity: 0.3,\n                                    nominalColorRange: [\n                                        '#E79F00',\n                                        '#029F73',\n                                        '#0072B2',\n                                        '#CB7AA7',\n                                        '#D45E00',\n                                        '#57B4E9',\n                                        '#EFE441'\n                                    ],\n                                    quantitativeSizeRange: [2, 6]\n                                }\n                            },\n                            assembly: 'hg38',\n                            stroke: 'transparent',\n                            color: 'black',\n                            fontSize: 12,\n                            fontFamily: 'Arial',\n                            fontWeight: 'normal',\n                            tickColor: 'black',\n                            tickFormat: 'plain',\n                            tickPositions: 'even',\n                            reverseOrientation: false\n                        },\n                        width: 30\n                    }\n                ],\n                center: [],\n                right: [],\n                bottom: [],\n                gallery: [],\n                whole: []\n            },\n            initialXDomain: [0, 1000000000],\n            initialYDomain: [0, 1000000000],\n            zoomFixed: false,\n            zoomLimits: [1, null],\n            uid: '15483510-f6fb-11eb-914b-976b6ecda162',\n            chromInfoPath: 'https://s3.amazonaws.com/gosling-lang.org/data/hg38.chrom.sizes'\n        },\n        {\n            genomePositionSearchBoxVisible: false,\n            genomePositionSearchBox: {\n                autocompleteServer: 'https://higlass.io/api/v1',\n                autocompleteId: 'P0PLbQMwTYGy-5uPIQid7A',\n                chromInfoServer: 'https://higlass.io/api/v1',\n                chromInfoId: 'hg38'\n            },\n            layout: { x: 6.8, y: 0, w: 5.2, h: 600 },\n            tracks: {\n                top: [],\n                left: [\n                    {\n                        type: 'combined',\n                        width: 130,\n                        height: 600,\n                        contents: [\n                            {\n                                type: 'gosling-track',\n                                server: 'https://server.gosling-lang.org/api/v1/',\n                                tilesetUid: 'cistrome-multivec',\n                                width: 130,\n                                height: 600,\n                                options: {\n                                    showMousePosition: true,\n                                    mousePositionColor: '#000000',\n                                    fontSize: 24,\n                                    labelPosition: 'none',\n                                    labelShowResolution: false,\n                                    labelColor: 'black',\n                                    labelBackgroundColor: 'white',\n                                    labelTextOpacity: 1,\n                                    labelLeftMargin: 1,\n                                    labelTopMargin: 1,\n                                    labelRightMargin: 0,\n                                    labelBottomMargin: 0,\n                                    backgroundColor: 'transparent',\n                                    spec: {\n                                        spacing: 10,\n                                        orientation: 'vertical',\n                                        assembly: 'hg38',\n                                        layout: 'linear',\n                                        static: false,\n                                        xDomain: { interval: [0, 1000000000] },\n                                        centerRadius: 0.3,\n                                        xOffset: 0,\n                                        yOffset: 0,\n                                        style: { outlineWidth: 0.5 },\n                                        data: {\n                                            url: 'https://server.gosling-lang.org/api/v1/tileset_info/?d=cistrome-multivec',\n                                            type: 'multivec',\n                                            row: 'sample',\n                                            column: 'position',\n                                            value: 'peak',\n                                            categories: ['sample 1', 'sample 2', 'sample 3', 'sample 4'],\n                                            binSize: 4\n                                        },\n                                        mark: 'rect',\n                                        x: {\n                                            field: 'start',\n                                            type: 'genomic',\n                                            domain: { interval: [0, 1000000000] },\n                                            linkingId: '7f94b74e-25ec-4e67-8c75-3dc0f1b0d6bd'\n                                        },\n                                        xe: { field: 'end', type: 'genomic' },\n                                        row: {\n                                            field: 'sample',\n                                            type: 'nominal',\n                                            legend: true\n                                        },\n                                        color: {\n                                            field: 'peak',\n                                            type: 'quantitative',\n                                            legend: true\n                                        },\n                                        tooltip: [\n                                            {\n                                                field: 'start',\n                                                type: 'genomic',\n                                                alt: 'Start Position'\n                                            },\n                                            {\n                                                field: 'end',\n                                                type: 'genomic',\n                                                alt: 'End Position'\n                                            },\n                                            {\n                                                field: 'peak',\n                                                type: 'quantitative',\n                                                alt: 'Value',\n                                                format: '.2'\n                                            },\n                                            { field: 'sample', type: 'nominal', alt: 'Sample' }\n                                        ],\n                                        width: 130,\n                                        height: 600\n                                    },\n                                    theme: {\n                                        base: 'light',\n                                        root: {\n                                            background: 'white',\n                                            titleColor: 'black',\n                                            titleBackgroundColor: 'transparent',\n                                            titleFontSize: 18,\n                                            titleFontFamily: 'Arial',\n                                            titleAlign: 'left',\n                                            titleFontWeight: 'bold',\n                                            subtitleColor: 'gray',\n                                            subtitleBackgroundColor: 'transparent',\n                                            subtitleFontSize: 16,\n                                            subtitleFontFamily: 'Arial',\n                                            subtitleFontWeight: 'normal',\n                                            subtitleAlign: 'left',\n                                            mousePositionColor: '#000000'\n                                        },\n                                        track: {\n                                            background: 'transparent',\n                                            alternatingBackground: 'transparent',\n                                            titleColor: 'black',\n                                            titleBackground: 'white',\n                                            titleFontSize: 24,\n                                            titleAlign: 'left',\n                                            outline: 'black',\n                                            outlineWidth: 1\n                                        },\n                                        legend: {\n                                            position: 'top',\n                                            background: 'white',\n                                            backgroundOpacity: 0.7,\n                                            labelColor: 'black',\n                                            labelFontSize: 12,\n                                            labelFontWeight: 'normal',\n                                            labelFontFamily: 'Arial',\n                                            backgroundStroke: '#DBDBDB',\n                                            tickColor: 'black'\n                                        },\n                                        axis: {\n                                            tickColor: 'black',\n                                            labelColor: 'black',\n                                            labelFontSize: 12,\n                                            labelFontWeight: 'normal',\n                                            labelFontFamily: 'Arial',\n                                            baselineColor: 'black',\n                                            gridColor: '#E3E3E3',\n                                            gridStrokeWidth: 1,\n                                            gridStrokeType: 'solid',\n                                            gridStrokeDash: [4, 4]\n                                        },\n                                        markCommon: {\n                                            color: '#E79F00',\n                                            size: 1,\n                                            stroke: 'black',\n                                            strokeWidth: 0,\n                                            opacity: 1,\n                                            nominalColorRange: [\n                                                '#E79F00',\n                                                '#029F73',\n                                                '#0072B2',\n                                                '#CB7AA7',\n                                                '#D45E00',\n                                                '#57B4E9',\n                                                '#EFE441'\n                                            ],\n                                            quantitativeSizeRange: [2, 6]\n                                        },\n                                        point: {\n                                            color: '#E79F00',\n                                            size: 3,\n                                            stroke: 'black',\n                                            strokeWidth: 0,\n                                            opacity: 1,\n                                            nominalColorRange: [\n                                                '#E79F00',\n                                                '#029F73',\n                                                '#0072B2',\n                                                '#CB7AA7',\n                                                '#D45E00',\n                                                '#57B4E9',\n                                                '#EFE441'\n                                            ],\n                                            quantitativeSizeRange: [2, 6]\n                                        },\n                                        rect: {\n                                            color: '#E79F00',\n                                            size: 1,\n                                            stroke: 'black',\n                                            strokeWidth: 0,\n                                            opacity: 1,\n                                            nominalColorRange: [\n                                                '#E79F00',\n                                                '#029F73',\n                                                '#0072B2',\n                                                '#CB7AA7',\n                                                '#D45E00',\n                                                '#57B4E9',\n                                                '#EFE441'\n                                            ],\n                                            quantitativeSizeRange: [2, 6]\n                                        },\n                                        triangle: {\n                                            color: '#E79F00',\n                                            size: 1,\n                                            stroke: 'black',\n                                            strokeWidth: 0,\n                                            opacity: 1,\n                                            nominalColorRange: [\n                                                '#E79F00',\n                                                '#029F73',\n                                                '#0072B2',\n                                                '#CB7AA7',\n                                                '#D45E00',\n                                                '#57B4E9',\n                                                '#EFE441'\n                                            ],\n                                            quantitativeSizeRange: [2, 6]\n                                        },\n                                        area: {\n                                            color: '#E79F00',\n                                            size: 1,\n                                            stroke: 'black',\n                                            strokeWidth: 0,\n                                            opacity: 1,\n                                            nominalColorRange: [\n                                                '#E79F00',\n                                                '#029F73',\n                                                '#0072B2',\n                                                '#CB7AA7',\n                                                '#D45E00',\n                                                '#57B4E9',\n                                                '#EFE441'\n                                            ],\n                                            quantitativeSizeRange: [2, 6]\n                                        },\n                                        line: {\n                                            color: '#E79F00',\n                                            size: 1,\n                                            stroke: 'black',\n                                            strokeWidth: 0,\n                                            opacity: 1,\n                                            nominalColorRange: [\n                                                '#E79F00',\n                                                '#029F73',\n                                                '#0072B2',\n                                                '#CB7AA7',\n                                                '#D45E00',\n                                                '#57B4E9',\n                                                '#EFE441'\n                                            ],\n                                            quantitativeSizeRange: [2, 6]\n                                        },\n                                        bar: {\n                                            color: '#E79F00',\n                                            size: 1,\n                                            stroke: 'black',\n                                            strokeWidth: 0,\n                                            opacity: 1,\n                                            nominalColorRange: [\n                                                '#E79F00',\n                                                '#029F73',\n                                                '#0072B2',\n                                                '#CB7AA7',\n                                                '#D45E00',\n                                                '#57B4E9',\n                                                '#EFE441'\n                                            ],\n                                            quantitativeSizeRange: [2, 6]\n                                        },\n                                        rule: {\n                                            color: '#E79F00',\n                                            size: 1,\n                                            stroke: 'black',\n                                            strokeWidth: 1,\n                                            opacity: 1,\n                                            nominalColorRange: [\n                                                '#E79F00',\n                                                '#029F73',\n                                                '#0072B2',\n                                                '#CB7AA7',\n                                                '#D45E00',\n                                                '#57B4E9',\n                                                '#EFE441'\n                                            ],\n                                            quantitativeSizeRange: [2, 6]\n                                        },\n                                        link: {\n                                            color: '#E79F00',\n                                            size: 1,\n                                            stroke: 'black',\n                                            strokeWidth: 1,\n                                            opacity: 1,\n                                            nominalColorRange: [\n                                                '#E79F00',\n                                                '#029F73',\n                                                '#0072B2',\n                                                '#CB7AA7',\n                                                '#D45E00',\n                                                '#57B4E9',\n                                                '#EFE441'\n                                            ],\n                                            quantitativeSizeRange: [2, 6]\n                                        },\n                                        text: {\n                                            color: '#E79F00',\n                                            size: 1,\n                                            stroke: 'black',\n                                            strokeWidth: 0,\n                                            opacity: 1,\n                                            nominalColorRange: [\n                                                '#E79F00',\n                                                '#029F73',\n                                                '#0072B2',\n                                                '#CB7AA7',\n                                                '#D45E00',\n                                                '#57B4E9',\n                                                '#EFE441'\n                                            ],\n                                            quantitativeSizeRange: [2, 6],\n                                            textAnchor: 'middle',\n                                            textFontWeight: 'normal'\n                                        },\n                                        brush: {\n                                            color: 'gray',\n                                            size: 1,\n                                            stroke: 'black',\n                                            strokeWidth: 1,\n                                            opacity: 0.3,\n                                            nominalColorRange: [\n                                                '#E79F00',\n                                                '#029F73',\n                                                '#0072B2',\n                                                '#CB7AA7',\n                                                '#D45E00',\n                                                '#57B4E9',\n                                                '#EFE441'\n                                            ],\n                                            quantitativeSizeRange: [2, 6]\n                                        }\n                                    }\n                                }\n                            }\n                        ]\n                    }\n                ],\n                center: [],\n                right: [],\n                bottom: [],\n                gallery: [],\n                whole: []\n            },\n            initialXDomain: [0, 1000000000],\n            initialYDomain: [0, 1000000000],\n            zoomFixed: false,\n            zoomLimits: [1, null],\n            uid: '154b1b40-f6fb-11eb-914b-976b6ecda162'\n        }\n    ],\n    zoomLocks: { locksByViewUid: {}, locksDict: {} },\n    locationLocks: { locksByViewUid: {}, locksDict: {} },\n    editable: false,\n    chromInfoPath: 'https://s3.amazonaws.com/gosling-lang.org/data/hg38.chrom.sizes'\n};\n\nexport default example;\n","import type { HiGlassSpec, Track } from '@gosling-lang/higlass-schema';\nimport { HiGlassSchema } from '@gosling-lang/higlass-schema';\nimport type { Assembly, AxisPosition, Domain, DummyTrack, Orientation, ZoomLimits } from '@gosling-lang/gosling-schema';\nimport { getNumericDomain } from '../core/utils/scales';\nimport type { RelativePosition } from './bounding-box';\nimport { validateSpec } from '@gosling-lang/gosling-schema';\nimport { getAutoCompleteId, computeChromSizes } from '../core/utils/assembly';\nimport type { CompleteThemeDeep } from '../core/utils/theme';\nimport exampleHg from '../core/example/hg-view-config-1';\nimport { insertItemToArray } from '../core/utils/array';\nimport { uuid } from '../core/utils/uuid';\n\nexport const HIGLASS_AXIS_SIZE = 30;\n\nconst getViewTemplate = (assembly?: Assembly) => {\n    return {\n        genomePositionSearchBoxVisible: false,\n        genomePositionSearchBox: {\n            autocompleteServer: 'https://higlass.io/api/v1',\n            autocompleteId: getAutoCompleteId(assembly),\n            chromInfoServer: 'https://higlass.io/api/v1',\n            chromInfoId: assembly ?? 'hg38'\n        },\n        layout: { w: 12, h: 12, x: 0, y: 0 },\n        tracks: {\n            top: [],\n            left: [],\n            center: [],\n            right: [],\n            bottom: [],\n            gallery: [],\n            whole: []\n        },\n        initialXDomain: [0, computeChromSizes(assembly).total],\n        initialYDomain: [0, computeChromSizes(assembly).total],\n        zoomFixed: false\n    };\n};\n\n/**\n * Model for managing the HiGlass view config.\n * We are currently only using a center track with additional tracks for axes in a single view.\n */\nexport class HiGlassModel {\n    private assembly?: Assembly;\n    private orientation?: Orientation;\n    private hg: HiGlassSpec;\n    constructor() {\n        this.assembly = 'hg38';\n        this.hg = {\n            compactLayout: false,\n            trackSourceServers: [],\n            views: [],\n            zoomLocks: {\n                locksByViewUid: {},\n                locksDict: {}\n            },\n            locationLocks: {\n                locksByViewUid: {},\n                locksDict: {}\n            }\n        };\n\n        // Add default specs.\n        this.setEditable(false);\n    }\n\n    public spec(): Readonly<HiGlassSpec> {\n        return this.hg;\n    }\n\n    public setViewOrientation(orientation?: Orientation) {\n        this.orientation = orientation;\n        return this;\n    }\n\n    public addDefaultView(uid: string, assembly?: Assembly) {\n        this.hg.views.push(JSON.parse(JSON.stringify({ ...getViewTemplate(assembly), uid })));\n        return this;\n    }\n\n    public setAssembly(assembly?: Assembly) {\n        this.assembly = assembly;\n        this.setChromInfoPath(computeChromSizes(this.assembly).path);\n        return this;\n    }\n\n    public getAssembly() {\n        return this.assembly;\n    }\n\n    public setTextTrack(\n        width: number,\n        height: number,\n        text: string,\n        textColor = 'black',\n        fontSize = 14,\n        fontWeight = 'normal',\n        align = 'left',\n        backgroundColor = 'transparent',\n        fontFamily = 'Arial'\n    ) {\n        if (this.getLastView()) {\n            this.getLastView().tracks.top?.push({\n                type: 'text',\n                width,\n                height,\n                options: {\n                    backgroundColor,\n                    textColor,\n                    fontSize,\n                    fontWeight,\n                    fontFamily,\n                    offsetY: 0, // offset from the top of the track\n                    align,\n                    text\n                }\n            });\n        }\n        return this;\n    }\n\n    /**\n     * Add a dummy track to the last view\n     * @param track\n     */\n    public setDummyTrack(track: DummyTrack) {\n        if (this.getLastView()) {\n            this.getLastView().tracks.top?.push({\n                type: 'dummy-track',\n                width: track.width,\n                height: track.height,\n                options: {\n                    width: track.width,\n                    height: track.height,\n                    title: track.title,\n                    ...track.style\n                }\n            });\n        }\n        return this;\n    }\n\n    public addBrush(\n        layout: 'circular' | 'linear',\n        viewId: string,\n        theme: Required<CompleteThemeDeep>,\n        fromViewUid?: string,\n        style?: {\n            color?: string;\n            stroke?: string;\n            opacity?: string;\n            strokeWidth?: number;\n            startAngle?: number;\n            endAngle?: number;\n            innerRadius?: number;\n            outerRadius?: number;\n        }\n    ) {\n        if (!fromViewUid) return;\n\n        // we could do this to either a `whole` track or a `center` track with `combined`\n        (this.getView(viewId) as any)?.tracks.whole.push({\n            // type: 'viewport-projection-center',\n            type: layout === 'circular' ? 'brush-track' : 'viewport-projection-horizontal',\n            uid: uuid(),\n            fromViewUid,\n            options: {\n                projectionFillColor: style?.color ?? theme.brush.color,\n                projectionStrokeColor: style?.stroke ?? theme.brush.stroke,\n                projectionFillOpacity: style?.opacity ?? theme.brush.opacity,\n                projectionStrokeOpacity: style?.opacity ?? theme.brush.opacity,\n                strokeWidth: style?.strokeWidth ?? theme.brush.strokeWidth,\n                startAngle: style?.startAngle,\n                endAngle: style?.endAngle,\n                innerRadius: style?.innerRadius,\n                outerRadius: style?.outerRadius\n            }\n        });\n        return this;\n    }\n\n    public getLastView() {\n        return this.hg.views[this.hg.views.length - 1];\n    }\n\n    public getMainTrackPosition() {\n        return this.orientation === 'vertical' ? 'left' : 'center';\n    }\n\n    /**\n     * Get the last view that renders any visualization, so skiping empty tracks.\n     */\n    public getLastVisView() {\n        const vs = this.hg.views.filter(v => (v.tracks as any)[this.getMainTrackPosition()]?.[0]?.type === 'combined');\n        return vs[vs.length - 1];\n    }\n\n    public getView(viewId: string) {\n        return this.hg.views.find(d => d.uid === viewId);\n    }\n\n    public validateSpec(silence = false) {\n        return validateSpec(HiGlassSchema, this.spec(), silence).state === 'success';\n    }\n\n    public setDomain(xDomain: Domain | undefined, yDomain: Domain | undefined) {\n        if (xDomain) {\n            this.getLastView().initialXDomain = getNumericDomain(xDomain, this.getAssembly());\n        }\n        if (yDomain) {\n            this.getLastView().initialYDomain = getNumericDomain(yDomain, this.getAssembly());\n        }\n        return this;\n    }\n\n    /**\n     * This is a hacky function that adjust x domain to properly show vertical tracks.\n     *\n     * In HiGlass, the range of vertical tracks is affected by a center track. For example, if a center track is small, the vertical tracks become small as well.\n     * Currently, the actual size of center track for vertical gosling tracks is `1px`. So, we re-scale the x domain so that gosling's vertical tracks properly use the entire height of a view.\n     * @param orientation\n     * @param width\n     * @returns\n     */\n    public adjustDomain(orientation: Orientation = 'horizontal', width: number, height: number) {\n        if (orientation !== 'vertical') {\n            return this;\n        }\n\n        const domain = this.getLastView().initialXDomain;\n        if (!domain) {\n            return this;\n        }\n\n        const [start, end] = domain;\n        const size = end - start;\n        const center = (start + end) / 2.0;\n        this.getLastView().initialXDomain = [\n            center - (size / width / 2 / height) * width,\n            center + (size / width / 2 / height) * width\n        ];\n        return this;\n    }\n\n    /**\n     * Allow a zoom interaction?\n     */\n    public setZoomFixed(zoomFixed: boolean) {\n        this.getLastView().zoomFixed = zoomFixed;\n        return this;\n    }\n\n    /**\n     * Set limits of zoom levels in base pairs.\n     */\n    public setZoomLimits(zoomLimits: ZoomLimits) {\n        this.getLastView().zoomLimits = zoomLimits;\n        return this;\n    }\n\n    public setLayout(layout: RelativePosition) {\n        this.getLastView().layout = layout;\n        return this;\n    }\n\n    private setEditable(editable: boolean | undefined) {\n        this.hg.editable = editable;\n        return this;\n    }\n\n    private setChromInfoPath(chromInfoPath: string | undefined) {\n        if (this.getLastView()) {\n            this.getLastView().chromInfoPath = chromInfoPath;\n        }\n        this.hg.chromInfoPath = chromInfoPath;\n        return this;\n    }\n\n    public addTrackSourceServers(trackSourceServers: string | undefined) {\n        if (trackSourceServers && this.hg.trackSourceServers?.indexOf(trackSourceServers) === -1)\n            this.hg.trackSourceServers?.push(trackSourceServers);\n        return this;\n    }\n\n    public setMainTrack(track: Track) {\n        if (!this.getLastView()) return this;\n        this.getLastView().tracks[this.getMainTrackPosition()] = [\n            {\n                type: 'combined',\n                uid: `${track.uid ?? uuid()}-${this.getMainTrackPosition()}-combined`,\n                // !! Hacky, but it is important to subtract 1px. Currently, HiGlass does not well handle a case where a center track is zero width (e.g., linking between views that contain zero-width center tracks).\n                // https://github.com/higlass/higlass/pull/1041\n                width: (track as any).width - 1,\n                height: (track as any).height,\n                contents: [track]\n            }\n        ];\n        return this;\n    }\n\n    public addTrackToCombined(track: Track) {\n        if (!this.getLastVisView()) return this;\n        (this.getLastVisView() as any).tracks[this.getMainTrackPosition()][0]?.contents.push(track);\n        return this;\n    }\n\n    public setAxisTrack(\n        position: Exclude<AxisPosition, 'none'>,\n        type: 'regular' | 'narrow' | 'narrower' = 'regular',\n        options: {\n            id?: string;\n            layout?: 'circular' | 'linear';\n            innerRadius?: number;\n            outerRadius?: number;\n            width?: number;\n            height?: number;\n            startAngle?: number;\n            endAngle?: number;\n            theme: Required<CompleteThemeDeep>;\n        }\n    ) {\n        if (!this.hg.views) return this;\n\n        const widthOrHeight = position === 'left' || position === 'right' ? 'width' : 'height';\n        const axisTrackTemplate: Track = {\n            // uid: options.id ?? uuid(), // TODO: turning this on makes some tick labels hidden\n            type: 'axis-track',\n            chromInfoPath: this.hg.chromInfoPath,\n            options: {\n                ...options,\n                assembly: this.getAssembly(),\n                stroke: 'transparent', // text outline\n                color: options.theme.axis.labelColor,\n                labelMargin: options.theme.axis.labelMargin,\n                excludeChrPrefix: options.theme.axis.labelExcludeChrPrefix,\n                fontSize: options.theme.axis.labelFontSize,\n                fontFamily: options.theme.axis.labelFontFamily,\n                fontWeight: options.theme.axis.labelFontWeight,\n                tickColor: options.theme.axis.tickColor,\n                tickFormat: type === 'narrower' ? 'si' : 'plain',\n                tickPositions: type === 'regular' ? 'even' : 'ends',\n                reverseOrientation: position === 'bottom' || position === 'right' ? true : false\n            }\n        };\n        if (options.layout === 'circular') {\n            // circular axis: superpose an axis track on top of the `center` track\n            this.addTrackToCombined({\n                ...axisTrackTemplate,\n                options: { ...axisTrackTemplate.options, layout: 'circular' }\n            });\n        } else {\n            // linear axis: place an axis track on the top, left, bottom, or right\n            const axisTrack = { ...axisTrackTemplate, [widthOrHeight]: HIGLASS_AXIS_SIZE };\n\n            if (position === 'left') {\n                // In vertical tracks, the main track has been already inserted into `left`, so put axis on the first index to show it on the left.\n                if (this.getLastView().tracks.left.filter(d => d.type === 'axis-track').length !== 0) {\n                    // we already have an axis\n                    return this;\n                }\n                this.getLastView().tracks.left = insertItemToArray(this.getLastView().tracks.left, 0, axisTrack);\n            } else if (position === 'right') {\n                if (this.getLastView().tracks.right.filter(d => d.type === 'axis-track').length !== 0) {\n                    // we already have an axis\n                    return this;\n                }\n                this.getLastView().tracks.right.push(axisTrack);\n            } else {\n                if (this.getLastView().tracks[position].filter(d => d.type === 'axis-track').length !== 0) {\n                    // we already have an axis\n                    return this;\n                }\n                this.getLastView().tracks[position].push(axisTrack);\n            }\n        }\n        return this;\n    }\n\n    public setExampleHiglassViewConfig() {\n        this.hg = exampleHg as any;\n    }\n}\n","import type { LogicalOperation } from '@gosling-lang/gosling-schema';\n\nexport function getMaxZoomLevel() {\n    // TODO: How to correctly calculate maxZoomLevel?\n    const TILE_SIZE = 256;\n    const totalLength = 4795370;\n    return Math.ceil(Math.log(totalLength / TILE_SIZE) / Math.log(2));\n}\n\n/**\n * Perform logical operation between a target and a reference value.\n * If the condition is `true`, return `1`.\n */\nexport function logicalComparison(\n    value: number,\n    op: LogicalOperation,\n    ref: number,\n    transitionPadding?: number\n): number {\n    const padding = transitionPadding && transitionPadding !== 0 ? transitionPadding : undefined;\n    let alpha = 0;\n    switch (op) {\n        case 'less-than':\n        case 'LT':\n        case 'lt':\n            alpha = ref > value ? (padding ? (ref - value) / padding : 1) : 0;\n            break;\n        case 'less-than-or-equal-to':\n        case 'LTET':\n        case 'ltet':\n            alpha = ref >= value ? (padding ? (ref - value) / padding : 1) : 0;\n            break;\n        case 'greater-than':\n        case 'GT':\n        case 'gt':\n            alpha = ref < value ? (padding ? (value - ref) / padding : 1) : 0;\n            break;\n        case 'greater-than-or-equal-to':\n        case 'GTET':\n        case 'gtet':\n            alpha = ref <= value ? (padding ? (value - ref) / padding : 1) : 0;\n            break;\n    }\n\n    // make sure to return a value in [0, 1]\n    return Math.max(Math.min(1, alpha), 0);\n}\n","// TODO: make mark-specific default\nexport const CHANNEL_DEFAULTS = {\n    // https://mikemol.github.io/technique/colorblind/2018/02/11/color-safe-palette.html\n    NOMINAL_COLOR: ['#E79F00', '#029F73', '#0072B2', '#CB7AA7', '#D45E00', '#57B4E9', '#EFE441' /*'#000000'*/],\n    // https://colorcet.holoviz.org/user_guide/Categorical.html\n    NOMINAL_COLOR_EXTENDED: [\n        '#d60000',\n        '#018700',\n        '#b500ff',\n        '#05acc6',\n        '#97ff00',\n        '#ffa52f',\n        '#ff8ec8',\n        '#79525e',\n        '#00fdcf',\n        '#afa5ff',\n        '#93ac83',\n        '#9a6900',\n        '#366962',\n        '#d3008c',\n        '#fdf490',\n        '#c86e66',\n        '#9ee2ff',\n        '#00c846',\n        '#a877ac',\n        '#b8ba01',\n        '#f4bfb1',\n        '#ff28fd',\n        '#f2cdff',\n        '#009e7c',\n        '#ff6200',\n        '#56642a',\n        '#953f1f',\n        '#90318e',\n        '#ff3464',\n        '#a0e491',\n        '#8c9ab1',\n        '#829026',\n        '#ae083f',\n        '#77c6ba',\n        '#bc9157',\n        '#e48eff',\n        '#72b8ff',\n        '#c6a5c1',\n        '#ff9070',\n        '#d3c37c',\n        '#bceddb',\n        '#6b8567',\n        '#916e56',\n        '#f9ff00',\n        '#bac1df',\n        '#ac567c',\n        '#ffcd03',\n        '#ff49b1',\n        '#c15603',\n        '#5d8c90',\n        '#c144bc',\n        '#00753f',\n        '#ba6efd',\n        '#00d493',\n        '#00ff75',\n        '#49a150',\n        '#cc9790',\n        '#00ebed',\n        '#db7e01',\n        '#f77589',\n        '#b89500',\n        '#c84248',\n        '#00cff9',\n        '#755726',\n        '#85d401',\n        '#ebffd4',\n        '#a77b87',\n        '#db72c8',\n        '#cae256',\n        '#8abf5d',\n        '#a1216b',\n        '#855b89',\n        '#89bacf',\n        '#ffbad6',\n        '#b6cfaa',\n        '#97414d',\n        '#67aa00',\n        '#fde1b1',\n        '#ff3628',\n        '#80793d',\n        '#d6e8ff',\n        '#a795c6',\n        '#7ea59a',\n        '#d182a3',\n        '#54823b',\n        '#e6a872',\n        '#9cffff',\n        '#da5480',\n        '#05b3aa',\n        '#ffaaf6',\n        '#d1afef',\n        '#da015d',\n        '#ac1a13',\n        '#60b385',\n        '#d442fd',\n        '#acaa59',\n        '#fb9ca7',\n        '#b3723b',\n        '#f26952',\n        '#aed1d4',\n        '#9affc3',\n        '#dbb333',\n        '#eb01c3',\n        '#9900c4',\n        '#cfff9e',\n        '#a55949',\n        '#3b6d01',\n        '#008579',\n        '#959167',\n        '#89dbb3',\n        '#6d7400',\n        '#aa5dca',\n        '#07ef00',\n        '#804f3d',\n        '#d88052',\n        '#ffc862',\n        '#b8009e',\n        '#99acdd',\n        '#904f00',\n        '#8c4470',\n        '#4f6e52',\n        '#ff8734',\n        '#c68ecd',\n        '#d4e29e',\n        '#b1826d',\n        '#9cfb75',\n        '#56dd77',\n        '#f90087',\n        '#a1cdff',\n        '#13cad1',\n        '#118e54',\n        '#d154a5',\n        '#00dfc3',\n        '#a3832f',\n        '#77975b',\n        '#baaa80',\n        '#70a3af',\n        '#d6fbff',\n        '#e8013a',\n        '#d84621',\n        '#ff82ed',\n        '#b63862',\n        '#b6cd72',\n        '#97626b',\n        '#897490',\n        '#00a316',\n        '#00f4a1',\n        '#bf90f2',\n        '#89e4d8',\n        '#a34d95',\n        '#6e5d00',\n        '#8cc68e',\n        '#95aa2a',\n        '#c672dd',\n        '#b33b01',\n        '#d69a36',\n        '#dfacb6',\n        '#009aa0',\n        '#599000',\n        '#97bca8',\n        '#ac8ca8',\n        '#dad4ff',\n        '#547c72',\n        '#00ba69',\n        '#ffc38e',\n        '#b800d4',\n        '#dfcf5b',\n        '#629a7b',\n        '#bfedbc',\n        '#c1bdfd',\n        '#80d3dd',\n        '#e2857e',\n        '#f9eb4d',\n        '#bf6d82',\n        '#caff4f',\n        '#ef72aa',\n        '#ed67ff',\n        '#9946ae',\n        '#6d6942',\n        '#e25660',\n        '#dd662d',\n        '#9cdb5d',\n        '#e29ccf',\n        '#b87500',\n        '#c6002d',\n        '#dfbcda',\n        '#59b5df',\n        '#ff59da',\n        '#38c1a1',\n        '#9e698c',\n        '#acaac8',\n        '#95622f',\n        '#b55662',\n        '#2b7e60',\n        '#b1e400',\n        '#eda590',\n        '#95fde2',\n        '#ff548e',\n        '#bd6ea1',\n        '#aa3b36',\n        '#d8cf00',\n        '#aa80cd',\n        '#a08052',\n        '#e100e8',\n        '#c35b3d',\n        '#b53a85',\n        '#8c7700',\n        '#dbbc95',\n        '#529e93',\n        '#afbc82',\n        '#91b5b6',\n        '#a75423',\n        '#ffd4ef',\n        '#79ae6b',\n        '#5db54b',\n        '#80fb9a',\n        '#48ffef',\n        '#979548',\n        '#9387a7',\n        '#31d400',\n        '#6ee956',\n        '#b6d4eb',\n        '#705470',\n        '#f2db8a',\n        '#aad4c1',\n        '#7ecdf2',\n        '#89ba00',\n        '#64b6ba',\n        '#ffb500',\n        '#c38285',\n        '#caaa5e',\n        '#647748',\n        '#59e2ff',\n        '#df4dcd',\n        '#e9ff79',\n        '#bc66b8',\n        '#c395a5',\n        '#64c674',\n        '#d19570',\n        '#70cf4f',\n        '#aa6e66',\n        '#9c60a5',\n        '#00b800',\n        '#e299b3',\n        '#bc006b',\n        '#b3e8ef',\n        '#cdbfe4',\n        '#77a342',\n        '#856277',\n        '#568e5b',\n        '#9eafc4',\n        '#e82fa0',\n        '#247c2a',\n        '#826723',\n        '#bfbc4d',\n        '#ddd3a5'\n    ],\n    QUANTITATIVE_COLOR: 'viridis',\n    SIZE: 3,\n    SIZE_RANGE: [2, 6]\n};\n","import { isThereTheme, getTheme as _getTheme } from '@gosling-lang/gosling-theme';\n\n/* ----------------------------- THEME ----------------------------- */\nexport type Theme = ThemeType | ThemeDeep;\nexport type ThemeType =\n    | 'light'\n    | 'dark'\n    | 'warm'\n    | 'ggplot'\n    | 'igv'\n    | 'ensembl'\n    | 'jbrowse'\n    | 'ucsc'\n    | 'washu'\n    | 'excel'\n    | 'google';\n// export type ThemType = keyof typeof Themes;\n// Above line leads to `TypeError: Invalid value used as weak map key` error, due to cyclic dependency.\n// So, instead hard-coding the list as workaround\n// Refer to https://github.com/vega/ts-json-schema-generator/issues/1727\n\nexport interface ThemeDeep {\n    base: ThemeType;\n\n    root?: RootStyle;\n    track?: TrackStyle;\n    legend?: LegendStyle;\n    axis?: AxisStyle;\n\n    // Mark-Specific Styles\n    markCommon?: MarkStyle;\n    point?: MarkStyle;\n    rect?: MarkStyle;\n    triangle?: MarkStyle;\n    area?: MarkStyle;\n    line?: MarkStyle;\n    bar?: MarkStyle;\n    rule?: MarkStyle;\n    link?: MarkStyle;\n    brush?: MarkStyle;\n    text?: MarkStyle & {\n        textFontWeight?: 'bold' | 'normal';\n        textAnchor?: 'start' | 'middle' | 'end';\n    };\n}\n\n// TODO: Better way to implement deep `Required` type instead of having two separate interfaces, i.e., CompleteThemeDeep and ThemeDeep\nexport interface CompleteThemeDeep {\n    base: Required<ThemeType>;\n\n    root: Required<RootStyle>;\n    track: Required<TrackStyle>;\n    legend: Required<LegendStyle>;\n    axis: Required<AxisStyle>;\n\n    // Mark-Specific\n    markCommon: Required<MarkStyle>;\n    point: Required<MarkStyle>;\n    rect: Required<MarkStyle>;\n    triangle: Required<MarkStyle>;\n    area: Required<MarkStyle>;\n    line: Required<MarkStyle>;\n    bar: Required<MarkStyle>;\n    rule: Required<MarkStyle>;\n    link: Required<MarkStyle>;\n    brush: Required<MarkStyle>;\n    text: Required<MarkStyle> &\n        Required<{\n            textFontWeight?: 'bold' | 'normal';\n            textAnchor?: 'start' | 'middle' | 'end';\n        }>;\n}\n\nexport interface RootStyle {\n    background?: string;\n    titleColor?: string;\n    titleFontSize?: number;\n    titleFontFamily?: string;\n    titleAlign?: 'left' | 'middle' | 'right';\n    titleFontWeight?: 'bold' | 'normal' | 'light';\n    titleBackgroundColor?: string;\n    subtitleColor?: string;\n    subtitleFontSize?: number;\n    subtitleFontFamily?: string;\n    subtitleAlign?: 'left' | 'middle' | 'right';\n    subtitleFontWeight?: 'bold' | 'normal' | 'light';\n    subtitleBackgroundColor?: string;\n    showMousePosition?: boolean;\n    mousePositionColor?: string;\n}\n\nexport interface TrackStyle {\n    background?: string;\n    alternatingBackground?: string; // used to fill all even rows\n    titleColor?: string;\n    titleBackground?: string;\n    titleFontSize?: number;\n    titleAlign?: 'left' | 'middle' | 'right';\n    outline?: string;\n    outlineWidth?: number;\n    // ...\n}\n\nexport interface LegendStyle {\n    position?: 'top' | 'right'; // TODO: support bottom and left, and even all corners (e.g., top-left, bottom-right, etc)\n    tickColor?: string;\n    labelColor?: string;\n    labelFontSize?: number;\n    labelFontWeight?: 'bold' | 'normal' | 'light';\n    labelFontFamily?: string;\n    background?: string;\n    backgroundOpacity?: number;\n    backgroundStroke?: string;\n    // ...\n}\n\nexport interface AxisStyle {\n    tickColor?: string;\n    /**\n     * The margin around labels for calculating visual overlaps between labels.\n     * This is mainly used for determining the visibility of axis labels.\n     * `0` if no margin to use. Negative values (`-1`) for showing all labels even if they overlap.\n     */\n    labelMargin?: number;\n    /**\n     * If `true`, labels of genomics axes excludes the chromosome prefix (e.g., `chr1` -> `1`).\n     */\n    labelExcludeChrPrefix?: boolean;\n    labelColor?: string;\n    labelFontSize?: number;\n    labelFontWeight?: 'bold' | 'normal' | 'light';\n    labelFontFamily?: string;\n    baselineColor?: string;\n    gridColor?: string;\n    gridStrokeWidth?: number;\n    gridStrokeType?: 'solid' | 'dashed';\n    gridStrokeDash?: [number, number];\n    // ...\n}\n\nexport interface MarkStyle {\n    color?: string;\n    size?: number;\n    stroke?: string;\n    strokeWidth?: number;\n    opacity?: number;\n\n    nominalColorRange?: string[];\n    quantitativeSizeRange?: [number, number];\n    // ...\n}\n\n// TODO: Instead of calling this function everytime, create a JSON object and use it throughout the project.\nexport function getTheme(theme: Theme = 'light'): Required<CompleteThemeDeep> {\n    if (typeof theme === 'string') {\n        if (isThereTheme(theme)) {\n            return _getTheme(theme);\n        } else {\n            return _getTheme('light');\n        }\n    } else {\n        // Iterate all keys to override from base\n        let baseSpec = JSON.parse(JSON.stringify(_getTheme('light')));\n        if (isThereTheme(theme.base)) {\n            baseSpec = _getTheme(theme.base);\n        }\n        // Override defaults from `base`\n        Object.keys(baseSpec).forEach(k => {\n            if ((theme as any)[k] && k !== 'base') {\n                baseSpec[k] = Object.assign(\n                    JSON.parse(JSON.stringify(baseSpec[k])),\n                    JSON.parse(JSON.stringify((theme as any)[k]))\n                );\n            }\n        });\n        return baseSpec;\n    }\n}\n","import type {\n    ChannelDeep,\n    PredefinedColors,\n    ChannelTypes,\n    ChannelValue,\n    SingleTrack,\n    Channel,\n    Color,\n    Stroke\n} from '@gosling-lang/gosling-schema';\nimport { validateTrack, getGenomicChannelFromTrack, getGenomicChannelKeyFromTrack } from '@gosling-lang/gosling-schema';\nimport {\n    type ScaleLinear,\n    scaleLinear,\n    type ScaleOrdinal,\n    scaleOrdinal,\n    type ScaleBand,\n    scaleBand,\n    type ScaleSequential,\n    scaleSequential\n} from 'd3-scale';\nimport { interpolateViridis } from 'd3-scale-chromatic';\nimport { min as d3min, max as d3max, sum as d3sum, group } from 'd3-array';\nimport { HIGLASS_AXIS_SIZE } from '../../compiler/higlass-model';\nimport { SUPPORTED_CHANNELS } from '../../core/mark';\nimport type { PIXIVisualProperty } from '../../core/visual-property.schema';\nimport { rectProperty } from '../../core/mark/rect';\nimport { pointProperty } from '../../core/mark/point';\nimport { barProperty } from '../../core/mark/bar';\nimport { getNumericDomain } from '../../core/utils/scales';\nimport { logicalComparison } from '../../core/utils/semantic-zoom';\nimport { aggregateData } from '../../core/utils/data-transform';\nimport {\n    IsChannelDeep,\n    IsChannelValue,\n    getValueUsingChannel,\n    IsStackedChannel,\n    IsDomainArray,\n    PREDEFINED_COLOR_STR_MAP,\n    IsRangeArray\n} from '@gosling-lang/gosling-schema';\nimport { CHANNEL_DEFAULTS } from '../../core/channel';\nimport { type CompleteThemeDeep, getTheme } from '../../core/utils/theme';\nimport { uuid } from '../../core/utils/uuid';\nimport { MouseEventModel } from '../gosling-track/gosling-mouse-event';\n\nexport type ScaleType =\n    | ScaleLinear<any, any>\n    | ScaleOrdinal<any, any>\n    | ScaleBand<any>\n    | ScaleSequential<any>\n    | (() => string | number); // constant value\n\nexport class GoslingTrackModel {\n    private id: string;\n\n    private theme: Required<CompleteThemeDeep>;\n\n    /* spec */\n    private specOriginal: SingleTrack; // original spec of users\n    private specComplete: SingleTrack; // processed spec, being used in visualizations\n\n    /* data */\n    private dataAggregated: { [k: string]: number | string }[];\n\n    /* channel scales */\n    private channelScales: {\n        [channel: string]: ScaleType;\n    };\n\n    /* mouse events */\n    private mouseEventModel: MouseEventModel;\n\n    constructor(spec: SingleTrack, data: { [k: string]: number | string }[], theme: Required<CompleteThemeDeep>) {\n        this.id = uuid();\n\n        this.theme = theme ?? getTheme();\n\n        this.dataAggregated = data;\n\n        this.specOriginal = spec;\n        this.specComplete = spec;\n\n        this.channelScales = {};\n\n        this.mouseEventModel = new MouseEventModel();\n\n        const validity = this.validateSpec();\n        if (!validity.valid) {\n            console.warn('Gosling specification is not valid!', validity.errorMessages);\n            return;\n        }\n\n        // fill missing options\n        this.generateCompleteSpec(this.specComplete);\n\n        this.flipRanges(this.specComplete);\n\n        // generate scales based on domains and ranges\n        this.generateScales();\n\n        this.dataAggregated = aggregateData(this.spec(), this.dataAggregated);\n\n        // Add default specs.\n        // ...\n\n        // DEBUG\n        // console.log('corrected track', this.spec());\n    }\n\n    public getId(): string {\n        return this.id;\n    }\n\n    public originalSpec(): SingleTrack {\n        return this.specOriginal;\n    }\n\n    public spec(): SingleTrack {\n        return this.specComplete;\n    }\n\n    public data(): { [k: string]: number | string }[] {\n        return this.dataAggregated;\n    }\n\n    public getMouseEventModel(): MouseEventModel {\n        return this.mouseEventModel;\n    }\n\n    /**\n     * Fill the missing options with default values or with the values calculated based on the data.\n     */\n    private generateCompleteSpec(spec: SingleTrack) {\n        if (!spec.width || !spec.height) {\n            // This shouldn't be reached.\n            console.warn('Size of track is not determined yet.');\n            return;\n        }\n\n        // If this is vertical track, switch them.\n        if (spec.orientation === 'vertical') {\n            const width = spec.width;\n            spec.width = spec.height;\n            spec.height = width;\n        }\n\n        // If axis presents, reserve a space to show axis\n        const xOrY = this.getGenomicChannelKey();\n        let isAxisShown = false;\n        if (xOrY === 'x') {\n            isAxisShown = IsChannelDeep(spec.x) && spec.x.axis !== undefined && spec.x.axis !== 'none';\n        }\n        if (xOrY === 'y') {\n            isAxisShown = IsChannelDeep(spec.y) && spec.y.axis !== undefined && spec.y.axis !== 'none';\n        }\n        if (spec.layout !== 'circular') {\n            if (IsChannelDeep(spec.x) && spec.x.axis !== undefined && spec.x.axis !== 'none') {\n                // for linear layouts, prepare a horizontal or vertical space for the axis\n                // we already switched the width and height in vertical tracks, so use `height`\n                spec.height -= HIGLASS_AXIS_SIZE;\n            }\n            // TODO: consider 2D\n        } else {\n            // for circular layouts, prepare a space in radius for the axis\n            if (xOrY === 'x' && isAxisShown && IsChannelDeep(spec.x) && spec.x.axis === 'top') {\n                spec['outerRadius'] = ((spec['outerRadius'] as number) - HIGLASS_AXIS_SIZE) as number;\n            } else if (xOrY === 'x' && isAxisShown && IsChannelDeep(spec.x) && spec.x.axis === 'bottom') {\n                spec['innerRadius'] = ((spec['innerRadius'] as number) + HIGLASS_AXIS_SIZE) as number;\n            }\n        }\n\n        // zero baseline\n        SUPPORTED_CHANNELS.forEach(channelKey => {\n            const channel = spec[channelKey];\n            if (IsChannelDeep(channel) && !('zeroBaseline' in channel) && channel.type === 'quantitative') {\n                (channel as any).zeroBaseline = true;\n            }\n        });\n\n        this.addScaleMaterials(spec);\n    }\n\n    /**\n     * TODO: This is experimental. For bar charts, for example, additional care should be taken to correctly flip the visual marks.\n     * Flip the y scales when `flip` options is used.\n     */\n    private flipRanges(spec: SingleTrack) {\n        if (IsChannelDeep(spec.y) && spec.y.flip && Array.isArray(spec.y.range)) {\n            spec.y.range = spec.y.range.reverse();\n        }\n    }\n\n    /**\n     * Find an axis channel that is encoded with genomic coordinate and return the key (e.g., 'x').\n     * `undefined` if not found.\n     */\n    public getGenomicChannelKey(): 'x' | 'xe' | 'y' | 'ye' | 'x1' | 'x1e' | 'y1' | 'y1e' | undefined {\n        return getGenomicChannelKeyFromTrack(this.spec());\n    }\n    /**\n     * Find a genomic field from the track specification.\n     * `undefined` if not found.\n     */\n    public getGenomicChannel(): ChannelDeep | undefined {\n        return getGenomicChannelFromTrack(this.spec());\n    }\n\n    /**\n     * Replace a domain with a new one in the complete spec(s) if the original spec does not define the domain.\n     * A domain is replaced only when the channel is bound with data (i.e., `ChannelDeep`).\n     */\n    public setChannelDomain(channelKey: keyof typeof ChannelTypes, domain: string[] | number[], force?: boolean) {\n        const channelRaw = this.originalSpec()[channelKey];\n        if (!force && IsChannelDeep(channelRaw) && channelRaw.domain !== undefined) {\n            // if domain is provided in the original spec, we do not replace the domain in the complete spec(s)\n            return;\n        }\n        const channel = this.specComplete[channelKey];\n        if (IsChannelDeep(channel)) {\n            channel.domain = domain;\n        }\n    }\n\n    /**\n     * Update default constant values by looking up other channels' scales.\n     */\n    public updateChannelValue() {\n        if (this.originalSpec().y === undefined) {\n            const y = this.spec().y;\n            const rowCategories = this.getChannelDomainArray('row');\n            if (y && IsChannelValue(y) && rowCategories && this.spec().mark !== 'withinLink') {\n                y.value = (this.spec().height as number) / rowCategories.length / 2.0;\n            }\n        }\n    }\n\n    /**\n     * Get the encoded value using the scales already constructed.\n     */\n    public encodedValue(channelKey: keyof typeof ChannelTypes, value?: number | string) {\n        if (channelKey === 'text' && value !== undefined) {\n            return `${+value ? ~~value : value}`;\n            // TODO: Better formatting?\n            // return `${+value ? (+value - ~~value) > 0 ? (+value).toExponential(1) : ~~value : value}`;\n        }\n\n        const channel = this.spec()[channelKey];\n        const channelFieldType = IsChannelDeep(channel)\n            ? channel.type\n            : IsChannelValue(channel)\n            ? 'constant'\n            : undefined;\n\n        if (!channelFieldType) {\n            // Shouldn't be reached. Channel should be either encoded with data or a constant value.\n            return undefined;\n        }\n\n        if (channelFieldType === 'constant') {\n            // Just return the constant value.\n            return (this.channelScales[channelKey] as () => number | string)();\n        }\n\n        if (value === undefined) {\n            // Value is undefined, so returning undefined.\n            return undefined;\n        }\n\n        if (value === null) {\n            if (channelFieldType === 'quantitative') {\n                value = 0;\n            } else if (channelFieldType === 'nominal') {\n                value = 'null';\n            }\n        }\n\n        if (typeof this.channelScales[channelKey] !== 'function') {\n            // Scale is undefined, so returning undefined.\n            return undefined;\n        }\n\n        // The type of a channel scale is determined by a { channel type, field type } pair\n        switch (channelKey) {\n            case 'x':\n            case 'y':\n            case 'x1':\n            case 'y1':\n            case 'xe':\n            case 'ye':\n            case 'x1e':\n                if (channelFieldType === 'quantitative' || channelFieldType === 'genomic') {\n                    return (this.channelScales[channelKey] as ScaleLinear<any, any>)(value as number);\n                }\n                if (channelFieldType === 'nominal') {\n                    return (this.channelScales[channelKey] as ScaleBand<any>)(value as string);\n                }\n                break;\n            case 'stroke':\n            case 'color':\n                if (channelFieldType === 'quantitative') {\n                    const s = (this.channelScales[channelKey] as ScaleSequential<any>).copy();\n                    const d = s.domain();\n                    const e = d[1] - d[0];\n                    const so = Array.from((channel as Color).scaleOffset ?? [0, 1]);\n                    return s.domain([d[0] + e * so.sort()[0], d[0] + e * so.sort()[1]])(value as number);\n                }\n                if (channelFieldType === 'nominal') {\n                    return (this.channelScales[channelKey] as ScaleOrdinal<any, any>)(value as string);\n                }\n                /* genomic is not supported */\n                break;\n            case 'size':\n                if (channelFieldType === 'quantitative') {\n                    return (this.channelScales[channelKey] as ScaleLinear<any, any>)(value as number);\n                }\n                if (channelFieldType === 'nominal') {\n                    return (this.channelScales[channelKey] as ScaleOrdinal<any, any>)(value as string);\n                }\n                /* genomic is not supported */\n                break;\n            case 'row':\n                /* quantitative is not supported */\n                if (channelFieldType === 'nominal') {\n                    return (this.channelScales[channelKey] as ScaleBand<any>)(value as string);\n                }\n                /* genomic is not supported */\n                break;\n            case 'strokeWidth':\n            case 'opacity':\n                if (channelFieldType === 'quantitative') {\n                    return (this.channelScales[channelKey] as ScaleLinear<any, any>)(value as number);\n                }\n                /* nominal is not supported */\n                /* genomic is not supported */\n                break;\n            default:\n                console.warn(`${channelKey} is not supported for encoding values, so returning a undefined value`);\n                return undefined;\n        }\n    }\n\n    public trackVisibility(currentStage: { zoomLevel?: number }): boolean {\n        const spec = this.spec();\n        if (\n            !spec.visibility ||\n            spec.visibility.length === 0 ||\n            spec.visibility.filter(d => d.target === 'track').length === 0\n        ) {\n            // if condition is not defined, just show them.\n            return true;\n        }\n\n        // We are using a logical operation AND, so if unless all options are `true`, we hide this track.\n        let visibility = true;\n        spec.visibility\n            .filter(d => d.target === 'track')\n            .forEach(d => {\n                const { operation, measure, threshold } = d;\n\n                let compareValue: number | undefined;\n\n                if (measure === 'zoomLevel') {\n                    compareValue = currentStage[measure];\n                } else {\n                    compareValue = spec[measure];\n                }\n\n                if (compareValue !== undefined) {\n                    // compare only when the measure is suggested\n                    visibility = visibility && logicalComparison(compareValue, operation, threshold as number) === 1;\n                }\n            });\n        return visibility;\n    }\n\n    /**\n     * Check whether the visual mark should be visible or not.\n     * Return 0 (invisible) only when the predefined condition is correct.\n     */\n    public markVisibility(datum: { [k: string]: string | number }, metrics?: any): number {\n        const spec = this.spec();\n        if (\n            !spec.visibility ||\n            spec.visibility.length === 0 ||\n            spec.visibility.filter(d => d.target === 'mark').length === 0\n        ) {\n            // if condition is not defined, just show them.\n            return 1;\n        }\n\n        let visibility = 1;\n\n        // Find the lowest visibility\n        spec.visibility\n            .filter(d => d.target === 'mark')\n            .forEach(d => {\n                const { operation, threshold, conditionPadding, transitionPadding, measure } = d;\n\n                const padding = conditionPadding ?? 0;\n                const mark = spec.mark;\n\n                let newVisibility = 1;\n\n                if (mark === 'text' && threshold === '|xe-x|' && measure === 'width') {\n                    // compare between the actual width and the |xe-x|\n                    const xe = this.encodedPIXIProperty('xe', datum);\n                    const x = this.encodedPIXIProperty('x', datum);\n\n                    if (xe !== undefined && metrics?.width) {\n                        newVisibility = logicalComparison(\n                            metrics.width + padding,\n                            operation,\n                            Math.abs(xe - x),\n                            transitionPadding\n                        );\n                    }\n                } else if (measure === 'width' && typeof threshold === 'number' && metrics?.width) {\n                    // compare between the actual width and the constant width that user specified\n                    newVisibility = logicalComparison(metrics.width + padding, operation, threshold, transitionPadding);\n                } else if (measure === 'zoomLevel' && typeof threshold === 'number' && metrics?.zoomLevel) {\n                    newVisibility = logicalComparison(metrics.zoomLevel, operation, threshold, transitionPadding);\n                }\n\n                // Update only if the upcoming one is smaller\n                if (visibility > newVisibility) {\n                    visibility = newVisibility;\n                }\n            });\n        return visibility;\n    }\n\n    /**\n     *\n     */\n    public visualPropertyByChannel(channelKey: keyof typeof ChannelTypes, datum?: { [k: string]: string | number }) {\n        const value = datum !== undefined ? getValueUsingChannel(datum, this.spec()[channelKey] as Channel) : undefined; // Is this safe enough?\n        return this.encodedValue(channelKey, value);\n    }\n\n    /**\n     * Retrieve an encoded visual property of a visual mark.\n     */\n    public encodedPIXIProperty(\n        propertyKey: PIXIVisualProperty,\n        datum?: { [k: string]: string | number },\n        additionalInfo?: any\n    ) {\n        const mark = this.spec().mark;\n\n        // common visual properties, not specific to visual marks\n        if (\n            [\n                'text',\n                'color',\n                'row',\n                'stroke',\n                'opacity',\n                'strokeWidth',\n                'x',\n                'y',\n                'xe',\n                'x1',\n                'x1e',\n                'ye',\n                'size'\n            ].includes(propertyKey)\n        ) {\n            return this.visualPropertyByChannel(propertyKey as any, datum);\n        }\n\n        switch (mark) {\n            case 'bar':\n                return barProperty(this, propertyKey, datum, additionalInfo);\n            case 'point':\n            case 'text':\n                return pointProperty(this, propertyKey, datum);\n            case 'rect':\n                return rectProperty(this, propertyKey, datum, additionalInfo);\n            default:\n                // Mark type that is not supported yet\n                return undefined;\n        }\n    }\n\n    // TODO: better organize this, perhaps, by combining several if statements\n    /**\n     * Set missing `range`, `domain`, and/or `value` of each channel by looking into data.\n     */\n    public addScaleMaterials(spec: SingleTrack) {\n        const data = this.data();\n\n        const genomicChannel = this.getGenomicChannel();\n        if (!genomicChannel || !genomicChannel.field) {\n            console.warn('Genomic field is not provided in the specification');\n            // EXPERIMENTAL: we are removing this rule in our spec.\n            return;\n        }\n\n        if (typeof spec.width === 'undefined' || typeof spec.height === 'undefined') {\n            console.warn('Track size is not determined yet');\n            return;\n        }\n\n        // const WARN_MSG = (c: string, t: string) =>\n        //     `The channel key and type pair {${c}, ${t}} is not supported when generating channel scales`;\n\n        SUPPORTED_CHANNELS.forEach(channelKey => {\n            const channel = spec[channelKey];\n\n            if (IsStackedChannel(spec, channelKey) && IsChannelDeep(channel)) {\n                // we need to group data before calculating scales because marks are going to be stacked\n                // (spec as any /* TODO: select more accurately */).x\n                const pivotedData = group(data, d => d[genomicChannel.field as string]);\n                const xKeys = [...pivotedData.keys()];\n\n                if (!channel.domain) {\n                    // TODO: consider data ranges in negative values\n                    const min =\n                        'zeroBaseline' in channel && channel.zeroBaseline\n                            ? 0\n                            : d3min(\n                                  xKeys.map(d =>\n                                      d3sum(\n                                          (pivotedData.get(d) as any).map((_d: any) =>\n                                              channel.field ? _d[channel.field] : undefined\n                                          )\n                                      )\n                                  ) as number[]\n                              );\n                    const max = d3max(\n                        xKeys.map(d =>\n                            d3sum(\n                                (pivotedData.get(d) as any).map((_d: any) =>\n                                    channel.field ? _d[channel.field] : undefined\n                                )\n                            )\n                        ) as number[]\n                    );\n                    channel.domain = [min, max] as [number, number]; // TODO: what if data ranges in negative values\n                }\n\n                if (!channel.range) {\n                    const rowChannel = spec.row;\n                    const rowField = IsChannelDeep(rowChannel) ? rowChannel.field : undefined;\n                    const rowCategories =\n                        this.getChannelDomainArray('row') ??\n                        (rowField ? Array.from(new Set(data.map(d => d[rowField as string]))) : [1]);\n                    const rowHeight = (spec.height as number) / rowCategories.length;\n\n                    // `channel` here is either `x` or `y` because they only can ba stacked\n                    switch (channelKey) {\n                        case 'x':\n                            channel.range = [0, spec.width] as [number, number]; // TODO: not considering vertical direction tracks\n                            break;\n                        case 'y':\n                            channel.range = [0, rowHeight];\n                            break;\n                    }\n                }\n            } else {\n                const rowChannel = spec.row;\n                const rowField = IsChannelDeep(rowChannel) ? rowChannel.field : undefined;\n                const rowCategories =\n                    this.getChannelDomainArray('row') ??\n                    (rowField ? Array.from(new Set(data.map(d => d[rowField as string]))) : [1]);\n                const rowHeight = (spec.height as number) / rowCategories.length;\n\n                if (!channel) {\n                    // this means the channel is entirely missing in the specification, so we add a default value\n                    let value;\n                    switch (channelKey) {\n                        case 'x':\n                            value = (spec.width as number) / 2.0;\n                            break;\n                        case 'y':\n                            if (spec.mark === 'withinLink') value = rowHeight;\n                            else value = rowHeight / 2.0;\n                            break;\n                        case 'size':\n                            if (spec.mark === 'line') value = this.theme.line.size;\n                            else if (spec.mark === 'bar') value = undefined;\n                            else if (spec.mark === 'rect') value = undefined;\n                            else if (spec.mark === 'triangleRight') value = undefined;\n                            else if (spec.mark === 'triangleLeft') value = undefined;\n                            else if (spec.mark === 'triangleBottom') value = undefined;\n                            // Points in this case are stretched from `x` to `xe`\n                            else if (\n                                spec.stretch &&\n                                spec.mark === 'point' &&\n                                IsChannelDeep(spec.x) &&\n                                IsChannelDeep(spec.xe)\n                            )\n                                value = undefined;\n                            else if (spec.mark === 'text') value = 12;\n                            else value = this.theme.point.size;\n                            break;\n                        case 'color':\n                            value = this.theme.markCommon.color;\n                            break;\n                        case 'row':\n                            value = 0;\n                            break;\n                        case 'stroke':\n                            // !! TODO: These should be based on themes\n                            if (spec.mark === 'text') value = this.theme.text.stroke;\n                            else value = this.theme.markCommon.stroke;\n                            break;\n                        case 'strokeWidth':\n                            if (spec.mark === 'rule') value = this.theme.rule.strokeWidth;\n                            else if (spec.mark === 'withinLink' || spec.mark === 'betweenLink')\n                                value = this.theme.link.strokeWidth;\n                            else if (spec.mark === 'text') value = this.theme.text.strokeWidth;\n                            else value = this.theme.markCommon.strokeWidth;\n                            break;\n                        case 'opacity':\n                            value = this.theme.markCommon.opacity;\n                            break;\n                        case 'text':\n                            value = '';\n                            break;\n                        default:\n                        // console.warn(WARN_MSG(channelKey, 'value'));\n                    }\n                    if (typeof value !== 'undefined') {\n                        spec[channelKey] = { value } as ChannelValue;\n                    }\n                } else if (IsChannelDeep(channel) && (channel.type === 'quantitative' || channel.type === 'genomic')) {\n                    if (channel.domain === undefined) {\n                        const min =\n                            'zeroBaseline' in channel && channel.zeroBaseline\n                                ? 0\n                                : (d3min(data.map(d => +d[channel.field as string]) as number[]) as number) ?? 0;\n                        const max = (d3max(data.map(d => +d[channel.field as string]) as number[]) as number) ?? 0;\n                        channel.domain = [min, max]; // TODO: what if data ranges in negative values\n                    } else if (channel.type === 'genomic' && !IsDomainArray(channel.domain)) {\n                        channel.domain = getNumericDomain(channel.domain);\n                    }\n\n                    if (\n                        (channelKey === 'color' || channelKey === 'stroke') &&\n                        channel.type === 'quantitative' &&\n                        !(channel as Color).scaleOffset\n                    ) {\n                        (channel as Color | Stroke).scaleOffset = [0, 1];\n                    }\n\n                    if (!channel.range) {\n                        let range;\n                        switch (channelKey) {\n                            case 'x':\n                            case 'xe':\n                            case 'x1':\n                            case 'x1e':\n                                range = [0, spec.width];\n                                break;\n                            case 'y':\n                            case 'ye':\n                                range = [0, rowHeight];\n                                break;\n                            case 'color':\n                            case 'stroke':\n                                range = CHANNEL_DEFAULTS.QUANTITATIVE_COLOR as PredefinedColors;\n                                break;\n                            case 'size':\n                                range = this.theme.markCommon.quantitativeSizeRange;\n                                break;\n                            case 'strokeWidth':\n                                range = [1, 3];\n                                break;\n                            case 'opacity':\n                                range = [0, 1];\n                                break;\n                            default:\n                                // console.warn(WARN_MSG(channelKey, channel.type));\n                                break;\n                        }\n                        if (range) {\n                            channel.range = range as PredefinedColors | number[];\n                        }\n                    }\n                } else if (IsChannelDeep(channel) && channel.type === 'nominal') {\n                    if (channel.domain === undefined) {\n                        channel.domain = Array.from(\n                            new Set(data.map(d => d[channel.field as string] ?? 'null'))\n                        ) as string[];\n                    }\n                    if (!channel.range) {\n                        let startSize = 2;\n                        let range;\n                        switch (channelKey) {\n                            case 'x':\n                            case 'xe':\n                                range = [0, spec.width];\n                                break;\n                            case 'y':\n                            case 'ye':\n                                range = [rowHeight, 0]; // reversed because the origin is on the top\n                                break;\n                            case 'color':\n                            case 'stroke':\n                                range = this.theme.markCommon.nominalColorRange;\n                                break;\n                            case 'row':\n                                range = [0, spec.height];\n                                break;\n                            case 'size':\n                                range = (channel.domain as number[]).map(() => startSize++);\n                                break;\n                            default:\n                                // console.warn(WARN_MSG(channelKey, channel.type));\n                                break;\n                        }\n                        if (range) {\n                            channel.range = range as number[] | string[];\n                        }\n                    }\n                }\n            }\n        });\n\n        /* Merge domains of neighbor channels (e.g., x and xe) */\n        [\n            ['x', 'xe'],\n            ['y', 'ye']\n        ].forEach(pair => {\n            const [k1, k2] = pair as [keyof typeof ChannelTypes, keyof typeof ChannelTypes];\n            const c1 = spec[k1],\n                c2 = spec[k2];\n            if (\n                IsChannelDeep(c1) &&\n                IsChannelDeep(c2) &&\n                c1.type === c2.type &&\n                c1.domain &&\n                c2.domain &&\n                Array.isArray(c1.domain) &&\n                Array.isArray(c2.domain)\n            ) {\n                if (c1.type === 'genomic' || c1.type === 'quantitative') {\n                    const min = d3min([c1.domain[0] as number, c2.domain[0] as number]) as number;\n                    const max = d3max([c1.domain[1] as number, c2.domain[1] as number]) as number;\n                    c1.domain = c2.domain = [min, max];\n                } else if (c1.type === 'nominal') {\n                    const range = Array.from(new Set([...c1.domain, ...c2.domain])) as string[];\n                    c1.range = c2.range = range;\n                }\n            }\n        });\n    }\n\n    /**\n     * Store the scale of individual visual channels based on the `complete` spec.\n     */\n    public generateScales() {\n        const spec = this.spec();\n\n        /// DEBUG\n        // console.log(spec);\n        //\n\n        SUPPORTED_CHANNELS.forEach(channelKey => {\n            const channel = spec[channelKey];\n\n            if (IsChannelValue(channel)) {\n                this.channelScales[channelKey] = () => channel.value;\n            } else if (IsChannelDeep(channel)) {\n                if (channelKey === 'text') {\n                    // We do not generate scales for 'text' marks.\n                    return;\n                }\n\n                const domain = channel.domain;\n                const range = channel.range;\n\n                if (domain === undefined || range === undefined) {\n                    // we do not have sufficient info to generate scales\n                    return;\n                }\n\n                if (channel.type === 'quantitative' || channel.type === 'genomic') {\n                    switch (channelKey) {\n                        case 'x':\n                        case 'x1':\n                        case 'xe':\n                        case 'x1e':\n                        case 'y':\n                        case 'ye':\n                        case 'size':\n                        case 'opacity':\n                        case 'strokeWidth':\n                            this.channelScales[channelKey] = scaleLinear()\n                                .domain(domain as [number, number])\n                                .range(range as [number, number]);\n                            break;\n                        case 'color':\n                        case 'stroke':\n                            let interpolate = interpolateViridis;\n                            if (Object.keys(PREDEFINED_COLOR_STR_MAP).includes(range as string)) {\n                                interpolate = PREDEFINED_COLOR_STR_MAP[range as string];\n                            }\n                            this.channelScales[channelKey] = scaleSequential(interpolate).domain(\n                                domain as [number, number]\n                            );\n                            break;\n                        default:\n                            break;\n                        // console.warn('Not supported channel for calculating scales');\n                    }\n                } else if (channel.type === 'nominal') {\n                    switch (channelKey) {\n                        case 'x':\n                        case 'xe':\n                        case 'y':\n                        case 'ye':\n                        case 'row':\n                            this.channelScales[channelKey] = scaleBand()\n                                .domain(domain as string[])\n                                .range(range as [number, number]);\n                            break;\n                        case 'size':\n                            this.channelScales[channelKey] = scaleOrdinal()\n                                .domain(domain as string[])\n                                .range(range as number[]);\n                            break;\n                        case 'color':\n                        case 'stroke':\n                            this.channelScales[channelKey] = scaleOrdinal(range as string[]).domain(domain as string[]);\n                            break;\n                        default:\n                            break;\n                        // console.warn('Not supported channel for calculating scales');\n                    }\n                }\n            }\n        });\n    }\n\n    /**\n     * Return the scale of a visual channel.\n     * `undefined` if we do not have the scale.\n     */\n    public getChannelScale(channelKey: keyof typeof ChannelTypes) {\n        return this.channelScales[channelKey];\n    }\n\n    /**\n     * Set a new scale for a certain channel. Usually called to replace the scale of a genomic axis with the one that is generated by the HiGlass data fetcher.\n     */\n    public setChannelScale(channelKey: keyof typeof ChannelTypes, scale: ScaleType) {\n        this.channelScales[channelKey] = scale;\n    }\n\n    /**\n     * Return whether to show y-axis.\n     */\n    public isShowYAxis(): boolean {\n        const spec = this.spec();\n        const yDomain = this.getChannelDomainArray('y');\n        const yRange = this.getChannelRangeArray('y');\n        return (\n            IsChannelDeep(spec.y) && spec.y.axis !== 'none' && spec.y.type === 'quantitative' && !!yDomain && !!yRange\n        );\n    }\n\n    /**\n     * Return the domain of a visual channel.\n     * `undefined` if we do not have domain in array.\n     */\n    public getChannelDomainArray(channelKey: keyof typeof ChannelTypes): string[] | number[] | undefined {\n        const c = this.spec()[channelKey];\n        return IsChannelDeep(c) && IsDomainArray(c.domain) ? c.domain : undefined;\n    }\n\n    /**\n     * Return the range of a visual channel.\n     * `undefined` if we do not have domain in array.\n     */\n    public getChannelRangeArray(channelKey: keyof typeof ChannelTypes): string[] | number[] | undefined {\n        const c = this.spec()[channelKey];\n        return IsChannelDeep(c) && IsRangeArray(c.range) ? c.range : undefined;\n    }\n\n    /**\n     * Validate the original spec.\n     */\n    public validateSpec(): { valid: boolean; errorMessages: string[] } {\n        return validateTrack(this.originalSpec());\n    }\n}\n","import type { _EventMap } from '@gosling-lang/gosling-schema';\nimport PubSub from 'pubsub-js';\n\ntype EventName = keyof _EventMap;\n\nexport function publish<Name extends EventName>(name: Name, data: _EventMap[Name]): void {\n    PubSub.publish(name, data);\n}\n\nexport function subscribe<Name extends EventName>(\n    name: Name,\n    callback: (msg: string, data: _EventMap[Name]) => void\n): void {\n    PubSub.subscribe(name, callback);\n}\n\nexport function unsubscribe(name: EventName): void {\n    PubSub.unsubscribe(name);\n}\n","import type * as PIXI from 'pixi.js';\nimport { isEqual, sampleSize, uniqBy } from 'lodash-es';\nimport type { ScaleLinear } from 'd3-scale';\nimport type {\n    SingleTrack,\n    OverlaidTrack,\n    Datum,\n    EventStyle,\n    GenomicPosition,\n    Assembly,\n    ValueExtent,\n    Range\n} from '@gosling-lang/gosling-schema';\nimport { type MouseEventData, isPointInsideDonutSlice } from '../gosling-track/gosling-mouse-event';\nimport { BamDataFetcher, type TabularDataFetcher } from '@data-fetchers';\nimport type { Tile as _Tile, TileData, TileDataBase } from '@higlass/services';\nimport { LinearBrushModel } from '@gosling-lang/gosling-brush';\nimport { getTheme } from '@gosling-lang/gosling-theme';\nimport { getTabularData } from './data-abstraction';\n\nimport type { CompleteThemeDeep } from '../../core/utils/theme';\nimport { drawMark, drawPostEmbellishment, drawPreEmbellishment } from '../../core/mark';\nimport { GoslingTrackModel } from './gosling-track-model';\nimport { validateTrack } from '@gosling-lang/gosling-schema';\nimport { shareScaleAcrossTracks } from '../../core/utils/scales';\nimport { resolveSuperposedTracks } from '../../core/utils/overlay';\nimport colorToHex from '../../core/utils/color-to-hex';\nimport {\n    aggregateCoverage,\n    calculateData,\n    concatString,\n    displace,\n    filterData,\n    calculateGenomicLength,\n    parseSubJSON,\n    replaceString,\n    splitExon,\n    inferSvType\n} from '../../core/utils/data-transform';\nimport { publish } from '../../api/pubsub';\nimport { getRelativeGenomicPosition } from '../../core/utils/assembly';\nimport { getTextStyle } from '../../core/utils/text-style';\nimport {\n    Is2DTrack,\n    IsChannelDeep,\n    IsMouseEventsDeep,\n    IsXAxis,\n    isTabularDataFetcher,\n    hasDataTransform\n} from '@gosling-lang/gosling-schema';\nimport { HIGLASS_AXIS_SIZE } from '../../compiler/higlass-model';\nimport { flatArrayToPairArray } from '../../core/utils/array';\nimport { createPluginTrack, type PluginTrackFactory, type TrackConfig } from '../../core/utils/define-plugin-track';\nimport { uuid } from '../../core/utils/uuid';\n\n// Set `true` to print in what order each function is called\nexport const PRINT_RENDERING_CYCLE = false;\n\n// For using libraries, refer to https://github.com/higlass/higlass/blob/f82c0a4f7b2ab1c145091166b0457638934b15f3/app/scripts/configs/available-for-plugins.js\n// `getTilePosAndDimensions()` definition: https://github.com/higlass/higlass/blob/1e1146409c7d7c7014505dd80d5af3e9357c77b6/app/scripts/Tiled1DPixiTrack.js#L133\n// Refer to the following already supported graphics:\n// https://github.com/higlass/higlass/blob/54f5aae61d3474f9e868621228270f0c90ef9343/app/scripts/PixiTrack.js#L115\n\nconst DEFAULT_MOUSE_EVENT_STYLE: Required<EventStyle> = {\n    stroke: 'black',\n    strokeWidth: 1,\n    strokeOpacity: 1,\n    color: 'none',\n    opacity: 1,\n    arrange: 'front'\n};\n\ninterface GoslingTrackOptions {\n    /**\n     * Track ID specified by users\n     */\n    id: string;\n    /**\n     * Track IDs that are superposed with this track, containing the id of this track itself\n     */\n    siblingIds: string[];\n    spec: SingleTrack | OverlaidTrack;\n    theme: CompleteThemeDeep;\n    showMousePosition?: boolean;\n}\n\n/** Tile data used in Gosling data fetchers */\ninterface TabularTileData extends TileDataBase {\n    tabularData: Datum[];\n}\n\n/** Mutated type of `Tile` that includes Gosling's tile data, i.e., tabular tile data */\nexport interface Tile extends Omit<_Tile, 'tileData'> {\n    tileData: TileData | TabularTileData;\n}\n\ninterface ProcessedTileInfo {\n    /** Single tile can contain multiple gosling models if multiple tracks are superposed */\n    goslingModels: GoslingTrackModel[];\n    tabularData: Datum[];\n    /** Flag variable that indicate that rendering of this tile should be skipped */\n    skipRendering: boolean;\n}\n\n/** Information about the rendered color legend */\nexport interface DisplayedLegend {\n    domain: ValueExtent;\n    range: Range;\n}\n\nfunction initProcessedTileInfo(): ProcessedTileInfo {\n    return { goslingModels: [], tabularData: [], skipRendering: false };\n}\n\nconst config: TrackConfig<GoslingTrackOptions> = {\n    type: 'gosling-track',\n    datatype: ['multivec', 'epilogos'],\n    orientation: '1d-horizontal',\n    // @ts-expect-error missing default spec\n    defaultOptions: {\n        // TODO: Are any of these used?\n        // labelPosition: 'none',\n        // labelColor: 'black',\n        // labelTextOpacity: 0.4,\n        // trackBorderWidth: 0,\n        // trackBorderColor: 'black',\n        // backgroundColor: 'white',\n        // barBorder: false,\n        // sortLargestOnTop: true,\n        // axisPositionHorizontal: 'left',\n        theme: getTheme('light')\n    }\n};\n\nconst factory: PluginTrackFactory<Tile, GoslingTrackOptions> = (HGC, context, options) => {\n    // Services\n    const { tileProxy } = HGC.services;\n    const { BarTrack } = HGC.tracks;\n\n    /* Custom loading label */\n    const loadingTextStyle = getTextStyle({ color: 'black', size: 12 });\n\n    /**\n     * The main plugin track in Gosling. This is a versetile plugin track for HiGlass which relies on GoslingTrackModel\n     * to keep track of mouse event and channel scales.\n     */\n    class GoslingTrackClass extends BarTrack<Tile, typeof options> {\n        /* *\n         *\n         *  Properties\n         *\n         * */\n\n        tileSize: number;\n        mRangeBrush: LinearBrushModel;\n        #assembly?: Assembly; // Used to get the relative genomic position\n        #processedTileInfo: Record<string, ProcessedTileInfo>;\n        firstDraw = true; // False if draw has been called once already. Used with onNewTrack API. Public because used in draw()\n        // Used in mark/legend.ts\n        gLegend? = HGC.libraries.d3Selection.select(context.svgElement).append('g');\n        displayedLegends: DisplayedLegend[] = []; // Store the color legends added so far so that we can avoid overlaps and redundancy\n        // Used in mark/text.ts\n        textGraphics: unknown[] = [];\n        textsBeingUsed = 0;\n        // Mouse fields\n        pMouseHover = new HGC.libraries.PIXI.Graphics();\n        pMouseSelection = new HGC.libraries.PIXI.Graphics();\n        #mouseDownX = 0;\n        #mouseDownY = 0;\n        #isRangeBrushActivated = false;\n        #gBrush = HGC.libraries.d3Selection.select(context.svgElement).append('g');\n        #loadingTextStyleObj = new HGC.libraries.PIXI.TextStyle(loadingTextStyle);\n        #loadingTextBg = new HGC.libraries.PIXI.Graphics();\n        #loadingText = new HGC.libraries.PIXI.Text('', loadingTextStyle);\n        prevVisibleAndFetchedTiles?: Tile[];\n        resolvedTracks: SingleTrack[] | undefined;\n\n        /* *\n         *\n         *  Constructor\n         *\n         * */\n\n        constructor() {\n            super(context, options);\n\n            context.dataFetcher.track = this;\n            this.#processedTileInfo = {};\n            this.#assembly = this.options.spec.assembly;\n\n            // Add unique IDs to each of the overlaid tracks that will be rendered independently.\n            if ('overlay' in this.options.spec) {\n                this.options.spec.overlay = (this.options.spec as OverlaidTrack)._overlay.map(o => {\n                    return { ...o, _renderingId: uuid() };\n                });\n            } else {\n                this.options.spec._renderingId = uuid();\n            }\n\n            this.fetchedTiles = {};\n            this.tileSize = this.tilesetInfo?.tile_size ?? 1024;\n\n            const { valid, errorMessages } = validateTrack(this.options.spec);\n\n            if (!valid) {\n                console.warn('The specification of the following track is invalid', errorMessages, this.options.spec);\n            }\n\n            // Graphics for highlighting visual elements under the cursor\n            this.pMain.addChild(this.pMouseHover);\n            this.pMain.addChild(this.pMouseSelection);\n\n            // Enable click event\n            this.pMask.interactive = true;\n            this.mRangeBrush = new LinearBrushModel(this.#gBrush, HGC.libraries, this.options.spec.style?.brush);\n            this.mRangeBrush.on('brush', this.#onRangeBrush.bind(this));\n\n            this.pMask.on('mousedown', (e: PIXI.InteractionEvent) => {\n                const { x, y } = e.data.getLocalPosition(this.pMain);\n                this.#onMouseDown(x, y, e.data.originalEvent.altKey);\n            });\n            this.pMask.on('mouseup', (e: PIXI.InteractionEvent) => {\n                const { x, y } = e.data.getLocalPosition(this.pMain);\n                this.#onMouseUp(x, y);\n            });\n            this.pMask.on('mousemove', (e: PIXI.InteractionEvent) => {\n                const { x } = e.data.getLocalPosition(this.pMain);\n                this.#onMouseMove(x);\n            });\n            this.pMask.on('mouseout', this.#onMouseOut.bind(this));\n            this.flipText = this.options.spec.orientation === 'vertical';\n\n            // Remove a mouse graphic if created by a parent, and draw ourselves.\n            // See https://github.com/higlass/higlass/blob/38f0c4415f0595c3b9d685a754d6661dc9612f7c/app/scripts/utils/show-mouse-position.js#L28\n            if (this.hideMousePosition) {\n                this.hideMousePosition();\n                this.hideMousePosition = undefined;\n            }\n            if (this.options?.showMousePosition && !this.hideMousePosition) {\n                this.hideMousePosition = HGC.utils.showMousePosition(\n                    this,\n                    Is2DTrack(this.getResolvedTracks()[0]),\n                    this.isShowGlobalMousePosition()\n                );\n            }\n\n            // We do not use HiGlass' trackNotFoundText\n            this.pLabel.removeChild(this.trackNotFoundText);\n\n            this.#loadingText.anchor.x = 1;\n            this.#loadingText.anchor.y = 1;\n            this.pLabel.addChild(this.#loadingTextBg);\n            this.pLabel.addChild(this.#loadingText);\n\n            // This improves the arc/link rendering performance\n            HGC.libraries.PIXI.GRAPHICS_CURVES.adaptive = this.options.spec.style?.enableSmoothPath ?? false;\n            if (HGC.libraries.PIXI.GRAPHICS_CURVES.adaptive) {\n                HGC.libraries.PIXI.GRAPHICS_CURVES.maxLength = 1;\n                HGC.libraries.PIXI.GRAPHICS_CURVES.maxSegments = 2048 * 10;\n            }\n        }\n\n        /* *\n         *\n         *  Rendering Cycle Methods\n         *\n         * */\n\n        /**\n         * Draw all tiles from the bottom. Called from TiledPixiTrack constructor, so all methods called must be\n         * public. https://github.com/higlass/higlass/blob/387a03e877dcfa4c2cfeabc0869375b58c0b362d/app/scripts/TiledPixiTrack.js#L216\n         * Overrides draw() in BarTrack.\n         * This means some class properties can be still `undefined`.\n         */\n        override draw() {\n            if (PRINT_RENDERING_CYCLE) console.warn('draw()');\n            this.clearMouseEventData();\n            this.textsBeingUsed = 0;\n            this.pMouseHover?.clear();\n\n            const processTilesAndDraw = () => {\n                // Should we force to process all tiles?\n                // For BAM, yes, since all tiles are stored in a single tile and visible tiles had been changed.\n                const isBamDataFetcher = this.dataFetcher instanceof BamDataFetcher;\n\n                // Preprocess all tiles at once so that we can share scales across tiles.\n                this.processAllTiles(isBamDataFetcher);\n\n                // This function calls `drawTile` on each tile.\n                super.draw();\n\n                // Record tiles so that we ignore loading same tiles again\n                this.prevVisibleAndFetchedTiles = this.visibleAndFetchedTiles();\n            };\n\n            if (\n                isTabularDataFetcher(this.dataFetcher) &&\n                !isEqual(this.visibleAndFetchedTiles(), this.prevVisibleAndFetchedTiles)\n            ) {\n                this.updateTileAsync(this.dataFetcher as TabularDataFetcher<Datum>, processTilesAndDraw);\n            } else {\n                processTilesAndDraw();\n            }\n\n            // Based on the updated marks, update range selection\n            this.mRangeBrush?.drawBrush(true);\n            // Publish onNewTrack if this is the first draw\n            if (this.firstDraw) {\n                this.#publishOnNewTrack();\n                this.firstDraw = false;\n            }\n        }\n\n        /*\n         * Do whatever is necessary before rendering a new tile. This function is called from `receivedTiles()`.\n         * Overrides initTile in BarTrack\n         * (Refer to https://github.com/higlass/higlass/blob/54f5aae61d3474f9e868621228270f0c90ef9343/app/scripts/HorizontalLine1DPixiTrack.js#L50)\n         */\n        override initTile(tile: Tile) {\n            if (PRINT_RENDERING_CYCLE) console.warn('initTile(tile)');\n            // Since `super.initTile(tile)` prints warning, we call `drawTile` ourselves without calling\n            // `super.initTile(tile)`.\n            this.drawTile(tile);\n        }\n\n        override updateTile(/* tile: Tile */) {} // Never mind about this function for the simplicity.\n        override renderTile(/* tile: Tile */) {} // Never mind about this function for the simplicity.\n\n        /**\n         * Display a tile upon receiving a new one or when explicitly called by a developer, e.g., calling\n         * `this.draw()`. Overrides drawTile in BarTrack\n         */\n        override drawTile(tile: Tile) {\n            if (PRINT_RENDERING_CYCLE) console.warn('drawTile(tile)');\n\n            /**\n             * If we don't have info about the tile, we can't draw anything.\n             */\n            const tileInfo = this.#processedTileInfo[tile.tileId];\n            if (!tileInfo) {\n                // We do not have a track model prepared to visualize\n                return;\n            }\n\n            /**\n             * Add a copy of the track scale to the tile. The tile needs its own scale because we will use it to\n             * determine how much the tile has been stretched (if we are stretching the graphics)\n             */\n            if (!tile.drawnAtScale) {\n                // This is the first time this tile is being drawn\n                tile.drawnAtScale = this._xScale.copy();\n            }\n\n            /**\n             * For certain types of marks and layouts (linear), we can stretch the graphics to avoid redrawing\n             * This is much more performant than redrawing everything at every frame\n             */\n            const [graphicsXScale, graphicsXPos] = this.getXScaleAndOffset(tile.drawnAtScale);\n            const isFirstRender = graphicsXScale === 1; // The graphicsXScale is 1 if first time the tile is being drawn\n            if (!this.#isTooStretched(graphicsXScale) && this.#hasStretchableGraphics() && !isFirstRender) {\n                // Stretch the graphics\n                tile.graphics.scale.x = graphicsXScale;\n                tile.graphics.position.x = graphicsXPos;\n                return;\n            }\n\n            /**\n             * If we can't stretch the graphics, we need to redraw everything!\n             */\n\n            // We need the tile scale to match the scale of the track\n            tile.drawnAtScale = this._xScale.copy();\n            // Clear the graphics and redraw everything\n            tile.graphics?.clear();\n            tile.graphics?.removeChildren();\n\n            // This is only to render embellishments only once.\n            // TODO: Instead of rendering and removing for every tiles, render pBorder only once\n            this.pBackground.clear();\n            this.pBackground.removeChildren();\n            this.pBorder.clear();\n            this.pBorder.removeChildren();\n            this.displayedLegends = [];\n\n            // Because a single tile contains one track or multiple tracks overlaid, we draw marks and embellishments\n            // for each GoslingTrackModel\n            tileInfo.goslingModels.forEach((model: GoslingTrackModel) => {\n                // check visibility condition\n                const trackWidth = this.dimensions[0];\n                const zoomLevel = this._xScale.invert(trackWidth) - this._xScale.invert(0);\n\n                if (!model.trackVisibility({ zoomLevel })) {\n                    return;\n                }\n                drawPreEmbellishment(HGC, this, tile, model, this.options.theme);\n                drawMark(HGC, this, tile, model);\n                drawPostEmbellishment(HGC, this, tile, model, this.options.theme);\n            });\n\n            this.forceDraw();\n        }\n\n        /**\n         * Render this track again using a new option when a user changed the option. Overrides rerender in BarTrack.\n         */\n        override rerender(newOptions: GoslingTrackOptions) {\n            if (PRINT_RENDERING_CYCLE) console.warn('rerender(options)');\n            this.options = newOptions;\n\n            if (this.options.spec.layout === 'circular') {\n                // TODO (May-27-2022): remove the following line when we support a circular brush.\n                // If the spec is changed to use the circular layout, we remove the current linear brush\n                // because circular brush is not supported.\n                this.mRangeBrush.remove();\n            }\n            this.getResolvedTracks(true); // force update\n            this.clearMouseEventData();\n            this.textsBeingUsed = 0;\n\n            this.processAllTiles(true);\n            this.draw();\n            this.forceDraw();\n        }\n        /**\n         * Clears MouseEventModel from each GoslingTrackModel. Must be a public method because it is called from draw()\n         */\n        clearMouseEventData() {\n            this.visibleAndFetchedGoslingModels().forEach(model => model.getMouseEventModel().clear());\n        }\n        /**\n         * Collect all gosling models that correspond to the tiles that are both visible and fetched.\n         */\n        visibleAndFetchedGoslingModels() {\n            return this.visibleAndFetchedTiles().flatMap(\n                tile => this.#processedTileInfo[tile.tileId]?.goslingModels ?? []\n            );\n        }\n\n        /**\n         * End of the rendering cycle. This function is called when the track is removed entirely.\n         */\n        override remove() {\n            super.remove();\n\n            if (this.gLegend) {\n                this.gLegend.remove();\n                this.gLegend = undefined;\n            }\n            this.mRangeBrush.remove();\n        }\n        /*\n         * Rerender all tiles when track size is changed. Overrides method in TiledPixiTrack\n         * (Refer to https://github.com/higlass/higlass/blob/54f5aae61d3474f9e868621228270f0c90ef9343/app/scripts/PixiTrack.js#L186).\n         */\n        override setDimensions(newDimensions: [number, number]) {\n            if (PRINT_RENDERING_CYCLE) console.warn('setDimensions()');\n\n            super.setDimensions(newDimensions); // This simply updates `this._xScale` and `this._yScale`\n\n            this.mRangeBrush.setSize(newDimensions[1]);\n        }\n\n        /**\n         * Record new position.\n         */\n        override setPosition(newPosition: [number, number]) {\n            super.setPosition(newPosition); // This simply changes `this.position`\n\n            [this.pMain.position.x, this.pMain.position.y] = this.position;\n\n            this.mRangeBrush.setOffset(...newPosition);\n        }\n\n        /**\n         * A function to redraw this track. Typically called when an asynchronous event occurs (i.e. tiles loaded)\n         * (Refer to https://github.com/higlass/higlass/blob/54f5aae61d3474f9e868621228270f0c90ef9343/app/scripts/TiledPixiTrack.js#L71)\n         */\n        forceDraw() {\n            this.animate();\n        }\n\n        /**\n         * Called when location or zoom level has been changed by click-and-drag interaction\n         * (https://github.com/higlass/higlass/blob/54f5aae61d3474f9e868621228270f0c90ef9343/app/scripts/HorizontalLine1DPixiTrack.js#L215)\n         * For brushing, refer to https://github.com/higlass/higlass/blob/caf230b5ee41168ea491572618612ac0cc804e5a/app/scripts/HeatmapTiledPixiTrack.js#L1493\n         */\n        override zoomed(newXScale: ScaleLinear<number, number>, newYScale: ScaleLinear<number, number>) {\n            if (PRINT_RENDERING_CYCLE) console.warn('zoomed()');\n\n            const range = this.mRangeBrush.getRange();\n            this.mRangeBrush.updateRange(\n                range ? [newXScale(this._xScale.invert(range[0])), newXScale(this._xScale.invert(range[1]))] : null\n            );\n\n            this.xScale(newXScale);\n            this.yScale(newYScale);\n\n            this.refreshTiles();\n            this.draw();\n            this.forceDraw();\n\n            // Publish the new genomic axis domain\n            const genomicRange = newXScale\n                .domain()\n                .map(absPos => getRelativeGenomicPosition(absPos, this.#assembly, true)) as [\n                GenomicPosition,\n                GenomicPosition\n            ];\n            publish('location', {\n                id: context.viewUid,\n                genomicRange: genomicRange\n            });\n        }\n\n        /**\n         * This is how the mask gets drawn. Overrides method in PixiTrack.\n         * Compared to the method in PixiTrack, this method draws a circular mask when the layout is circular.\n         * @param position\n         * @param dimensions\n         */\n        override setMask(position: [number, number], dimensions: [number, number]) {\n            this.pMask.clear();\n            this.pMask.beginFill();\n\n            if (this.options.spec.layout === 'circular') {\n                /**\n                 * If the layout is circular, we want the mask to be circular as well.\n                 * Circular layout have multiple tracks on top of each other so if the mask is not circular, click\n                 * events will be triggered only on the top track.\n                 */\n                const [x, y] = this.position;\n                const [width, height] = this.dimensions;\n                const cx = x + width / 2.0;\n                const cy = y + height / 2.0;\n                const outerRadius = this.options.spec.outerRadius!;\n                this.pMask.drawCircle(cx, cy, outerRadius);\n            } else {\n                // Normal rectangular mask. This is what is done in PixiTrack\n                this.pMask.drawRect(position[0], position[1], dimensions[0], dimensions[1]);\n            }\n            this.pMask.endFill();\n        }\n\n        /* *\n         *\n         *  Tile and data processing methods\n         *\n         * */\n\n        /**\n         * Gets all tiles and generates tabular data and GoslingTrackModels for each tile. Called by this.draw(), so\n         * this method must be public.\n         * @param force if true then tabular data gets regenerated\n         */\n        processAllTiles(force = false) {\n            this.tileSize = this.tilesetInfo?.tile_size ?? 1024;\n\n            const tiles = this.visibleAndFetchedTiles();\n\n            // generated tabular data\n            tiles.forEach(tile => this.#generateTabularData(tile, force));\n\n            // combine tabular data to the first tile if needed\n            this.combineAllTilesIfNeeded();\n\n            // apply data transforms to the tabular data and generate track models\n            const models = tiles.flatMap(tile => this.transformDataAndCreateModels(tile));\n\n            shareScaleAcrossTracks(models);\n\n            const flatTileData = ([] as Datum[]).concat(...models.map(d => d.data()));\n            if (flatTileData.length !== 0) {\n                this.options.siblingIds.forEach(id => publish('rawData', { id, data: flatTileData }));\n            }\n        }\n\n        /**\n         * This is currently for testing the new way of rendering visual elements. Called by this.draw()\n         */\n        async updateTileAsync<T extends Datum>(tabularDataFetcher: TabularDataFetcher<T>, callback: () => void) {\n            if (!this.tilesetInfo) return;\n\n            const tiles = this.visibleAndFetchedTiles();\n            const tabularData = await tabularDataFetcher.getTabularData(Object.values(tiles).map(x => x.remoteId));\n            const tilesetInfo = this.tilesetInfo;\n            tiles.forEach((tile, i) => {\n                if (i === 0) {\n                    const [refTile] = HGC.utils.trackUtils.calculate1DVisibleTiles(tilesetInfo, this._xScale);\n                    tile.tileData.zoomLevel = refTile[0];\n                    tile.tileData.tilePos = [refTile[1], refTile[1]];\n                    (tile.tileData as TabularTileData).tabularData = tabularData;\n                } else {\n                    (tile.tileData as TabularTileData).tabularData = [];\n                }\n            });\n\n            callback();\n        }\n\n        /**\n         * Overrides method in Tiled1DPixiTrack. It is called in the constructor, `super(context, options)`.\n         * So be aware to use defined variables.\n         */\n        override calculateVisibleTiles() {\n            if (!this.tilesetInfo) return;\n            if (isTabularDataFetcher(this.dataFetcher)) {\n                const tiles = HGC.utils.trackUtils.calculate1DVisibleTiles(this.tilesetInfo, this._xScale);\n                const maxTileWith =\n                    this.tilesetInfo.max_tile_width ?? this.dataFetcher.MAX_TILE_WIDTH ?? Number.MAX_SAFE_INTEGER;\n\n                for (const tile of tiles) {\n                    const { tileWidth } = this.getTilePosAndDimensions(tile[0], [tile[1], tile[1]]);\n                    this.forceDraw();\n                    if (tileWidth > maxTileWith) {\n                        return;\n                    }\n                }\n\n                this.setVisibleTiles(tiles);\n            } else {\n                if (!this.tilesetInfo) {\n                    // if we don't know anything about this dataset, no point in trying to get tiles\n                    return;\n                }\n\n                // calculate the zoom level given the scales and the data bounds\n                const zoomLevel = this.calculateZoomLevel();\n\n                if ('resolutions' in this.tilesetInfo) {\n                    const sortedResolutions = this.tilesetInfo.resolutions\n                        .map((x: number) => +x)\n                        .sort((a: number, b: number) => b - a);\n\n                    const xTiles = tileProxy.calculateTilesFromResolution(\n                        sortedResolutions[zoomLevel],\n                        this._xScale,\n                        this.tilesetInfo.min_pos[0],\n                        this.tilesetInfo.max_pos[0]\n                    );\n\n                    let yTiles: number[] | undefined;\n                    if (Is2DTrack(this.getResolvedTracks()[0])) {\n                        // it makes sense only when the y-axis is being used for a genomic field\n                        yTiles = tileProxy.calculateTilesFromResolution(\n                            sortedResolutions[zoomLevel],\n                            this._yScale,\n                            this.tilesetInfo.min_pos[0],\n                            this.tilesetInfo.max_pos[0]\n                        );\n                    }\n\n                    const tiles = GoslingTrackClass.#tilesToId(xTiles, yTiles, zoomLevel);\n\n                    this.setVisibleTiles(tiles);\n                } else {\n                    const xTiles = tileProxy.calculateTiles(\n                        zoomLevel,\n                        this.relevantScale(),\n                        this.tilesetInfo.min_pos[0],\n                        this.tilesetInfo.max_pos[0],\n                        this.tilesetInfo.max_zoom,\n                        this.tilesetInfo.max_width\n                    );\n\n                    let yTiles: number[] | undefined;\n                    if (Is2DTrack(this.getResolvedTracks()[0])) {\n                        // it makes sense only when the y-axis is being used for a genomic field\n                        yTiles = tileProxy.calculateTiles(\n                            zoomLevel,\n                            this._yScale,\n                            this.tilesetInfo.min_pos[1],\n                            this.tilesetInfo.max_pos[1],\n                            this.tilesetInfo.max_zoom,\n                            // @ts-expect-error what is max_width1?\n                            this.tilesetInfo.max_width1 ?? this.tilesetInfo.max_width\n                        );\n                    }\n\n                    const tiles = GoslingTrackClass.#tilesToId(xTiles, yTiles, zoomLevel);\n                    this.setVisibleTiles(tiles);\n                }\n            }\n        }\n        /**\n         * Convert tile positions to tile IDs\n         */\n        static #tilesToId(\n            xTiles: number[],\n            yTiles: number[] | undefined,\n            zoomLevel: number\n        ): [number, number][] | [number, number, number][] {\n            if (!yTiles) {\n                // this means only the `x` axis is being used\n                return xTiles.map(x => [zoomLevel, x]);\n            }\n            // this means both `x` and `y` axes are being used together\n            const tiles: [number, number, number][] = [];\n            xTiles.forEach(x => yTiles.forEach(y => tiles.push([zoomLevel, x, y])));\n            return tiles;\n        }\n\n        /**\n         * Get the tile's position in its coordinate system. Overrides method in Tiled1DPixiTrack.\n         */\n        override getTilePosAndDimensions(zoomLevel: number, tilePos: [number, number]) {\n            if (!this.tilesetInfo) {\n                throw Error('tilesetInfo not parsed');\n            }\n\n            if ('resolutions' in this.tilesetInfo) {\n                const sortedResolutions = this.tilesetInfo.resolutions\n                    .map((x: number) => +x)\n                    .sort((a: number, b: number) => b - a);\n\n                // A resolution specifies the number of BP per bin\n                const chosenResolution = sortedResolutions[zoomLevel];\n\n                const [xTilePos, yTilePos] = tilePos;\n\n                const tileWidth = chosenResolution * this.#binsPerTile;\n                const tileHeight = tileWidth;\n\n                const tileX = tileWidth * xTilePos;\n                const tileY = tileHeight * yTilePos;\n\n                return {\n                    tileX,\n                    tileY,\n                    tileWidth,\n                    tileHeight\n                };\n            } else {\n                const [xTilePos, yTilePos] = tilePos;\n\n                const minX = this.tilesetInfo.min_pos[0];\n\n                const minY = this.tilesetInfo.min_pos[1];\n\n                const tileWidth = this.tilesetInfo.max_width / 2 ** zoomLevel;\n                const tileHeight = this.tilesetInfo.max_width / 2 ** zoomLevel;\n\n                const tileX = minX + xTilePos * tileWidth;\n                const tileY = minY + yTilePos * tileHeight;\n\n                return {\n                    tileX,\n                    tileY,\n                    tileWidth,\n                    tileHeight\n                };\n            }\n        }\n        get #binsPerTile() {\n            let maybeValue: number | undefined;\n            if (this.tilesetInfo) {\n                maybeValue =\n                    'bins_per_dimension' in this.tilesetInfo\n                        ? this.tilesetInfo.bins_per_dimension\n                        : this.tilesetInfo.tile_size;\n            }\n            return maybeValue ?? 256;\n        }\n\n        /**\n         * Gets the indices of the visible data a tile. Overrides method in Tiled1DPixiTrack\n         */\n        override getIndicesOfVisibleDataInTile(tile: Tile): [number, number] {\n            const visible = this._xScale.range();\n\n            if (!this.tilesetInfo || !tile.tileData.tilePos || !('dense' in tile.tileData)) {\n                return [0, 0];\n            }\n\n            const { tileX, tileWidth } = this.getTilePosAndDimensions(tile.tileData.zoomLevel, tile.tileData.tilePos);\n\n            const tileXScale = HGC.libraries.d3Scale\n                .scaleLinear()\n                .domain([0, this.#binsPerTile])\n                .range([tileX, tileX + tileWidth]);\n\n            const start = Math.max(0, Math.round(tileXScale.invert(this._xScale.invert(visible[0]))));\n            const end = Math.min(\n                tile.tileData.dense.length,\n                Math.round(tileXScale.invert(this._xScale.invert(visible[1])))\n            );\n\n            return [start, end];\n        }\n\n        /**\n         * Overrides method in TiledPixiTrack\n         * @param loadedTiles\n         */\n        override receivedTiles(loadedTiles: Record<string, Tile>) {\n            // https://github.com/higlass/higlass/blob/38f0c4415f0595c3b9d685a754d6661dc9612f7c/app/scripts/TiledPixiTrack.js#L637\n            super.receivedTiles(loadedTiles);\n            // some items in this.fetching are removed\n            isTabularDataFetcher(this.dataFetcher) && this.drawLoadingCue();\n        }\n\n        /**\n         * Overrides method in TiledPixiTrack\n         */\n        override removeOldTiles() {\n            super.removeOldTiles(); // some items are added to this.fetching\n            isTabularDataFetcher(this.dataFetcher) && this.drawLoadingCue();\n        }\n\n        /**\n         * Combile multiple tiles into the last tile.\n         * This is sometimes necessary, for example, when applying a displacement algorithm to all tiles at once.\n         * Called by this.processAllTiles() so this method needs to be public.\n         */\n        combineAllTilesIfNeeded() {\n            if (!this.shouldCombineTiles()) return;\n\n            const tiles = this.visibleAndFetchedTiles();\n\n            if (!tiles || tiles.length <= 1) {\n                // Does not make sense to combine tiles\n                return;\n            }\n\n            // Increase the size of tiles by length\n            this.tileSize = (this.tilesetInfo?.tile_size ?? 1024) * tiles.length;\n\n            let merged: Datum[] = [];\n\n            tiles.forEach((tile, i) => {\n                const tileInfo = this.#processedTileInfo[tile.tileId];\n                if (tileInfo) {\n                    // Combine data\n                    merged = [...merged, ...tileInfo.tabularData];\n\n                    // Since we merge the data to the first one, skip rendering the rest\n                    tileInfo.skipRendering = i !== 0;\n                }\n            });\n\n            const firstTileInfo = this.#processedTileInfo[tiles[0].tileId];\n            firstTileInfo.tabularData = merged;\n\n            // Remove duplicated if any. Sparse tiles can have duplications.\n            if (firstTileInfo.tabularData[0]?.uid) {\n                firstTileInfo.tabularData = uniqBy(firstTileInfo.tabularData, 'uid');\n            }\n        }\n        /**\n         * Check whether tiles should be merged. Needs to be public since called by combineAllTilesIfNeeded()\n         */\n        shouldCombineTiles() {\n            const includesDisplaceTransform = hasDataTransform(this.options.spec, 'displace');\n            // we do not need to combine dense tiles (from multivec, vector, matrix)\n            const hasDenseTiles = () => {\n                const tiles = this.visibleAndFetchedTiles();\n                return tiles.length >= 1 && 'dense' in tiles[0].tileData;\n            };\n            // BAM data fetcher already combines the datasets;\n            const isBamDataFetcher = this.dataFetcher instanceof BamDataFetcher;\n            return includesDisplaceTransform && !hasDenseTiles() && !isBamDataFetcher;\n        }\n\n        /**\n         * Creates an array of SingleTracks if there are overlaid tracks.\n         * This method cannot be private because it is called by functions which are called by super.draw();\n         */\n        getResolvedTracks(forceUpdate = false) {\n            if (forceUpdate || !this.resolvedTracks) {\n                const tracks = resolveSuperposedTracks(this.options.spec).filter(t => t.mark !== 'brush');\n                // We will never need to access the values field in the data spec. It can be quite large which can degrade performance so we remove it.\n                tracks.forEach(track => {\n                    if ('values' in track.data) {\n                        track.data.values = [];\n                    }\n                });\n                this.resolvedTracks = tracks;\n            }\n            // Brushes are drawn by another plugin track.\n\n            return this.resolvedTracks;\n        }\n\n        /**\n         * Construct tabular data from a higlass tileset and a gosling track model.\n         */\n        #generateTabularData(tile: Tile, force = false) {\n            if (this.#processedTileInfo[tile.tileId] && !force) {\n                // we do not need to re-construct tabular data\n                return;\n            }\n\n            if (!tile.tileData.tilePos) {\n                // we do not have this information ready yet, i.e., cannot calculate `tileX`\n                return;\n            }\n\n            const tileInfo = initProcessedTileInfo();\n            const resolvedTracks = this.getResolvedTracks();\n\n            if (resolvedTracks.length === 0) {\n                // we do not have enough track to display\n                return [];\n            }\n\n            /* Create tabular data */\n            // The data spec is identical in all overlaid tracks, so we only need the first one.\n            const firstResolvedTrack = resolvedTracks[0];\n\n            if ('tabularData' in tile.tileData) {\n                // some data fetchers directly generates `tabularData`\n                tileInfo.tabularData = tile.tileData.tabularData;\n            } else {\n                // generate tabular data\n                const { tileX, tileY, tileWidth, tileHeight } = this.getTilePosAndDimensions(\n                    tile.tileData.zoomLevel,\n                    tile.tileData.tilePos\n                );\n\n                const sparse = 'length' in tile.tileData ? Array.from(tile.tileData) : [];\n\n                const extendedTileData = Object.assign({}, tile.tileData, {\n                    sparse,\n                    tileX,\n                    tileY,\n                    tileWidth,\n                    tileHeight,\n                    tileSize: this.tileSize\n                });\n\n                const tabularData = getTabularData(firstResolvedTrack, extendedTileData);\n                if (tabularData) {\n                    tileInfo.tabularData = tabularData;\n                }\n            }\n\n            this.#processedTileInfo[tile.tileId] = tileInfo;\n        }\n\n        /**\n         * Apply data transformation to each of the overlaid tracks and generate GoslingTrackModels.\n         */\n        transformDataAndCreateModels(tile: Tile) {\n            const tileInfo = this.#processedTileInfo[tile.tileId];\n\n            if (!tileInfo || tileInfo.skipRendering) {\n                // this probably means the tile data has been merged to another tile\n                // so, no need to create track models\n                return [];\n            }\n\n            // clear the array first\n            tileInfo.goslingModels = [];\n\n            const resolvedTracks = this.getResolvedTracks();\n            resolvedTracks.forEach(resolvedSpec => {\n                let tabularDataTransformed = Array.from(tileInfo.tabularData);\n                resolvedSpec.dataTransform?.forEach(t => {\n                    switch (t.type) {\n                        case 'filter':\n                            tabularDataTransformed = filterData(t, tabularDataTransformed);\n                            break;\n                        case 'concat':\n                            tabularDataTransformed = concatString(t, tabularDataTransformed);\n                            break;\n                        case 'replace':\n                            tabularDataTransformed = replaceString(t, tabularDataTransformed);\n                            break;\n                        case 'log':\n                            tabularDataTransformed = calculateData(t, tabularDataTransformed);\n                            break;\n                        case 'exonSplit':\n                            tabularDataTransformed = splitExon(t, tabularDataTransformed, resolvedSpec.assembly);\n                            break;\n                        case 'genomicLength':\n                            tabularDataTransformed = calculateGenomicLength(t, tabularDataTransformed);\n                            break;\n                        case 'svType':\n                            tabularDataTransformed = inferSvType(t, tabularDataTransformed);\n                            break;\n                        case 'coverage':\n                            tabularDataTransformed = aggregateCoverage(t, tabularDataTransformed, this._xScale.copy());\n                            break;\n                        case 'subjson':\n                            tabularDataTransformed = parseSubJSON(t, tabularDataTransformed);\n                            break;\n                        case 'displace':\n                            tabularDataTransformed = displace(t, tabularDataTransformed, this._xScale.copy());\n                            break;\n                    }\n                });\n\n                // TODO: Remove the following block entirely and use the `rawData` API in the Editor (June-02-2022)\n                // Send data preview to the editor so that it can be shown to users.\n                try {\n                    if (PubSub) {\n                        const NUM_OF_ROWS_IN_PREVIEW = 100;\n                        const numOrRows = tabularDataTransformed.length;\n                        PubSub.publish('data-preview', {\n                            id: context.viewUid,\n                            // TODO: Do we need the stringified version? Stringify of large JSON data is very slow.\n                            dataConfig: JSON.stringify({ data: resolvedSpec.data }),\n                            data:\n                                NUM_OF_ROWS_IN_PREVIEW > numOrRows\n                                    ? tabularDataTransformed\n                                    : sampleSize(tabularDataTransformed, NUM_OF_ROWS_IN_PREVIEW)\n                            // ...\n                        });\n                    }\n                } catch (e) {\n                    // ..\n                }\n\n                // Replace width and height information with the actual values for responsive encoding\n                const [trackWidth, trackHeight] = this.dimensions; // actual size of a track\n                const axisSize = IsXAxis(resolvedSpec) ? HIGLASS_AXIS_SIZE : 0; // Why the axis size must be added here?\n                const [w, h] = [trackWidth, trackHeight + axisSize];\n                const circularFactor = Math.min(w, h) / Math.min(resolvedSpec.width!, resolvedSpec.height!);\n                if (resolvedSpec.innerRadius) {\n                    resolvedSpec.innerRadius = resolvedSpec.innerRadius * circularFactor;\n                }\n                if (resolvedSpec.outerRadius) {\n                    resolvedSpec.outerRadius = resolvedSpec.outerRadius * circularFactor;\n                }\n                resolvedSpec.width = w;\n                resolvedSpec.height = h;\n\n                // Construct separate gosling models for individual tiles\n                const model = new GoslingTrackModel(resolvedSpec, tabularDataTransformed, this.options.theme);\n\n                // Add a track model to the tile object\n                tileInfo.goslingModels.push(model);\n            });\n\n            return tileInfo.goslingModels;\n        }\n\n        /* *\n         *\n         *  Mouse methods\n         *\n         * */\n\n        #onMouseDown(mouseX: number, mouseY: number, isAltPressed: boolean) {\n            // Record these so that we do not triger click event when dragged.\n            this.#mouseDownX = mouseX;\n            this.#mouseDownY = mouseY;\n\n            // Determine whether to activate a range brush\n            const mouseEvents = this.options.spec.experimental?.mouseEvents;\n            const rangeSelectEnabled = !!mouseEvents || (IsMouseEventsDeep(mouseEvents) && !!mouseEvents.rangeSelect);\n            this.#isRangeBrushActivated = rangeSelectEnabled && isAltPressed;\n\n            this.pMouseHover.clear();\n        }\n\n        #onMouseMove(mouseX: number) {\n            if (this.options.spec.layout === 'circular') {\n                // TODO: We do not yet support range selection on circular tracks\n                return;\n            }\n\n            if (this.#isRangeBrushActivated) {\n                this.mRangeBrush.updateRange([mouseX, this.#mouseDownX]).drawBrush().visible().disable();\n            }\n        }\n\n        #onMouseUp(mouseX: number, mouseY: number) {\n            // `trackClick` API\n            this.#publishTrackEvents('trackClick', mouseX, mouseY);\n\n            const mouseEvents = this.options.spec.experimental?.mouseEvents;\n            const clickEnabled = !!mouseEvents || (IsMouseEventsDeep(mouseEvents) && !!mouseEvents.click);\n            const isDrag = Math.sqrt((this.#mouseDownX - mouseX) ** 2 + (this.#mouseDownY - mouseY) ** 2) > 1;\n\n            if (!this.#isRangeBrushActivated && !isDrag) {\n                // Clicking outside the brush should remove the brush and the selection.\n                this.mRangeBrush.clear();\n                this.pMouseSelection.clear();\n            } else {\n                // Dragging ended, so enable adjusting the range brush\n                this.mRangeBrush.enable();\n            }\n\n            this.#isRangeBrushActivated = false;\n\n            if (!this.tilesetInfo) {\n                // Do not have enough information\n                return;\n            }\n\n            // `click` API\n            if (!isDrag && clickEnabled) {\n                // Identify the current position\n                const genomicPosition = getRelativeGenomicPosition(\n                    Math.floor(this._xScale.invert(mouseX)),\n                    this.#assembly\n                );\n\n                // Get elements within mouse\n                const capturedElements = this.#getElementsWithinMouse(mouseX, mouseY);\n\n                if (capturedElements.length !== 0) {\n                    this.options.siblingIds.forEach(id =>\n                        publish('click', {\n                            id,\n                            genomicPosition,\n                            data: capturedElements.map(d => d.value)\n                        })\n                    );\n                }\n            }\n        }\n\n        #onMouseOut() {\n            this.#isRangeBrushActivated = false;\n            document.body.style.cursor = 'default';\n            this.pMouseHover.clear();\n        }\n\n        /**\n         * From all tiles and overlaid tracks, collect element(s) that are withing a mouse position.\n         */\n        #getElementsWithinMouse(mouseX: number, mouseY: number) {\n            const models = this.visibleAndFetchedGoslingModels();\n\n            // TODO: `Omit` this properties in the schema of individual overlaid tracks.\n            // These should be defined only once for a group of overlaid traks (09-May-2022)\n            // See https://github.com/gosling-lang/gosling.js/issues/677\n            const mouseEvents = this.options.spec.experimental?.mouseEvents;\n            const multiHovering = IsMouseEventsDeep(mouseEvents) && mouseEvents.enableMouseOverOnMultipleMarks;\n            const idField = IsMouseEventsDeep(mouseEvents) && mouseEvents.groupMarksByField;\n\n            // Collect all mouse event data from tiles and overlaid tracks\n            const mergedCapturedElements: MouseEventData[] = models\n                .map(model => model.getMouseEventModel().findAll(mouseX, mouseY, true))\n                .flat();\n\n            if (!multiHovering) {\n                // Select only one on the top of a cursor\n                mergedCapturedElements.splice(1, mergedCapturedElements.length - 1);\n            }\n\n            // Iterate again to select sibling marks (e.g., entire glyphs)\n            if (mergedCapturedElements.length !== 0 && idField) {\n                const source = Array.from(mergedCapturedElements);\n                models.forEach(model => {\n                    const siblings = model.getMouseEventModel().getSiblings(source, idField);\n                    mergedCapturedElements.push(...siblings);\n                });\n            }\n\n            return mergedCapturedElements;\n        }\n\n        /**\n         * Call track events (e.g., `trackClick` or `trackMouseOver`) based on a mouse position and the track display area.\n         */\n        #publishTrackEvents(eventType: 'trackClick' | 'trackMouseOver', mouseX: number, mouseY: number) {\n            const [x, y] = this.position;\n            const [width, height] = this.dimensions;\n            if (this.options.spec.layout === 'circular') {\n                const cx = x + width / 2.0;\n                const cy = y + height / 2.0;\n                const innerRadius = this.options.spec.innerRadius!;\n                const outerRadius = this.options.spec.outerRadius!;\n                const startAngle = this.options.spec.startAngle!;\n                const endAngle = this.options.spec.endAngle!;\n                // Call the API function only when the mouse is positioned directly on the track display area\n                if (\n                    isPointInsideDonutSlice(\n                        [mouseX, mouseY],\n                        [width / 2.0, height / 2.0],\n                        [innerRadius, outerRadius],\n                        [startAngle, endAngle]\n                    )\n                ) {\n                    publish(eventType, {\n                        id: context.viewUid,\n                        spec: this.options.spec,\n                        shape: { x, y, width, height, cx, cy, innerRadius, outerRadius, startAngle, endAngle }\n                    });\n                }\n            } else {\n                publish(eventType, {\n                    id: context.viewUid,\n                    spec: this.options.spec,\n                    shape: { x, y, width, height }\n                });\n            }\n        }\n\n        #onRangeBrush(range: [number, number] | null, skipApiTrigger = false) {\n            this.pMouseSelection.clear();\n\n            if (range === null) {\n                // brush just removed\n                if (!skipApiTrigger) {\n                    publish('rangeSelect', { id: context.viewUid, genomicRange: null, data: [] });\n                }\n                return;\n            }\n\n            const models = this.visibleAndFetchedGoslingModels();\n            const [startX, endX] = range;\n\n            // Collect all mouse event data from tiles and overlaid tracks\n            let capturedElements: MouseEventData[] = models\n                .map(model => model.getMouseEventModel().findAllWithinRange(startX, endX, true))\n                .flat();\n\n            // Deselect marks if their siblings are not selected.\n            // e.g., if only one exon is selected in a gene, we do not select it.\n            const mouseEvents = this.options.spec.experimental?.mouseEvents;\n            const idField = IsMouseEventsDeep(mouseEvents) && mouseEvents.groupMarksByField;\n            if (capturedElements.length !== 0 && idField) {\n                models.forEach(model => {\n                    const siblings = model.getMouseEventModel().getSiblings(capturedElements, idField);\n                    const siblingIds = Array.from(new Set(siblings.map(d => d.value[idField])));\n                    capturedElements = capturedElements.filter(d => siblingIds.indexOf(d.value[idField]) === -1);\n                });\n            }\n\n            if (capturedElements.length !== 0) {\n                // selection effect graphics\n                const g = this.pMouseSelection;\n\n                if (this.options.spec.style?.select?.arrange !== 'behind') {\n                    // place on the top\n                    this.pMain.removeChild(g);\n                    this.pMain.addChild(g);\n                }\n\n                this.#highlightMarks(\n                    g,\n                    capturedElements,\n                    Object.assign({}, DEFAULT_MOUSE_EVENT_STYLE, this.options.spec.style?.select)\n                );\n            }\n\n            /* API call */\n            if (!skipApiTrigger) {\n                const genomicRange: [GenomicPosition, GenomicPosition] = [\n                    getRelativeGenomicPosition(Math.floor(this._xScale.invert(startX)), this.#assembly),\n                    getRelativeGenomicPosition(Math.floor(this._xScale.invert(endX)), this.#assembly)\n                ];\n\n                publish('rangeSelect', {\n                    id: context.viewUid,\n                    genomicRange,\n                    data: capturedElements.map(d => d.value)\n                });\n            }\n\n            this.forceDraw();\n        }\n\n        /**\n         * Highlight marks that are either mouse overed or selected.\n         */\n        #highlightMarks(\n            g: PIXI.Graphics,\n            marks: MouseEventData[],\n            style: {\n                stroke: string;\n                strokeWidth: number;\n                strokeOpacity: number;\n                color: string;\n                opacity: number;\n            }\n        ) {\n            g.lineStyle(\n                style.strokeWidth,\n                colorToHex(style.stroke),\n                style.strokeOpacity, // alpha\n                0.5 // alignment of the line to draw, (0 = inner, 0.5 = middle, 1 = outter)\n            );\n            g.beginFill(colorToHex(style.color), style.color === 'none' ? 0 : style.opacity);\n\n            marks.forEach(d => {\n                if (d.type === 'point') {\n                    const [x, y, r = 3] = d.polygon;\n                    g.drawCircle(x, y, r);\n                } else if (d.type === 'line') {\n                    g.moveTo(d.polygon[0], d.polygon[1]);\n                    flatArrayToPairArray(d.polygon).map(d => g.lineTo(d[0], d[1]));\n                } else {\n                    g.drawPolygon(d.polygon);\n                }\n            });\n        }\n\n        hideMousePosition?: () => void; // set in HorizontalTiled1DPixiTrack\n\n        /**\n         * Overrides method in HorizontalLine1DPixiTrack\n         */\n        override getMouseOverHtml(mouseX: number, mouseY: number) {\n            // `trackMouseOver` API\n            this.#publishTrackEvents('trackMouseOver', mouseX, mouseY);\n\n            if (this.#isRangeBrushActivated) {\n                // In the middle of drawing range brush.\n                return '';\n            }\n\n            if (!this.tilesetInfo) {\n                // Do not have enough information\n                return '';\n            }\n\n            this.pMouseHover.clear();\n\n            // Current position\n            const genomicPosition = getRelativeGenomicPosition(Math.floor(this._xScale.invert(mouseX)), this.#assembly);\n\n            // Get elements within mouse\n            const capturedElements = this.#getElementsWithinMouse(mouseX, mouseY);\n\n            // Change cursor\n            // https://developer.mozilla.org/en-US/docs/Web/CSS/cursor\n            if (capturedElements.length !== 0) {\n                document.body.style.cursor = 'pointer';\n            } else {\n                document.body.style.cursor = 'default';\n            }\n\n            if (capturedElements.length !== 0) {\n                const mouseEvents = this.options.spec.experimental?.mouseEvents;\n                const mouseOverEnabled = !!mouseEvents || (IsMouseEventsDeep(mouseEvents) && !!mouseEvents.mouseOver);\n                if (mouseOverEnabled) {\n                    // Display mouse over effects\n                    const g = this.pMouseHover;\n\n                    if (this.options.spec.style?.mouseOver?.arrange !== 'behind') {\n                        // place on the top\n                        this.pMain.removeChild(g);\n                        this.pMain.addChild(g);\n                    }\n\n                    this.#highlightMarks(\n                        g,\n                        capturedElements,\n                        Object.assign({}, DEFAULT_MOUSE_EVENT_STYLE, this.options.spec.style?.mouseOver)\n                    );\n\n                    // API call\n                    publish('mouseOver', {\n                        id: context.viewUid,\n                        genomicPosition,\n                        data: capturedElements.map(d => d.value)\n                    });\n                }\n\n                // Display a tooltip\n                const models = this.visibleAndFetchedGoslingModels();\n\n                const firstTooltipSpec = models\n                    .find(m => m.spec().tooltip && m.spec().tooltip?.length !== 0)\n                    ?.spec().tooltip;\n\n                if (firstTooltipSpec) {\n                    let content = firstTooltipSpec\n                        .map(d => {\n                            const rawValue = capturedElements[0].value[d.field];\n                            let value = rawValue;\n                            if (d.type === 'quantitative' && d.format) {\n                                value = HGC.libraries.d3Format.format(d.format)(+rawValue);\n                            } else if (d.type === 'genomic') {\n                                // e.g., chr1:204,133\n                                const { chromosome, position } = getRelativeGenomicPosition(+rawValue, this.#assembly);\n                                value = `${chromosome}:${HGC.libraries.d3Format.format(',')(position)}`;\n                            }\n\n                            return (\n                                '<tr>' +\n                                `<td style='padding: 4px 8px'>${d.alt ?? d.field}</td>` +\n                                `<td style='padding: 4px 8px'><b>${value}</b></td>` +\n                                '</tr>'\n                            );\n                        })\n                        .join('');\n\n                    content = `<table style='text-align: left; margin-top: 12px'>${content}</table>`;\n                    if (capturedElements.length > 1) {\n                        content +=\n                            `<div style='padding: 4px 8px; margin-top: 4px; text-align: center; color: grey'>` +\n                            `${capturedElements.length - 1} Additional Selections...` +\n                            '</div>';\n                    }\n                    return `<div>${content}</div>`;\n                }\n            }\n            return '';\n        }\n\n        /**\n         * Javscript subscription API methods (besides for mouse)\n         */\n\n        /**\n         * Publishes track information. Triggered when track gets created\n         */\n        #publishOnNewTrack() {\n            publish('onNewTrack', {\n                id: context.viewUid\n            });\n        }\n\n        /* *\n         *\n         *  Other misc methods and overrides\n         *\n         * */\n\n        /**\n         * Returns the minimum in the visible area (not visible tiles).\n         * Overrides method in Tiled1DPixiTrack\n         */\n        override minVisibleValue() {\n            return 0;\n        }\n\n        /**\n         * Returns the maximum in the visible area (not visible tiles).\n         * Overrides method in Tiled1DPixiTrack.\n         */\n        override maxVisibleValue() {\n            return 0;\n        }\n        /**\n         * Overrides method in PixiTrack. SVG export is not supported.\n         */\n        override exportSVG(): never {\n            throw new Error('exportSVG() not supported for gosling-track');\n        }\n\n        /**\n         * Show visual cue during waiting for visualizations being rendered. Also called by data fetchers\n         */\n        drawLoadingCue() {\n            if (this.fetching.size) {\n                const margin = 6;\n\n                const text = `Fetching... ${Array.from(this.fetching).join(' ')}`;\n                this.#loadingText.text = text;\n                this.#loadingText.x = this.position[0] + this.dimensions[0] - margin / 2.0;\n                this.#loadingText.y = this.position[1] + this.dimensions[1] - margin / 2.0;\n\n                // Show background\n                const metric = HGC.libraries.PIXI.TextMetrics.measureText(text, this.#loadingTextStyleObj);\n                const { width: w, height: h } = metric;\n\n                this.#loadingTextBg.clear();\n                this.#loadingTextBg.lineStyle(1, colorToHex('grey'), 1, 0.5);\n                this.#loadingTextBg.beginFill(colorToHex('white'), 0.8);\n                this.#loadingTextBg.drawRect(\n                    this.position[0] + this.dimensions[0] - w - margin - 1,\n                    this.position[1] + this.dimensions[1] - h - margin - 1,\n                    w + margin,\n                    h + margin\n                );\n\n                this.#loadingText.visible = true;\n                this.#loadingTextBg.visible = true;\n            } else {\n                this.#loadingText.visible = false;\n                this.#loadingTextBg.visible = false;\n            }\n        }\n\n        /**\n         * Called in legend.ts\n         */\n        updateScaleOffsetFromOriginalSpec(\n            _renderingId: string,\n            scaleOffset: [number, number],\n            channelKey: 'color' | 'stroke'\n        ) {\n            this.getResolvedTracks().map(spec => {\n                if (spec._renderingId === _renderingId) {\n                    const channel = spec[channelKey];\n                    if (IsChannelDeep(channel)) {\n                        channel.scaleOffset = scaleOffset;\n                    }\n                }\n            });\n        }\n\n        /**\n         * Called in legend.ts\n         */\n        shareScaleOffsetAcrossTracksAndTiles(scaleOffset: [number, number], channelKey: 'color' | 'stroke') {\n            const models = this.visibleAndFetchedGoslingModels();\n            models.forEach(d => {\n                const channel = d.spec()[channelKey];\n                if (IsChannelDeep(channel)) {\n                    channel.scaleOffset = scaleOffset;\n                }\n                const channelOriginal = d.originalSpec()[channelKey];\n                if (IsChannelDeep(channelOriginal)) {\n                    channelOriginal.scaleOffset = scaleOffset;\n                }\n            });\n        }\n\n        /**\n         * Used in drawTile()\n         * Checks if the track has marks which are stretchable. Stretching\n         * is not supported for circular layouts or 2D tracks\n         */\n        #hasStretchableGraphics() {\n            const hasStretchOption = this.options.spec.experimental?.stretchGraphics;\n            if (hasStretchOption === true) {\n                return true;\n            } else if (hasStretchOption === false) {\n                return false;\n            }\n            // The default behavior is that we stretch when stretching looks acceptable\n            const isFirstTrack1D = !Is2DTrack(this.getResolvedTracks()[0]);\n            const isNotCircularLayout = this.options.spec.layout !== 'circular';\n            const stretchableMarks = ['bar', 'line', 'rect', 'area'];\n            const hasStretchableMark = this.getResolvedTracks().reduce(\n                (acc, spec) => acc && stretchableMarks.includes(spec.mark),\n                true\n            );\n            const noMouseInteractions = !this.options.spec.experimental?.mouseEvents;\n\n            return isFirstTrack1D && isNotCircularLayout && hasStretchableMark && noMouseInteractions;\n        }\n\n        /**\n         * Used in drawTile()\n         * Checks if the tile Graphic is too stretched. If so, it returns true.\n         * @param stretchFactor The factor by which the tile is stretched\n         * @returns True if the tile is too stretched, false otherwise\n         */\n        #isTooStretched(stretchFactor: number) {\n            const defaultThreshold = 1.5;\n            const threshold = this.options.spec.experimental?.stretchGraphicsThreshold ?? defaultThreshold;\n            return stretchFactor > threshold || stretchFactor < 1 / threshold;\n        }\n    }\n    return new GoslingTrackClass();\n};\n\nexport default createPluginTrack(config, factory);\n","import { createPluginTrack, type PluginTrackFactory, type TrackConfig } from '../../core/utils/define-plugin-track';\nimport { publish } from '../../api/pubsub';\nimport { type DummyTrackStyle } from '@gosling-lang/gosling-schema';\n\ninterface DummyTrackOptions extends DummyTrackStyle {\n    title: string;\n    height: number;\n    width: number;\n}\n\nconst config: TrackConfig<DummyTrackOptions> = {\n    type: 'dummy-track',\n    defaultOptions: {\n        height: 0, // default height gets set in when spec is preprocessed\n        width: 0, // default width gets set in when spec is preprocessed\n        title: '',\n        background: '#fff',\n        textFontSize: 12,\n        textFontWeight: 'normal',\n        textStroke: '#000',\n        textStrokeWidth: 0.1,\n        outline: '#fff'\n    }\n};\n\nconst factory: PluginTrackFactory<never, DummyTrackOptions> = (HGC, context, options) => {\n    // Services\n    const { SVGTrack } = HGC.tracks;\n\n    class DummyTrackClass extends SVGTrack<typeof options> {\n        constructor() {\n            super(context, options);\n            this.#drawBackground();\n            this.#drawText();\n            publish('onNewTrack', {\n                id: context.viewUid\n            });\n        }\n\n        #drawBackground() {\n            this.gMain\n                .append('rect')\n                .attr('fill', options.background)\n                .attr('x', 0)\n                .attr('y', 0)\n                .attr('width', options.width)\n                .attr('height', options.height)\n                .style('stroke', options.outline);\n        }\n        /**\n         * Draws the title of the dummy track\n         */\n        #drawText() {\n            this.gMain\n                .append('text')\n                .attr('x', options.width / 2)\n                .attr('y', (options.height + options.textFontSize!) / 2)\n                .style('text-anchor', 'middle')\n                .style('font-size', `${options.textFontSize}px`)\n                .style('font-weight', options.textFontWeight)\n                .style('stroke', options.textStroke)\n                .style('stroke-width', options.textStrokeWidth)\n                .text(options.title);\n        }\n    }\n\n    return new DummyTrackClass();\n};\n\nexport default createPluginTrack(config, factory);\n","// @ts-ignore\nimport higlassRegister from 'higlass-register';\n// @ts-ignore\nimport { TextTrack } from 'higlass-text';\nimport { AxisTrack } from '@gosling-lang/gosling-genomic-axis';\nimport { BrushTrack } from '@gosling-lang/gosling-brush';\nimport { GoslingTrack } from '@gosling-lang/gosling-track';\nimport { DummyTrack } from '@gosling-lang/dummy-track';\nimport * as dataFetchers from '@data-fetchers';\n\nlet once = false;\n\n/**\n * Register plugin tracks and data fetchers to HiGlass. This is necessary for the first time before using Gosling.js.\n */\nexport function init() {\n    if (once) return;\n\n    /**\n     * Register a linear Gosling.js track to HiGlassComponent\n     */\n    higlassRegister({\n        name: 'GoslingTrack',\n        track: GoslingTrack,\n        config: GoslingTrack.config\n    });\n\n    /**\n     * Register a 2D Gosling.js track to HiGlassComponent\n     */\n    higlassRegister({\n        name: 'Gosling2DTrack',\n        track: GoslingTrack,\n        config: {\n            ...GoslingTrack.config,\n            type: 'gosling-2d-track',\n            orientation: '2d'\n        }\n    });\n\n    /**\n     * Register an axis plugin track to HiGlassComponent\n     */\n    higlassRegister({\n        name: 'AxisTrack',\n        track: AxisTrack,\n        config: AxisTrack.config\n    });\n\n    /**\n     * Register a higlass-text plugin track to HiGlassComponent\n     */\n    higlassRegister({\n        name: 'TextTrack',\n        track: TextTrack,\n        config: TextTrack.config\n    });\n\n    /**\n     * Register a brush plugin track to HiGlassComponent\n     */\n    higlassRegister({\n        name: 'BrushTrack',\n        track: BrushTrack,\n        config: BrushTrack.config\n    });\n\n    /**\n     * Register a dummy plugin track to HiGlassComponent\n     */\n    higlassRegister({\n        name: 'DummyTrack',\n        track: DummyTrack,\n        config: DummyTrack.config\n    });\n\n    /**\n     * Register data fetchers to HiGlassComponent\n     */\n    for (const dataFetcher of Object.values(dataFetchers)) {\n        const { config } = dataFetcher;\n        higlassRegister({ dataFetcher, config }, { pluginType: 'dataFetcher' });\n    }\n\n    once = true;\n}\n","import type { MultipleViews, CommonViewDef, GoslingSpec, Track, SingleView } from '@gosling-lang/gosling-schema';\nimport { Is2DTrack, IsDummyTrack, IsOverlaidTrack, IsXAxis, IsYAxis } from '@gosling-lang/gosling-schema';\nimport { HIGLASS_AXIS_SIZE } from './higlass-model';\nimport {\n    DEFAULT_CIRCULAR_VIEW_PADDING,\n    DEFAULT_INNER_RADIUS_PROP,\n    DEFAULT_VIEW_SPACING,\n    DEWFAULT_TITLE_PADDING_ON_TOP_AND_BOTTOM\n} from './defaults';\nimport { resolveSuperposedTracks } from '../core/utils/overlay';\nimport { traverseTracksAndViews, traverseViewArrangements } from './spec-preprocess';\nimport type { CompleteThemeDeep } from '../core/utils/theme';\n\nexport interface Size {\n    width: number;\n    height: number;\n}\n\n/**\n * Position information of each track.\n */\nexport interface BoundingBox extends Size {\n    x: number;\n    y: number;\n}\n\n/**\n * Relative positioning of views, used in HiGlass view configs as `layout`.\n */\nexport interface RelativePosition {\n    w: number;\n    h: number;\n    x: number;\n    y: number;\n}\n\n/**\n * Track information for its arrangement.\n */\nexport interface TrackInfo {\n    track: Track;\n    boundingBox: BoundingBox;\n    layout: RelativePosition;\n}\n\n/**\n * Return the size of entire visualization.\n * @param trackInfos\n */\nexport function getBoundingBox(trackInfos: TrackInfo[]) {\n    let width = 0;\n    let height = 0;\n\n    trackInfos.forEach(_ => {\n        const w = _.boundingBox.x + _.boundingBox.width;\n        const h = _.boundingBox.y + _.boundingBox.height;\n        if (height < h) {\n            height = h;\n        }\n        if (width < w) {\n            width = w;\n        }\n    });\n\n    return { width, height };\n}\n\n/**\n * Collect information of individual tracks including their size/position and specs\n * @param spec\n */\nexport function getRelativeTrackInfo(\n    spec: GoslingSpec,\n    theme: CompleteThemeDeep\n): {\n    trackInfos: TrackInfo[];\n    size: { width: number; height: number };\n} {\n    let trackInfos: TrackInfo[] = [] as TrackInfo[];\n\n    // Collect track information including spec, bounding boxes, and RGL' `layout`.\n    traverseAndCollectTrackInfo(spec, trackInfos); // RGL parameter (`layout`) is not deteremined yet since we do not know the entire size of vis yet.\n    // Get the size of entire visualization.\n    const size = getBoundingBox(trackInfos);\n\n    // Titles\n    if (spec.title || spec.subtitle) {\n        // If title and/or subtitle presents, offset the y position by title/subtitle size\n        const titleHeight =\n            (spec.title ? (theme.root.titleFontSize ?? 18) + DEWFAULT_TITLE_PADDING_ON_TOP_AND_BOTTOM : 0) +\n            (spec.subtitle ? (theme.root.subtitleFontSize ?? 14) + DEWFAULT_TITLE_PADDING_ON_TOP_AND_BOTTOM : 0);\n        const marginBottom = 4;\n\n        size.height += titleHeight + marginBottom;\n\n        // !! The total height should be multiples of 8. Refer to `getBoundingBox()`\n        size.height = size.height + (8 - (size.height % 8));\n\n        // Offset all non-title tracks.\n        trackInfos.forEach(_ => {\n            _.boundingBox.y += titleHeight + marginBottom;\n        });\n\n        // Add a title track.\n        trackInfos = [\n            {\n                track: getTextTrack({ width: size.width, height: titleHeight }, spec.title, spec.subtitle),\n                boundingBox: { x: 0, y: 0, width: size.width, height: titleHeight },\n                layout: { x: 0, y: 0, w: 12, h: (titleHeight / size.height) * 12.0 }\n            },\n            ...trackInfos\n        ];\n    } else {\n        // !! The total height should be multiples of 8. Refer to `getBoundingBox()`\n        size.height = size.height + (8 - (size.height % 8));\n    }\n\n    const pixelPreciseMarginPadding = !(typeof spec.responsiveSize !== 'object'\n        ? spec.responsiveSize\n        : spec.responsiveSize.height);\n\n    // Calculate `layout`s for React Grid Layout (RGL).\n    trackInfos.forEach(_ => {\n        _.layout.x = (_.boundingBox.x / size.width) * 12;\n        _.layout.w = (_.boundingBox.width / size.width) * 12;\n        // If we set `pixelPreciseMarginPadding` `true`, we need to use actual values for `y` and `height`\n        _.layout.y = pixelPreciseMarginPadding ? _.boundingBox.y : (_.boundingBox.y / size.height) * 12;\n        _.layout.h = pixelPreciseMarginPadding ? _.boundingBox.height : (_.boundingBox.height / size.height) * 12;\n    });\n\n    return { trackInfos, size };\n}\n\n/**\n * Visit all tracks and views in the Gosling spec to collect information of individual tracks, including their size, position, and spec.\n * @param spec\n * @param output\n * @param dx\n * @param dy\n * @param forceWidth\n * @param forceHeight\n * @param circularRootNotFound\n */\nfunction traverseAndCollectTrackInfo(\n    spec: GoslingSpec | SingleView,\n    output: TrackInfo[],\n    dx = 0,\n    dy = 0,\n    circularRootNotFound = true // A flag variable to find a root level of circular tracks/views\n) {\n    let cumWidth = 0;\n    let cumHeight = 0;\n\n    /* Parameters to determine if we need to combine all the children to show as a single circular visualization */\n    let allChildCircularLayout = true;\n    let traversedAtLeastOnce = false;\n    traverseTracksAndViews(spec, (tv: CommonViewDef) => {\n        traversedAtLeastOnce = true;\n        if (tv.layout !== 'circular') {\n            allChildCircularLayout = false;\n        }\n    });\n\n    let noChildConcatArrangement = true; // if v/hconcat is being used by children, circular visualizations should be adjacently placed.\n    traverseViewArrangements(spec, (a: MultipleViews) => {\n        if (a.arrangement === 'vertical' || a.arrangement === 'horizontal') {\n            noChildConcatArrangement = false;\n        }\n    });\n\n    const isThisCircularRoot =\n        circularRootNotFound &&\n        allChildCircularLayout &&\n        traversedAtLeastOnce &&\n        noChildConcatArrangement &&\n        (('views' in spec && (spec.arrangement === 'parallel' || spec.arrangement === 'serial')) || 'tracks' in spec);\n\n    const numTracksBeforeInsert = output.length;\n\n    if ('tracks' in spec) {\n        // following `traverseToFixSpecDownstream`, the width and height of each track are gaurenteed to be defined\n        const tracks = spec.tracks as (Track & { width: number; height: number })[];\n\n        if (spec.orientation === 'vertical') {\n            // This is a vertical view, so use the largest `height` of the tracks for this view.\n            cumHeight = Math.max(...tracks.map(d => d.height));\n            tracks.forEach((track, i, array) => {\n                if (getNumOfXAxes([track]) === 1) {\n                    track.width += HIGLASS_AXIS_SIZE;\n                }\n\n                track.height = cumHeight;\n\n                output.push({\n                    track,\n                    boundingBox: {\n                        x: dx + cumWidth,\n                        y: dy,\n                        width: track.width,\n                        height: cumHeight\n                    },\n                    layout: { x: 0, y: 0, w: 0, h: 0 } // Just put a dummy info here, this should be added after entire bounding box has been determined\n                });\n\n                if (array[i + 1] && array[i + 1].overlayOnPreviousTrack) {\n                    // do not add a height\n                } else {\n                    cumWidth += track.width;\n                    if (i !== array.length - 1) {\n                        cumWidth += spec.spacing !== undefined ? spec.spacing : 0;\n                    }\n                }\n            });\n        } else {\n            // This is a horizontal view, so use the largest `width` for this view.\n            cumWidth = Math.max(...tracks.map(d => d.width)); //forceWidth ? forceWidth : spec.tracks[0]?.width;\n            tracks.forEach((track, i, array) => {\n                // let scaledHeight = track.height;\n\n                if (getNumOfXAxes([track]) === 1) {\n                    track.height += HIGLASS_AXIS_SIZE;\n                }\n                const singleTrack = resolveSuperposedTracks(track);\n                if (singleTrack.length > 0 && Is2DTrack(singleTrack[0]) && getNumOfYAxes([track]) === 1) {\n                    // If this is a 2D track (e.g., matrix), we need to reserve a space for the y-axis track\n                    cumWidth += HIGLASS_AXIS_SIZE;\n                }\n\n                track.width = cumWidth;\n\n                output.push({\n                    track,\n                    boundingBox: {\n                        x: dx,\n                        y: dy + cumHeight,\n                        width: cumWidth,\n                        height: track.height\n                    },\n                    layout: { x: 0, y: 0, w: 0, h: 0 } // Just put a dummy info here, this should be added after entire bounding box has been determined\n                });\n\n                if (array[i + 1] && array[i + 1].overlayOnPreviousTrack) {\n                    // do not add a height\n                } else {\n                    cumHeight += track.height;\n                    if (i !== array.length - 1) {\n                        cumHeight += spec.spacing !== undefined ? spec.spacing : 0;\n                    }\n                }\n            });\n        }\n    } else {\n        // We did not reach a track definition, so continue traversing.\n\n        // We first calculate position and size of each view and track by considering it as if it uses a linear layout\n        if (spec.arrangement === 'parallel' || spec.arrangement === 'vertical') {\n            const spacing = spec.spacing !== undefined ? spec.spacing : DEFAULT_VIEW_SPACING;\n\n            spec.views.forEach((v, i, array) => {\n                const viewBB = traverseAndCollectTrackInfo(\n                    v,\n                    output,\n                    dx + (v.xOffset ?? 0),\n                    dy + (v.yOffset ?? 0) + cumHeight,\n                    !isThisCircularRoot && circularRootNotFound\n                );\n\n                if (cumWidth < (v.xOffset ?? 0) + viewBB.width) {\n                    cumWidth = (v.xOffset ?? 0) + viewBB.width;\n                }\n                if (i !== array.length - 1) {\n                    cumHeight += spacing;\n                }\n                cumHeight += (v.yOffset ?? 0) + viewBB.height;\n            });\n        } else if (spec.arrangement === 'serial' || spec.arrangement === 'horizontal') {\n            spec.views.forEach((v, i, array) => {\n                const spacing = spec.spacing !== undefined ? spec.spacing : DEFAULT_VIEW_SPACING;\n\n                // If so, we do not want to put large between-gap.\n                // spacing *= (spec.arrangement === 'serial' && spec.layout === 'circular' ? 0.2 : 1);\n\n                const viewBB = traverseAndCollectTrackInfo(\n                    v,\n                    output,\n                    dx + (v.xOffset ?? 0) + cumWidth,\n                    dy + (v.yOffset ?? 0),\n                    !isThisCircularRoot && circularRootNotFound\n                );\n\n                if (cumHeight < (v.xOffset ?? 0) + viewBB.height) {\n                    cumHeight = (v.xOffset ?? 0) + viewBB.height;\n                }\n                if (i !== array.length - 1) {\n                    cumWidth += spacing;\n                }\n                cumWidth += (v.xOffset ?? 0) + viewBB.width;\n            });\n        }\n    }\n\n    // If this is a root view that uses a circular layout, use the posiiton and size of views/tracks to calculate circular-specific parameters, such as outer/inner radius and start/end angle\n    if (isThisCircularRoot) {\n        const cTracks = output.slice(numTracksBeforeInsert);\n        const ifMultipleViews =\n            'views' in spec &&\n            (spec.arrangement === 'parallel' || spec.arrangement === 'serial') &&\n            spec.views.length > 1;\n\n        const SPACING = spec.spacing !== undefined ? spec.spacing : DEFAULT_VIEW_SPACING;\n        const PADDING = DEFAULT_CIRCULAR_VIEW_PADDING;\n        const INNER_RADIUS = spec.centerRadius !== undefined ? spec.centerRadius : DEFAULT_INNER_RADIUS_PROP;\n        const TOTAL_RADIUS = cumWidth / 2.0 + PADDING; // (cumWidth + cumHeight) / 2.0 / 2.0;\n        const TOTAL_RING_SIZE = TOTAL_RADIUS * (1 - INNER_RADIUS);\n\n        // const numXAxes = getNumOfXAxes(cTracks.map(info => info.track));\n\n        cTracks.forEach((t, i) => {\n            // at this time, circular dummy tracks are not supported, so we don't do anything here\n            if (IsDummyTrack(t.track)) {\n                return;\n            }\n            t.track.layout = 'circular';\n\n            t.track.outerRadius = TOTAL_RADIUS - PADDING - ((t.boundingBox.y - dy) / cumHeight) * TOTAL_RING_SIZE;\n            t.track.innerRadius =\n                TOTAL_RADIUS - PADDING - ((t.boundingBox.y + t.boundingBox.height - dy) / cumHeight) * TOTAL_RING_SIZE;\n\n            // in circular layouts, we place spacing in the origin as well\n            const spacingAngle = (SPACING / cumWidth) * 360;\n\n            // !!! Multiplying by (cumWidth - SPACING) / cumWidth) to rescale to exclude SPACING\n            t.track.startAngle =\n                spacingAngle + ((((t.boundingBox.x - dx) / cumWidth) * (cumWidth - SPACING)) / cumWidth) * 360;\n            t.track.endAngle =\n                ((((t.boundingBox.x + t.boundingBox.width - dx) / cumWidth) * (cumWidth - SPACING)) / cumWidth) * 360;\n            // t.track.startAngle = ((t.boundingBox.x - dx) / cumWidth) * 360;\n            // t.track.endAngle = ((t.boundingBox.x + t.boundingBox.width - dx) / cumWidth) * 360;\n\n            t.boundingBox.x = dx + (t.track.xOffset ?? 0);\n            t.boundingBox.y = dy + (t.track.yOffset ?? 0);\n\n            // Circular tracks share the same size and position since technically these tracks are being overlaid on top of the others\n            t.boundingBox.height = t.track.height = t.boundingBox.width = t.track.width = TOTAL_RADIUS * 2;\n\n            if (i !== 0) {\n                t.track.overlayOnPreviousTrack = true;\n            }\n\n            // !!! As circular tracks are not well supported now when parallelized or serialized, we do not support brush for now.\n            if (ifMultipleViews) {\n                if (IsOverlaidTrack(t.track)) {\n                    t.track._overlay = t.track._overlay.filter(o => o.mark !== 'brush');\n                }\n            }\n        });\n\n        cumHeight = TOTAL_RADIUS * 2;\n    }\n\n    // DEBUG\n    // console.log(output);\n\n    // Record assigned sizes of this view so that we can determine whether to use alternative responsive spec\n    spec._assignedWidth = cumWidth;\n    spec._assignedHeight = cumHeight;\n\n    return { x: dx, y: dy, width: cumWidth, height: cumHeight };\n}\n\nexport function getNumOfXAxes(tracks: Track[]): number {\n    return tracks.filter(t => IsXAxis(t)).length;\n}\n\nexport function getNumOfYAxes(tracks: Track[]): number {\n    return tracks.filter(t => IsYAxis(t)).length;\n}\n\n/**\n * Get a spec for a title track.\n * @param size\n * @param title\n * @param subtitle\n */\nconst getTextTrack = (size: Size, title?: string, subtitle?: string) => {\n    return JSON.parse(\n        JSON.stringify({\n            mark: 'header',\n            width: size.width,\n            height: size.height,\n            title,\n            subtitle\n        })\n    ) as Track;\n};\n","export function validTilesetUrl(url: string) {\n    if (!url.includes('tileset_info/?d=') || (!url.includes('https:') && !url.includes('http:'))) {\n        return false;\n    }\n    return true;\n}\n\nexport function parseServerAndTilesetUidFromUrl(url: string) {\n    if (!url.includes('tileset_info/?d=') || (!url.includes('https:') && !url.includes('http:'))) {\n        // TODO: Add regular expression to validate the format.\n        // console.warn(`Data url format is incorrect:${url}`);\n        return { server: undefined, tilesetUid: undefined };\n    }\n\n    const server = url.split('tileset_info/?d=')[0];\n    const tilesetUid = url.split('tileset_info/?d=')[1];\n    return { server, tilesetUid };\n}\n","import type { Track as HiGlassTrack } from '@gosling-lang/higlass-schema';\nimport { HiGlassModel, HIGLASS_AXIS_SIZE } from './higlass-model';\nimport { parseServerAndTilesetUidFromUrl } from '../core/utils';\nimport type { Track, Domain } from '@gosling-lang/gosling-schema';\nimport type { BoundingBox, RelativePosition } from './bounding-box';\nimport { resolveSuperposedTracks } from '../core/utils/overlay';\nimport { getGenomicChannelKeyFromTrack, getGenomicChannelFromTrack } from '../gosling-schema/validate';\nimport {\n    IsDataDeep,\n    IsChannelDeep,\n    IsDataDeepTileset,\n    Is2DTrack,\n    IsXAxis,\n    IsHiGlassMatrix,\n    getHiGlassColorRange,\n    IsDummyTrack\n} from '@gosling-lang/gosling-schema';\nimport { DEWFAULT_TITLE_PADDING_ON_TOP_AND_BOTTOM } from './defaults';\nimport type { CompleteThemeDeep } from '../core/utils/theme';\nimport { DEFAULT_TEXT_STYLE } from '../core/utils/text-style';\nimport type { GoslingToHiGlassIdMapper } from '../api/track-and-view-ids';\nimport type { UrlToFetchOptions } from '../core/gosling-component';\nimport { uuid } from '../core/utils/uuid';\n\n/**\n * Convert a gosling track into a HiGlass view and add it into a higlass model.\n */\nexport function goslingToHiGlass(\n    hgModel: HiGlassModel,\n    gosTrack: Track,\n    bb: BoundingBox,\n    layout: RelativePosition,\n    theme: Required<CompleteThemeDeep>,\n    idMapper: GoslingToHiGlassIdMapper,\n    urlToFetchOptions?: UrlToFetchOptions\n): HiGlassModel {\n    // TODO: check whether there are multiple track.data across superposed tracks\n    // ...\n\n    // Adds the dummy track to the HiGlass spec\n    if (IsDummyTrack(gosTrack)) {\n        hgModel.addDefaultView(gosTrack.id!).setDummyTrack(gosTrack).setLayout(layout);\n        return hgModel;\n    }\n    // we only look into the first resolved spec to get information, such as size of the track\n    const resolvedSpecs = resolveSuperposedTracks(gosTrack);\n    const firstResolvedSpec = resolvedSpecs[0];\n\n    // If missing, create a unique track ID that will be used as HiGlass view ID for caching\n    const trackId = firstResolvedSpec.id ?? uuid();\n    if (!firstResolvedSpec.id) {\n        firstResolvedSpec.id = trackId;\n    }\n\n    // Store the mapping between Gosling track ID and HiGlass view ID so that any lost track IDs\n    // can be recovered and used for JS APIs.\n    resolvedSpecs.forEach(spec => {\n        // if `id` is not defined, no need to store it in the table\n        if (spec.id) {\n            idMapper.addMapping(spec.id, trackId);\n        }\n    });\n\n    const assembly = firstResolvedSpec.assembly;\n\n    if (IsDataDeep(firstResolvedSpec.data)) {\n        let server, tilesetUid;\n\n        if (IsDataDeepTileset(firstResolvedSpec.data)) {\n            const parsed = parseServerAndTilesetUidFromUrl(firstResolvedSpec.data.url);\n            server = parsed.server;\n            tilesetUid = parsed.tilesetUid;\n        }\n\n        const genomicChannel = getGenomicChannelFromTrack(firstResolvedSpec);\n        const genomicChannelKey = getGenomicChannelKeyFromTrack(firstResolvedSpec);\n        const isXGenomic = genomicChannelKey === 'x' || genomicChannelKey === 'xe';\n        const xDomain = isXGenomic && IsChannelDeep(genomicChannel) ? (genomicChannel.domain as Domain) : undefined;\n        const yDomain =\n            Is2DTrack(firstResolvedSpec) && IsChannelDeep(firstResolvedSpec.y)\n                ? (firstResolvedSpec.y.domain as Domain)\n                : undefined;\n        const width =\n            bb.width -\n            (firstResolvedSpec.layout !== 'circular' &&\n            firstResolvedSpec.orientation === 'vertical' &&\n            IsXAxis(firstResolvedSpec)\n                ? HIGLASS_AXIS_SIZE\n                : 0);\n        const height =\n            bb.height -\n            (firstResolvedSpec.layout !== 'circular' &&\n            firstResolvedSpec.orientation === 'horizontal' &&\n            IsXAxis(firstResolvedSpec)\n                ? HIGLASS_AXIS_SIZE\n                : 0);\n        const hgTrack: HiGlassTrack = {\n            uid: `${trackId}-track`, // This is being used to cache the visualization\n            type: Is2DTrack(firstResolvedSpec) ? 'gosling-2d-track' : 'gosling-track',\n            server,\n            tilesetUid,\n            width,\n            height,\n            options: {\n                id: trackId,\n                siblingIds: idMapper.getSiblingGoslingIds(trackId),\n                /* Mouse hover position */\n                showMousePosition: firstResolvedSpec.layout === 'circular' ? false : theme.root.showMousePosition, // show mouse position only for linear tracks // TODO: or vertical\n                mousePositionColor: theme.root.mousePositionColor,\n                /* Track title */\n                name: firstResolvedSpec.layout === 'linear' ? firstResolvedSpec.title : ' ',\n                labelPosition: firstResolvedSpec.title\n                    ? theme.track.titleAlign === 'left'\n                        ? 'topLeft'\n                        : 'topRight'\n                    : 'none',\n                labelShowResolution: false,\n                labelColor: theme.track.titleColor,\n                labelBackgroundColor: theme.track.titleBackground,\n                labelBackgroundOpacity: 0.5, // TODO: Support `theme.track.titleBackgroundOpacity`\n                labelTextOpacity: 1,\n                labelLeftMargin: 1,\n                labelTopMargin: 1,\n                labelRightMargin: 0,\n                labelBottomMargin: 0,\n                // TODO: Use this eventually\n                // trackBorderWidth: firstResolvedSpec.style?.outlineWidth ?? 3,\n                // trackBorderColor: firstResolvedSpec.style?.outline ?? '#DBDBDB',\n                /* Others */\n                backgroundColor: 'transparent', // in this way, we can superpose multiple tracks\n                spec: { ...gosTrack },\n                theme\n            }\n        };\n\n        if (\n            firstResolvedSpec.data &&\n            IsDataDeep(firstResolvedSpec.data) &&\n            (firstResolvedSpec.data.type === 'csv' ||\n                firstResolvedSpec.data.type === 'json' ||\n                firstResolvedSpec.data.type === 'bigwig' ||\n                firstResolvedSpec.data.type === 'bam' ||\n                firstResolvedSpec.data.type === 'vcf' ||\n                firstResolvedSpec.data.type === 'gff' ||\n                firstResolvedSpec.data.type === 'bed' ||\n                // TODO: This is a hack to enable custom data fetchers\n                (firstResolvedSpec.data as any).useCustomDataFetcher)\n        ) {\n            const getFieldName = (c: 'x' | 'xe' | 'x1' | 'x1e') => {\n                const cDef = firstResolvedSpec[c];\n                return cDef && IsChannelDeep(cDef) ? cDef.field : undefined;\n            };\n            const xFields = {\n                x: getFieldName('x'),\n                xe: getFieldName('xe'),\n                x1: getFieldName('x1'),\n                x1e: getFieldName('x1e')\n            } as const;\n\n            // Check whether there are any URL specific fetch options\n            const urlFetchOptions =\n                ('url' in firstResolvedSpec.data && urlToFetchOptions?.[firstResolvedSpec.data.url]) || {};\n            const indexUrlFetchOptions =\n                ('indexUrl' in firstResolvedSpec.data && urlToFetchOptions?.[firstResolvedSpec.data.indexUrl]) || {};\n\n            // This object will be passed to the data fetchers\n            hgTrack.data = {\n                ...firstResolvedSpec.data,\n                ...xFields,\n                urlFetchOptions,\n                indexUrlFetchOptions,\n                // Additionally, add assembly, otherwise, a default genome build is used\n                assembly\n                // TODO: should look all sub tracks' `dataTransform` and apply OR operation.\n                // Add a data transformation spec so that the fetcher can properly sample datasets\n                // filter: (firstResolvedSpec as any).dataTransform?.filter((f: DataTransform) => f.type === 'filter')\n            };\n        }\n\n        // We use higlass 'heatmap' track instead of 'gosling-track' for rendering performance.\n        // HiGlass is really well-optimized for matrix visualization, and rendering it in Gosling\n        // instead makes the zooming interaction slow.\n        // See https://github.com/gosling-lang/gosling.js/pull/612#discussion_r771623844\n        if (IsHiGlassMatrix(firstResolvedSpec)) {\n            // By changing the track type, HiGlass uses its native heatmap track\n            hgTrack.type = 'heatmap';\n            const colorStr =\n                IsChannelDeep(firstResolvedSpec.color) && typeof firstResolvedSpec.color.range === 'string'\n                    ? firstResolvedSpec.color.range\n                    : 'viridis';\n            hgTrack.options.colorRange = getHiGlassColorRange(colorStr);\n            hgTrack.options.trackBorderWidth = firstResolvedSpec.style?.outlineWidth ?? theme.track.outlineWidth;\n            hgTrack.options.trackBorderColor = firstResolvedSpec.style?.outline ?? theme.track.outline;\n            hgTrack.options.extent = firstResolvedSpec.style?.matrixExtent ?? 'full';\n            hgTrack.options.colorbarPosition = (firstResolvedSpec.color as any)?.legend\n                ? hgTrack.options.extent === 'lower-left'\n                    ? 'bottomLeft'\n                    : 'topRight'\n                : 'hidden';\n        }\n\n        if (firstResolvedSpec.overlayOnPreviousTrack) {\n            hgModel\n                .setViewOrientation(firstResolvedSpec.orientation) // TODO: Orientation should be assigned to 'individual' views\n                .addTrackToCombined(hgTrack);\n        } else {\n            hgModel\n                .setViewOrientation(firstResolvedSpec.orientation) // TODO: Orientation should be assigned to 'individual' views\n                .setAssembly(assembly) // TODO: Assembly should be assigned to 'individual' views\n                .addDefaultView(trackId, assembly)\n                .setDomain(xDomain, yDomain ?? xDomain)\n                .adjustDomain(firstResolvedSpec.orientation, width, height)\n                .setMainTrack(hgTrack)\n                .addTrackSourceServers(server)\n                .setZoomFixed(firstResolvedSpec.static === true)\n                .setZoomLimits(firstResolvedSpec.zoomLimits ?? [1, null])\n                .setLayout(layout);\n        }\n\n        // determine the compactness type of an axis considering the size of a track\n        const getAxisNarrowType = (\n            c: 'x' | 'y',\n            orientation: 'horizontal' | 'vertical' = 'horizontal',\n            width: number,\n            height: number\n        ) => {\n            const narrowSizeThreshold = 400;\n            const narrowerSizeThreshold = 200;\n\n            if (orientation === 'horizontal') {\n                if ((c === 'x' && width <= narrowerSizeThreshold) || (c === 'y' && height <= narrowerSizeThreshold)) {\n                    return 'narrower';\n                } else if (\n                    (c === 'x' && width <= narrowSizeThreshold) ||\n                    (c === 'y' && height <= narrowSizeThreshold)\n                ) {\n                    return 'narrow';\n                } else {\n                    return 'regular';\n                }\n            } else {\n                if ((c === 'x' && height <= narrowerSizeThreshold) || (c === 'y' && width <= narrowerSizeThreshold)) {\n                    return 'narrower';\n                } else if (\n                    (c === 'x' && height <= narrowSizeThreshold) ||\n                    (c === 'y' && width <= narrowSizeThreshold)\n                ) {\n                    return 'narrow';\n                } else {\n                    return 'regular';\n                }\n            }\n        };\n\n        // check whether to show axis\n        ['x', 'y'].forEach(c => {\n            const channel = (firstResolvedSpec as any)[c];\n            if (\n                IsChannelDeep(channel) &&\n                'axis' in channel &&\n                channel.axis &&\n                channel.axis !== 'none' &&\n                channel.type === 'genomic'\n            ) {\n                const narrowType = getAxisNarrowType(c as any, gosTrack.orientation, bb.width, bb.height);\n                hgModel.setAxisTrack(channel.axis, narrowType, {\n                    id: `${trackId}-${channel.axis}-axis`,\n                    layout: firstResolvedSpec.layout,\n                    innerRadius:\n                        channel.axis === 'top'\n                            ? (firstResolvedSpec.outerRadius as number) - HIGLASS_AXIS_SIZE\n                            : firstResolvedSpec.innerRadius,\n                    outerRadius:\n                        channel.axis === 'top'\n                            ? firstResolvedSpec.outerRadius\n                            : (firstResolvedSpec.innerRadius as number) + HIGLASS_AXIS_SIZE,\n                    width: firstResolvedSpec.width,\n                    height: firstResolvedSpec.height,\n                    startAngle: firstResolvedSpec.startAngle,\n                    endAngle: firstResolvedSpec.endAngle,\n                    theme\n                });\n            }\n        });\n\n        hgModel.validateSpec(true);\n    } else if (firstResolvedSpec.mark === 'header') {\n        // `text` tracks are used to show title and subtitle of the views\n        hgModel.addDefaultView(`${trackId}-title`).setLayout(layout);\n        if (typeof firstResolvedSpec.title === 'string') {\n            hgModel.setTextTrack(\n                bb.width,\n                (theme.root.titleFontSize ?? 18) + DEWFAULT_TITLE_PADDING_ON_TOP_AND_BOTTOM,\n                firstResolvedSpec.title,\n                theme.root.titleColor,\n                theme.root.titleFontSize ?? 18,\n                theme.root.titleFontWeight,\n                theme.root.titleAlign,\n                theme.root.titleBackgroundColor,\n                theme.root.titleFontFamily ?? DEFAULT_TEXT_STYLE.fontFamily\n            );\n        }\n        if (typeof firstResolvedSpec.subtitle === 'string') {\n            hgModel.setTextTrack(\n                bb.width,\n                // TODO: better way to safely get the value when undefined?\n                (theme.root.subtitleFontSize ?? 14) + DEWFAULT_TITLE_PADDING_ON_TOP_AND_BOTTOM,\n                firstResolvedSpec.subtitle,\n                theme.root.subtitleColor,\n                theme.root.subtitleFontSize ?? 14,\n                theme.root.subtitleFontWeight,\n                theme.root.subtitleAlign,\n                theme.root.subtitleBackgroundColor,\n                theme.root.subtitleFontFamily ?? DEFAULT_TEXT_STYLE.fontFamily\n            );\n        }\n    }\n\n    // Uncomment the following code to test with specific HiGlass viewConfig\n    // hgModel.setExampleHiglassViewConfig();\n\n    return hgModel;\n}\n","import { IsChannelDeep } from '@gosling-lang/gosling-schema';\nimport type { HiGlassModel } from '../../compiler/higlass-model';\nimport { SUPPORTED_CHANNELS } from '../mark';\nimport { resolveSuperposedTracks } from './overlay';\n\n/**\n *\n */\nexport function getLinkingInfo(hgModel: HiGlassModel) {\n    const linkingInfo: {\n        layout: 'circular' | 'linear';\n        hgViewId: string;\n        linkId: string;\n        isBrush: boolean;\n        style: any;\n    }[] = [];\n\n    hgModel.spec().views.forEach(v => {\n        const hgViewId = v.uid;\n\n        // TODO: Better way to get view specifications?\n        // Get spec of a view\n        let spec = /* TODO: */ (v.tracks as any).center?.[0]?.contents?.[0]?.options?.spec;\n\n        if (!spec) {\n            // This means the orientation of this view is vertical, and spec might be positioned on the left\n            spec = /* TODO: */ (v.tracks as any).left?.[0]?.contents?.[0]?.options?.spec;\n            if (!spec) {\n                // in case the first one is the axis track\n                spec = /* TODO: */ (v.tracks as any).left?.[1]?.contents?.[0]?.options?.spec;\n            }\n        }\n\n        if (!hgViewId || !spec) return;\n\n        const resolved = resolveSuperposedTracks(spec);\n\n        resolved.forEach(spec => {\n            SUPPORTED_CHANNELS.forEach(cKey => {\n                const channel = spec[cKey];\n\n                if (IsChannelDeep(channel) && 'linkingId' in channel && channel.linkingId) {\n                    linkingInfo.push({\n                        layout: spec.layout === 'circular' ? 'circular' : 'linear',\n                        hgViewId,\n                        linkId: channel.linkingId,\n                        isBrush: spec.mark === 'brush',\n                        style: {\n                            color: (spec as any).color?.value,\n                            stroke: (spec as any).stroke?.value,\n                            strokeWidth: (spec as any).strokeWidth?.value,\n                            opacity: (spec as any).opacity?.value,\n                            startAngle: spec.startAngle,\n                            endAngle: spec.endAngle,\n                            innerRadius: spec.innerRadius,\n                            outerRadius: spec.outerRadius\n                        }\n                    });\n                    return;\n                }\n            });\n        });\n    });\n    return linkingInfo;\n}\n","import type { CommonTrackDef, CommonViewDef, GoslingSpec, PartialTrack, View } from '@gosling-lang/gosling-schema';\nimport { traverseTracksAndViews } from '../compiler/spec-preprocess';\n\n/**\n * A table that maps Gosling track IDs to HiGlass view IDs.\n */\nexport type IdTable = Record<string, string>;\n\n/**\n * Manage IDs of Gosling tracks and compiled HiGlass views.\n * The HiGlass view IDs correspond to the \"UIDs\" of HiGlass *views*,\n * which are used for calling HiGlass APIs internally in Gosling.js.\n * It is 1:1 or N:1 mapping between Gosling tracks IDs and HiGlass views IDs.\n * https://docs.higlass.io/view_config.html#uids\n */\nexport class GoslingToHiGlassIdMapper {\n    /** A mapping table between Gosling track IDs to HiGlass view IDs */\n    #table: IdTable = {};\n\n    addMapping(gtId: string, hvId: string) {\n        if (this.#table[gtId] && this.#table[gtId] !== hvId) {\n            console.warn(`The track ID ${gtId} already exists but overwriting with a different ID.`);\n        }\n        this.#table[gtId] = hvId;\n    }\n    getTable() {\n        return this.#table;\n    }\n    getGoslingIds() {\n        return Object.keys(this.#table);\n    }\n    getHiGlassId(gtId: string) {\n        return this.#table[gtId];\n    }\n    /**\n     * Get IDs of Gosling tracks that became the same HiGlass view.\n     * @param HiGlassId\n     * @returns\n     */\n    getSiblingGoslingIds(HiGlassId: string) {\n        return Object.entries(this.#table)\n            .filter(([, hvId]) => hvId === HiGlassId)\n            .map(([gtId]) => gtId);\n    }\n}\n\n/**\n * Find all unique IDs of 'views' in a Gosling spec and return them as an array.\n * @param spec\n * @returns\n */\nexport function getViewIds(spec: GoslingSpec | View | PartialTrack) {\n    const viewIds = new Set<string>();\n    if (spec.id) {\n        // root view\n        viewIds.add(spec.id);\n    }\n    traverseTracksAndViews(spec, subSpec => {\n        if ('views' in subSpec || 'tracks' in subSpec) {\n            // encountered a view\n            if (subSpec.id) {\n                // found a valid view id\n                viewIds.add(subSpec.id);\n            }\n        }\n    });\n    return Array.from(viewIds);\n}\n\n/**\n * Find all unique IDs of 'tracks' in a Gosling spec and return them as an array.\n * @param spec\n * @returns\n */\nexport function getTrackIds(spec: GoslingSpec | View | PartialTrack) {\n    const trackIds = new Set<string>();\n    traverseTracksAndViews(spec, subSpec => {\n        if (!('views' in subSpec) && !('tracks' in subSpec)) {\n            // encountered a track\n            if (subSpec.id) {\n                // found a valid track id\n                trackIds.add(subSpec.id);\n            }\n        }\n    });\n    return Array.from(trackIds);\n}\n\n/**\n * Get an internal spec using an ID of a track or a view. `undefined` if unfound.\n * @param spec\n * @returns\n */\nexport function getInternalSpecById(spec: GoslingSpec | View | PartialTrack, id: string) {\n    let internalSpec: CommonViewDef | CommonTrackDef | undefined;\n    if (spec.id === id) {\n        // root view\n        internalSpec = spec;\n    }\n    traverseTracksAndViews(spec, subSpec => {\n        if (subSpec.id === id) {\n            internalSpec = subSpec;\n        }\n    });\n    return internalSpec;\n}\n","import type { GoslingSpec, PartialTrack, TrackApiData, View } from '@gosling-lang/gosling-schema';\nimport { getInternalSpecById, getTrackIds, getViewIds } from '../api/track-and-view-ids';\n\n/**\n * This collect information of views by referring to the track information.\n * The information includes the bounding box of tracks.\n * @param spec\n * @param tracks\n * @returns\n */\nexport function getViewApiData(spec: GoslingSpec, tracks: TrackApiData[]) {\n    return getViewIds(spec).map(viewId => {\n        const internalSpec = getInternalSpecById(spec, viewId);\n        const trackIds = getTrackIds(internalSpec as View | PartialTrack);\n        const bb = {\n            x: Number.MAX_SAFE_INTEGER,\n            y: Number.MAX_SAFE_INTEGER,\n            xe: -Number.MAX_SAFE_INTEGER,\n            ye: -Number.MAX_SAFE_INTEGER\n        };\n        trackIds\n            .map(trackId => tracks.find(t => t.id === trackId))\n            .forEach(track => {\n                if (!track) return;\n                const { shape } = track;\n                if (bb.x > shape.x) {\n                    bb.x = shape.x;\n                }\n                if (bb.y > shape.y) {\n                    bb.y = shape.y;\n                }\n                if (bb.xe < shape.x + shape.width) {\n                    bb.xe = shape.x + shape.width;\n                }\n                if (bb.ye < shape.y + shape.height) {\n                    bb.ye = shape.y + shape.height;\n                }\n            });\n        return {\n            id: viewId,\n            spec: internalSpec as View,\n            shape: { ...bb, width: bb.xe - bb.x, height: bb.ye - bb.y }\n        };\n    });\n}\n","import { getBoundingBox, type TrackInfo } from './bounding-box';\nimport { goslingToHiGlass } from './gosling-to-higlass';\nimport { HiGlassModel } from './higlass-model';\nimport { getLinkingInfo } from '../core/utils/linking';\nimport type {\n    GoslingSpec,\n    OverlaidTrack,\n    SingleTrack,\n    TrackApiData,\n    VisUnitApiData,\n    ViewApiData\n} from '@gosling-lang/gosling-schema';\nimport type { CompleteThemeDeep } from '../core/utils/theme';\nimport type { CompileCallback } from './compile';\nimport type { UrlToFetchOptions } from 'src/core/gosling-component';\nimport { getViewApiData } from '../api/api-data';\nimport { GoslingToHiGlassIdMapper } from '../api/track-and-view-ids';\nimport { IsDummyTrack } from '@gosling-lang/gosling-schema';\n\nexport function renderHiGlass(\n    spec: GoslingSpec,\n    trackInfos: TrackInfo[],\n    callback: CompileCallback,\n    theme: CompleteThemeDeep,\n    urlToFetchOptions?: UrlToFetchOptions\n) {\n    if (trackInfos.length === 0) {\n        // no tracks to render\n        return;\n    }\n\n    // HiGlass model\n    const hgModel = new HiGlassModel();\n\n    // A mapping table between Gosling track IDs and HiGlass view IDs\n    const idMapper = new GoslingToHiGlassIdMapper();\n\n    /* Update the HiGlass model by iterating tracks */\n    trackInfos.forEach(tb => {\n        const { track, boundingBox: bb, layout } = tb;\n        goslingToHiGlass(hgModel, track, bb, layout, theme, idMapper, urlToFetchOptions);\n    });\n\n    /* Add linking information to the HiGlass model */\n    const linkingInfos = getLinkingInfo(hgModel);\n\n    // Brushing\n    // (between a view with `brush` and a view having the same linking name)\n    linkingInfos\n        .filter(d => d.isBrush)\n        .forEach(info => {\n            hgModel.addBrush(\n                info.layout,\n                info.hgViewId,\n                theme,\n                linkingInfos.find(d => !d.isBrush && d.linkId === info.linkId)?.hgViewId,\n                info.style\n            );\n        });\n\n    // location/zoom lock information\n    // fill `locksByViewUid`\n    linkingInfos\n        .filter(d => !d.isBrush)\n        .forEach(d => {\n            hgModel.spec().zoomLocks.locksByViewUid[d.hgViewId] = d.linkId;\n            hgModel.spec().locationLocks.locksByViewUid[d.hgViewId] = d.linkId;\n        });\n\n    // fill `locksDict`\n    const uniqueLinkIds = Array.from(new Set(linkingInfos.map(d => d.linkId)));\n\n    uniqueLinkIds.forEach(linkId => {\n        hgModel.spec().zoomLocks.locksDict[linkId] = { uid: linkId };\n        hgModel.spec().locationLocks.locksDict[linkId] = { uid: linkId };\n\n        linkingInfos\n            .filter(d => !d.isBrush)\n            .filter(d => d.linkId === linkId)\n            .forEach(d => {\n                hgModel.spec().zoomLocks.locksDict[linkId][d.hgViewId] = [124625310.5, 124625310.5, 249250.621];\n                hgModel.spec().locationLocks.locksDict[linkId][d.hgViewId] = [124625310.5, 124625310.5, 249250.621];\n            });\n    });\n\n    const tracks: TrackApiData[] = trackInfos.map(d => {\n        return {\n            id: d.track.id!,\n            spec: d.track as SingleTrack | OverlaidTrack,\n            shape:\n                d.track.layout === 'linear' || IsDummyTrack(d.track) // Dummy track is always linear\n                    ? d.boundingBox\n                    : {\n                          ...d.boundingBox,\n                          cx: d.boundingBox.x + d.boundingBox.width / 2.0,\n                          cy: d.boundingBox.y + d.boundingBox.height / 2.0,\n                          innerRadius: d.track.innerRadius!,\n                          outerRadius: d.track.outerRadius!,\n                          startAngle: d.track.startAngle!,\n                          endAngle: d.track.endAngle!\n                      }\n        };\n    });\n\n    // Get the view information needed to support JS APIs (e.g., providing view bounding boxes)\n    const views: ViewApiData[] = getViewApiData(spec, tracks);\n\n    // Merge the tracks and views\n    const tracksAndViews = [\n        ...tracks.map(d => ({ ...d, type: 'track' } as VisUnitApiData)),\n        ...views.map(d => ({ ...d, type: 'view' } as VisUnitApiData))\n    ];\n\n    callback(hgModel.spec(), getBoundingBox(trackInfos), spec, tracksAndViews, idMapper.getTable());\n}\n","import type { GoslingSpec, SelectivityCondition, SingleView } from '@gosling-lang/gosling-schema';\nimport { logicalComparison } from '../core/utils/semantic-zoom';\n\nexport function manageResponsiveSpecs(\n    spec: GoslingSpec | SingleView,\n    wFactor: number,\n    hFactor: number,\n    parentWidth: number,\n    parentHeight: number\n): boolean {\n    if (typeof spec._assignedWidth === 'undefined' || typeof spec._assignedHeight === 'undefined') {\n        console.warn('Responsive spec cannot be used when width and height of a view is not determined yet.');\n        return false;\n    }\n\n    let replaced = false;\n\n    const { responsiveSpec } = spec;\n\n    const width = spec._assignedWidth * wFactor;\n    const height = spec._assignedHeight * hFactor;\n    const dimensions = { width, height, aspectRatio: width / height };\n    const parentDimensions = { width: parentWidth, height: parentHeight, aspectRatio: parentWidth / parentHeight };\n\n    // Check whether any alternative specs fullfil the condition\n    if (responsiveSpec) {\n        // TODO: Specify types for `specAndCondition`\n        responsiveSpec.forEach((specAndCondition: any) => {\n            const { spec: alternativeSpec, selectivity } = specAndCondition;\n\n            if (isSelectResponsiveSpec(selectivity, dimensions, parentDimensions) && !replaced) {\n                // Override this alternative spec in this view\n                Object.keys(alternativeSpec).forEach(k => {\n                    (spec as any)[k] = (alternativeSpec as any)[k];\n                });\n                delete spec.responsiveSpec;\n\n                replaced = true;\n\n                // now that we replaced a spec already, get out of this scope.\n                return;\n            }\n        });\n    }\n\n    if ('views' in spec) {\n        // This means we need to go deeper\n        spec.views.forEach(view => {\n            replaced = manageResponsiveSpecs(view, wFactor, hFactor, parentWidth, parentHeight) || replaced;\n        });\n    }\n\n    return replaced;\n}\n\n/**\n * Test if given conditions are all `true`.\n * @param conditions\n * @param assignedDimensions\n * @returns\n */\nfunction isSelectResponsiveSpec(\n    conditions: SelectivityCondition[],\n    assignedDimensions: { width: number; height: number; aspectRatio: number },\n    parentDimensions: { width: number; height: number; aspectRatio: number }\n): boolean {\n    if (conditions.length === 0) return false;\n\n    let isSelect = true;\n\n    conditions.forEach(condition => {\n        const { measure, operation, threshold, target } = condition;\n        isSelect =\n            isSelect &&\n            logicalComparison(\n                (target === 'container' ? parentDimensions : assignedDimensions)[measure],\n                operation,\n                threshold\n            ) === 1;\n    });\n\n    return isSelect;\n}\n","import type { GoslingSpec, TemplateTrackDef, VisUnitApiData } from '@gosling-lang/gosling-schema';\nimport type { HiGlassSpec } from '@gosling-lang/higlass-schema';\nimport { traverseToFixSpecDownstream, overrideDataTemplates } from './spec-preprocess';\nimport { replaceTrackTemplates } from '../core/utils/template';\nimport { getRelativeTrackInfo, type Size } from './bounding-box';\nimport type { CompleteThemeDeep } from '../core/utils/theme';\nimport type { UrlToFetchOptions } from 'src/core/gosling-component';\nimport { renderHiGlass as createHiGlassModels } from './create-higlass-models';\nimport { manageResponsiveSpecs } from './responsive';\nimport type { IdTable } from '../api/track-and-view-ids';\nimport { publish } from '../api/pubsub';\n\n/** The callback function called everytime after the spec has been compiled */\nexport type CompileCallback = (\n    hg: HiGlassSpec,\n    size: Size,\n    gs: GoslingSpec,\n    tracksAndViews: VisUnitApiData[],\n    idTable: IdTable\n) => void;\n\nexport function compile(\n    spec: GoslingSpec,\n    callback: CompileCallback,\n    templates: TemplateTrackDef[],\n    theme: Required<CompleteThemeDeep>,\n    containerStatus: {\n        containerSize?: { width: number; height: number };\n        containerParentSize?: { width: number; height: number };\n    },\n    urlToFetchOptions?: UrlToFetchOptions\n) {\n    // Make sure to keep the original spec as-is\n    const specCopy = JSON.parse(JSON.stringify(spec));\n\n    // Override default visual encoding (i.e., `DataTrack` => `BasicSingleTrack`)\n    overrideDataTemplates(specCopy);\n\n    // Replace track templates with raw gosling specs (i.e., `TemplateTrack` => `SingleTrack | OverlaidTrack`)\n    replaceTrackTemplates(specCopy, templates);\n\n    // Fix track specs by looking into the root-level spec\n    traverseToFixSpecDownstream(specCopy);\n\n    // Generate arrangement data\n    const trackInfosAndSize = getRelativeTrackInfo(specCopy, theme);\n    let { trackInfos } = trackInfosAndSize;\n    const { size } = trackInfosAndSize;\n\n    // Handle responsive specs, either remove them or replace original specs w/ them\n    const isResponsiveWidth =\n        (typeof spec.responsiveSize === 'object' && spec.responsiveSize?.width) || spec.responsiveSize;\n    const isResponsiveHeight =\n        (typeof spec.responsiveSize === 'object' && spec.responsiveSize?.height) || spec.responsiveSize;\n    const wFactor =\n        isResponsiveWidth && containerStatus.containerSize ? containerStatus.containerSize.width / size.width : 1;\n    const hFactor =\n        isResponsiveHeight && containerStatus.containerSize ? containerStatus.containerSize.height / size.height : 1;\n    const pWidth = containerStatus.containerParentSize\n        ? containerStatus.containerParentSize.width\n        : Number.MAX_SAFE_INTEGER;\n    const pHeight = containerStatus.containerParentSize\n        ? containerStatus.containerParentSize.height\n        : Number.MAX_SAFE_INTEGER;\n    const replaced = manageResponsiveSpecs(specCopy, wFactor, hFactor, pWidth, pHeight);\n\n    // Do the downstream-fix and track arrangement again using the updated spec\n    if (replaced) {\n        traverseToFixSpecDownstream(specCopy);\n        trackInfos = getRelativeTrackInfo(specCopy, theme).trackInfos;\n    }\n\n    // publish the fixed spec\n    // used for alt-gosling\n    publish('specProcessed', {\n        id: specCopy.id,\n        spec: specCopy\n    });\n\n    // Make HiGlass models for individual tracks\n    createHiGlassModels(specCopy, trackInfos, callback, theme, urlToFetchOptions);\n}\n","/* eslint-disable react/prop-types */\nimport type * as PIXI from 'pixi.js';\nimport React, { useEffect, useState, forwardRef, useMemo } from 'react';\n\nimport * as gosling from '..';\n// @ts-ignore\nimport { HiGlassComponent } from 'higlass';\nimport type { HiGlassSpec } from '@gosling-lang/higlass-schema';\nimport { uuid } from '../core/utils/uuid';\n\n/**\n * Register plugin tracks and data fetchers to HiGlass. This is necessary for the first time before using Gosling.\n */\ngosling.init();\n\n// TODO: Complete the API\nexport type HiGlassApi = {\n    api: Record<string, any>;\n    pixiRenderer: PIXI.Renderer;\n    pixiStage: PIXI.IRenderableObject;\n};\n\nexport interface HiGlassComponentWrapperProps {\n    size: { width: number; height: number };\n    viewConfig?: HiGlassSpec;\n    options: {\n        padding?: number;\n        margin?: number;\n        border?: string;\n        background?: string;\n        responsiveWidth?: boolean;\n        responsiveHeight?: boolean;\n        alt?: string;\n    };\n    id?: string;\n    className?: string;\n}\n\nexport const HiGlassComponentWrapper = forwardRef<HiGlassApi | undefined, HiGlassComponentWrapperProps>(\n    (props, ref) => {\n        // div `id` and `className` for detailed customization\n        const [wrapperDivId, setWrapperDivId] = useState(props.id ?? uuid());\n        useEffect(() => {\n            setWrapperDivId(props.id ?? uuid());\n        }, [props.id]);\n\n        const viewConfig = props.viewConfig || {};\n        const pixelPreciseMarginPadding = false; // !props.options.responsiveHeight;\n        const higlassComponent = useMemo(\n            () => (\n                <HiGlassComponent\n                    ref={ref}\n                    options={{\n                        // This uses `rowHeight: 1` in react-grid-layout, allowing to set height precisely.\n                        // Since using this disallows responsive resizing of track heights in HiGlass,\n                        // we need to use this only when users do not want to use responsive height.\n                        // (See https://github.com/higlass/higlass/blob/2a3786e13c2415a52abc1227f75512f128e784a0/app/scripts/HiGlassComponent.js#L2199)\n                        pixelPreciseMarginPadding,\n\n                        containerPaddingX: 0,\n                        containerPaddingY: 0,\n                        viewMarginTop: 0,\n                        viewMarginBottom: 0,\n                        viewMarginLeft: 0,\n                        viewMarginRight: 0,\n                        viewPaddingTop: 0,\n                        viewPaddingBottom: 0,\n                        viewPaddingLeft: 0,\n                        viewPaddingRight: 0,\n                        sizeMode: 'bounded',\n                        rangeSelectionOnAlt: true // this allows switching between `selection` and `zoom&pan` mode\n                    }}\n                    viewConfig={viewConfig}\n                />\n            ),\n            [viewConfig, pixelPreciseMarginPadding]\n        );\n\n        // Styling\n        const {\n            padding = 60,\n            margin = 0,\n            border = 'none',\n            background,\n            alt = 'Gosling visualization'\n        } = props.options || {};\n        return (\n            <>\n                <div\n                    id={wrapperDivId}\n                    className={`gosling-component ${props.className || ''}`}\n                    style={{\n                        position: 'relative',\n                        padding: padding,\n                        margin: margin,\n                        border: border,\n                        background: background,\n                        width: props.options.responsiveWidth ? `calc(100% - ${padding * 2}px)` : props.size.width,\n                        height: props.options.responsiveHeight ? `calc(100% - ${padding * 2}px)` : props.size.height,\n                        textAlign: 'left'\n                    }}\n                    aria-label={alt}\n                    role={'graphics-document'} // https://www.w3.org/TR/graphics-aria-1.0/#graphics-document\n                    aria-roledescription=\"visualization\"\n                >\n                    <div\n                        key={JSON.stringify(viewConfig)}\n                        id=\"higlass-wrapper\"\n                        className=\"higlass-wrapper\"\n                        style={{\n                            position: 'relative',\n                            display: 'block',\n                            background: background,\n                            margin: 0,\n                            padding: 0, // non-zero padding acts unexpectedly w/ HiGlassComponent\n                            width: props.options.responsiveWidth ? '100%' : props.size.width,\n                            height: props.options.responsiveHeight ? '100%' : props.size.height\n                        }}\n                        // onClick={(e) => {\n                        //     PubSub.publish('gosling.click', {\n                        //         mouseX: e.pageX - (document.getElementById('higlass-wrapper')?.offsetLeft ?? 0),\n                        //         mouseY: e.pageY - (document.getElementById('higlass-wrapper')?.offsetTop ?? 0)\n                        //     });\n                        // }}\n                    >\n                        {higlassComponent}\n                    </div>\n                </div>\n            </>\n        );\n    }\n);\n\nHiGlassComponentWrapper.displayName = 'HiGlassComponentWrapper';\n","import * as PIXI from 'pixi.js';\nimport type { TrackApiData, VisUnitApiData, ViewApiData } from '@gosling-lang/gosling-schema';\nimport type { HiGlassSpec } from '@gosling-lang/higlass-schema';\nimport type { HiGlassApi } from '../core/higlass-component-wrapper';\nimport { subscribe, unsubscribe } from './pubsub';\nimport { computeChromSizes, GenomicPositionHelper } from '../core/utils/assembly';\nimport type { CompleteThemeDeep } from '../core/utils/theme';\nimport type { IdTable } from './track-and-view-ids';\n\n/**\n * Information of suggested genes.\n */\ninterface GeneSuggestion {\n    geneName: string; // gene symbol\n    score: number; // higher score means suggested gene is more likely to match the searched keyword\n    chr: string; // chromosome name\n    txStart: number; // absolute genomic position assuming chromosomes are concat end-to-end\n    txEnd: number; // absolute genomic position assuming chromosomes are concat end-to-end\n}\n\nexport interface GoslingApi {\n    subscribe: typeof subscribe;\n    unsubscribe: typeof unsubscribe;\n    zoomTo(viewId: string, position: string, padding?: number, duration?: number): void;\n    zoomToExtent(viewId: string, duration?: number): void;\n    zoomToGene(viewId: string, gene: string, padding?: number, duration?: number): void;\n    suggestGene(viewId: string, keyword: string, callback: (suggestions: GeneSuggestion[]) => void): void;\n    getTracksAndViews(): VisUnitApiData[];\n    /**\n     * Get an array of all available track IDs that are either specified by users or auto-generated by the compiler.\n     * This can be used to call other API functions, e.g., `getTrack('track-1')`.\n     */\n    getTrackIds(): string[];\n    getTracks(): TrackApiData[];\n    getTrack(trackId: string): TrackApiData | undefined;\n    getViews(): ViewApiData[];\n    getView(viewId: string): ViewApiData | undefined;\n    exportPng(transparentBackground?: boolean): void;\n    exportPdf(transparentBackground?: boolean): void;\n    getCanvas(options?: { resolution?: number; transparentBackground?: boolean }): {\n        canvas: HTMLCanvasElement;\n        canvasWidth: number;\n        canvasHeight: number;\n        resolution: number;\n    };\n}\n\nexport function createApi(\n    hg: Readonly<HiGlassApi>,\n    hgSpec: HiGlassSpec | undefined,\n    tracksAndViews: readonly VisUnitApiData[],\n    theme: Required<CompleteThemeDeep>,\n    idTable: Readonly<IdTable>\n): GoslingApi {\n    const idTableCopy = structuredClone(idTable);\n    /**\n     * Get the HiGlass view ID from the Gosling track ID.\n     */\n    const getHgViewId = (trackId: string) => {\n        const viewId = idTableCopy[trackId];\n        if (!viewId) {\n            console.warn(`Unable to find the track ID, named ${trackId}.`);\n        }\n        return viewId ?? trackId;\n    };\n    const getTrackIds = () => {\n        return Object.keys(idTableCopy);\n    };\n    const getTracksAndViews = () => {\n        return [...tracksAndViews];\n    };\n    const getTracks = () => {\n        return [...getTracksAndViews().filter(d => d.type === 'track')] as TrackApiData[];\n    };\n    const getTrack = (trackId: string) => {\n        const trackInfoFound = getTracks().find(d => d.id === trackId);\n        if (!trackInfoFound) {\n            console.warn(`[getTrack()] Unable to find a track using the ID (${trackId})`);\n        }\n        return trackInfoFound;\n    };\n    const getViews = () => {\n        return [...getTracksAndViews().filter(d => d.type === 'view')] as ViewApiData[];\n    };\n    const getView = (viewId: string) => {\n        const view = getViews().find(d => d.id === viewId);\n        if (!view) {\n            console.warn(`Unable to find a view with the ID of ${viewId}`);\n        }\n        return view;\n    };\n    const getCanvas: GoslingApi['getCanvas'] = options => {\n        const resolution = options?.resolution ?? 4;\n        const transparentBackground = options?.transparentBackground ?? false;\n\n        const renderer = hg.pixiRenderer;\n        const renderTexture = PIXI.RenderTexture.create({\n            width: renderer.width / 2,\n            height: renderer.height / 2,\n            resolution\n        });\n\n        renderer.render(hg.pixiStage, renderTexture);\n\n        const canvas = renderer.plugins.extract.canvas(renderTexture);\n\n        // Set background color for the given theme in the gosling spec\n        // Otherwise, it is transparent\n        const canvasWithBg = document.createElement('canvas') as HTMLCanvasElement;\n        canvasWithBg.width = canvas.width;\n        canvasWithBg.height = canvas.height;\n\n        const ctx = canvasWithBg.getContext('2d')!;\n        if (!transparentBackground) {\n            ctx.fillStyle = theme.root.background;\n            ctx.fillRect(0, 0, canvasWithBg.width, canvasWithBg.height);\n        }\n        ctx.drawImage(canvas, 0, 0);\n\n        return {\n            canvas: canvasWithBg,\n            resolution,\n            canvasWidth: canvas.width,\n            canvasHeight: canvas.height\n        };\n    };\n    return {\n        subscribe,\n        unsubscribe,\n        zoomTo: (trackId, position, padding = 0, duration = 1000) => {\n            // Accepted input: 'chr1' or 'chr1:1-1000'\n            const assembly = getTrack(trackId)?.spec.assembly;\n            const manager = GenomicPositionHelper.fromString(position);\n            const absCoordinates = manager.toAbsoluteCoordinates(assembly, padding);\n            const hgViewId = getHgViewId(trackId);\n            hg.api.zoomTo(hgViewId, ...absCoordinates, ...absCoordinates, duration);\n        },\n        zoomToExtent: (trackId, duration = 1000) => {\n            const assembly = getTrack(trackId)?.spec.assembly;\n            const [start, end] = [0, computeChromSizes(assembly).total];\n            const hgViewId = getHgViewId(trackId);\n            hg.api.zoomTo(hgViewId, start, end, start, end, duration);\n        },\n        zoomToGene: (trackId, gene, padding = 0, duration = 1000) => {\n            const hgViewId = getHgViewId(trackId);\n            hg.api.zoomToGene(hgViewId, gene, padding, duration);\n        },\n        suggestGene: (trackId: string, keyword: string, callback: (suggestions: GeneSuggestion[]) => void) => {\n            const hgViewId = getHgViewId(trackId);\n            hg.api.suggestGene(hgViewId, keyword, callback);\n        },\n        getTrackIds,\n        getTracksAndViews,\n        getTracks,\n        getTrack,\n        getView,\n        getViews,\n        getCanvas,\n        exportPng: transparentBackground => {\n            const { canvas } = getCanvas({ resolution: 4, transparentBackground });\n            canvas.toBlob(blob => {\n                const a = document.createElement('a');\n                document.body.append(a);\n                a.download = 'gosling-visualization';\n                a.href = URL.createObjectURL(blob!);\n                a.click();\n                a.remove();\n            }, 'image/png');\n        },\n        exportPdf: async transparentBackground => {\n            const { jsPDF } = await import('jspdf');\n            const { canvas } = getCanvas({ resolution: 4, transparentBackground });\n            const imgData = canvas.toDataURL('image/jpeg', 1);\n            const pdf = new jsPDF({\n                orientation: canvas.width < canvas.height ? 'p' : 'l',\n                unit: 'pt',\n                format: [canvas.width, canvas.height]\n            });\n            pdf.addImage(imgData, 'JPEG', 0, 0, canvas.width, canvas.height);\n            pdf.save('gosling-visualization.pdf');\n        }\n    };\n}\n","import type { GoslingSpec } from '@gosling-lang/gosling-schema';\nimport { cloneDeepWith } from 'lodash-es';\nimport { isObject } from '@gosling-lang/gosling-schema';\n\nexport function omitDeep(spec: GoslingSpec, omitKeys: string[]) {\n    return cloneDeepWith(spec, (value: unknown) => {\n        if (isObject(value)) {\n            omitKeys.forEach(key => {\n                delete value[key];\n            });\n        }\n    });\n}\n","import type { HiGlassSpec } from '@gosling-lang/higlass-schema';\n\n/**\n * This makes sure that all the current zooming status is preserved when new tracks are added\n */\nexport const preverseZoomStatus = (newSpec: HiGlassSpec, prevSpec: HiGlassSpec) => {\n    newSpec.views.forEach(view => {\n        const viewUid = view.uid!;\n        const isNewView = !prevSpec.views.find(v => v.uid === viewUid);\n        if (isNewView) {\n            // if this view is linked with another view, we need to preverse the current zooming status of this view from the linked view\n            // Otherwise, all the views that is linked with this view will be reset to the original zooming position\n            const { locksByViewUid } = newSpec.zoomLocks;\n            const lockUid = locksByViewUid[viewUid];\n            const linkedViewUid = Object.entries(locksByViewUid).find(([_, uid]) => _ && uid === lockUid)?.[0];\n            // Only if the linked view existed in the previous spec, we copy the zooming status\n            const linkedViewExistedPrev = !!prevSpec.views.find(v => v.uid === linkedViewUid);\n            if (linkedViewUid && linkedViewExistedPrev) {\n                // We found a linked view, so copy the current zooming status\n                view.initialXDomain = prevSpec.views.find(v => v.uid === linkedViewUid)?.initialXDomain;\n                view.initialYDomain = prevSpec.views.find(v => v.uid === linkedViewUid)?.initialYDomain;\n            }\n        }\n    });\n};\n","/* eslint-disable react/prop-types */\nimport { type HiGlassApi, HiGlassComponentWrapper } from './higlass-component-wrapper';\nimport type { TemplateTrackDef, VisUnitApiData } from '@gosling-lang/gosling-schema';\nimport type { RequestInit } from '@gosling-lang/higlass-schema';\nimport React, { useState, useEffect, useMemo, useRef, forwardRef, useCallback, useImperativeHandle } from 'react';\nimport { ResizeSensor } from 'css-element-queries';\nimport * as gosling from '..';\nimport { getTheme, type Theme } from './utils/theme';\nimport { createApi, type GoslingApi } from '../api/api';\nimport { GoslingTemplates } from '..';\nimport { omitDeep } from './utils/omit-deep';\nimport { isEqual } from 'lodash-es';\nimport { publish } from '../api/pubsub';\nimport type { IdTable } from '../api/track-and-view-ids';\nimport { preverseZoomStatus } from './utils/higlass-zoom-config';\nimport { uuid } from '../core/utils/uuid';\n\n// Before rerendering, wait for a few time so that HiGlass container is resized already.\n// If HiGlass is rendered and then the container resizes, the viewport position changes, unmatching `xDomain` specified by users.\nconst DELAY_FOR_CONTAINER_RESIZE_BEFORE_RERENDER = 300;\n\n/** Matches URLs to specific fetch options so that datafetchers have access URL specific fetch options */\nexport interface UrlToFetchOptions {\n    [url: string]: RequestInit;\n}\ntype CompiledCallbackFn = (\n    goslingSpec: gosling.GoslingSpec,\n    higlassSpec: gosling.HiGlassSpec,\n    _additionalData: { _processedSpec: gosling.GoslingSpec }\n) => void\n\ninterface GoslingCompProps {\n    spec?: gosling.GoslingSpec;\n    compiled?: CompiledCallbackFn;\n    padding?: number;\n    margin?: number;\n    border?: string;\n    id?: string;\n    className?: string;\n    theme?: Theme;\n    templates?: TemplateTrackDef[];\n    urlToFetchOptions?: UrlToFetchOptions;\n    experimental?: {\n        reactive?: boolean;\n    };\n}\n\nexport type GoslingRef = {\n    api: GoslingApi;\n    hgApi: HiGlassApi;\n};\n\nexport const GoslingComponent = forwardRef<GoslingRef, GoslingCompProps>((props, ref) => {\n    const [viewConfig, setViewConfig] = useState<gosling.HiGlassSpec>();\n    const [size, setSize] = useState({ width: 200, height: 200 });\n    const wrapperSize = useRef<undefined | { width: number; height: number }>();\n    const wrapperParentSize = useRef<undefined | { width: number; height: number }>();\n    const prevSpec = useRef<undefined | gosling.GoslingSpec>();\n    const tracksAndViews = useRef<VisUnitApiData[]>([]);\n    /** A mapping table that connects between Gosling track IDs to corresponding HiGlas view IDs */\n    const idTable = useRef<IdTable>({});\n\n    // HiGlass API\n    // https://dev.to/wojciechmatuszewski/mutable-and-immutable-useref-semantics-with-react-typescript-30c9\n    const hgRef = useRef<HiGlassApi>(null);\n\n    const theme = getTheme(props.theme || 'light');\n    const wrapperDivId = props.id ?? uuid();\n\n    /**\n     * Publishes event if there is a new view added\n     * @param currentTracksAndViews newly retrieved tracks and views from compile() callback\n     */\n    const publishOnNewView = (currentTracksAndViews: VisUnitApiData[]) => {\n        // Compare the previous and current views to figure out the difference\n        const prevViews = tracksAndViews.current.filter(data => data.type == 'view');\n        const currentViews = currentTracksAndViews.filter(data => data.type == 'view');\n        const prevViewIds = new Set(prevViews.map(data => data.id));\n        const newViews = currentViews.filter(view => !prevViewIds.has(view.id));\n        // Publish if there are any new changes\n        newViews.forEach(view => {\n            publish('onNewView', { id: view.id });\n        });\n    };\n\n    // Gosling APIs\n    useImperativeHandle(\n        ref,\n        () => {\n            const hgApi = refAsReadonlyProxy(hgRef);\n            const visUnits = refAsReadonlyProxy(tracksAndViews);\n            const api = createApi(hgApi, viewConfig, visUnits, theme, idTable.current);\n            return { api, hgApi };\n        },\n        [viewConfig, theme]\n    );\n\n    // TODO: add a `force` parameter since changing `linkingId` might not update vis\n    const compile = useCallback(() => {\n        if (props.spec) {\n            const valid = gosling.validateGoslingSpec(props.spec);\n\n            if (valid.state === 'error') {\n                console.warn('Gosling spec is not valid. Please refer to the console message.');\n                return;\n            }\n\n            gosling.compile(\n                props.spec,\n                (newHiGlassSpec, newSize, newGoslingSpec, newTracksAndViews, newIdTable) => {\n                    // TODO: `linkingId` should be updated\n                    // We may not want to re-render this\n                    if (\n                        prevSpec.current &&\n                        isEqual(omitDeep(prevSpec.current, ['linkingId']), omitDeep(newGoslingSpec, ['linkingId']))\n                    ) {\n                        return;\n                    }\n\n                    // If a callback function is provided, return compiled information.\n                    props.compiled?.(props.spec!, newHiGlassSpec, { _processedSpec: newGoslingSpec });\n\n                    // Change the size of wrapper `<div/>` elements\n                    setSize(newSize);\n\n                    // Update the compiled view config\n                    const isMountedOnce = typeof viewConfig !== 'undefined';\n                    if (props.experimental?.reactive && isMountedOnce) {\n                        // Use API to update visualization.\n                        setTimeout(() => {\n                            preverseZoomStatus(\n                                newHiGlassSpec,\n                                hgRef.current?.api.getViewConfig() as gosling.HiGlassSpec\n                            );\n                            hgRef.current?.api.setViewConfig(newHiGlassSpec);\n                        }, DELAY_FOR_CONTAINER_RESIZE_BEFORE_RERENDER);\n                    } else {\n                        // Mount `HiGlassComponent` using this view config.\n                        setViewConfig(newHiGlassSpec);\n                    }\n                    publishOnNewView(newTracksAndViews);\n                    prevSpec.current = newGoslingSpec;\n                    tracksAndViews.current = newTracksAndViews;\n                    idTable.current = newIdTable;\n                },\n                [...GoslingTemplates], // TODO: allow user definitions\n                theme,\n                {\n                    containerSize: wrapperSize.current,\n                    containerParentSize: wrapperParentSize.current\n                },\n                props.urlToFetchOptions\n            );\n        }\n    }, [props.spec, theme]);\n\n    // TODO: If not necessary, do not update `wrapperSize` (i.e., when responsiveSize is not set)\n    useEffect(() => {\n        if (!props.spec?.responsiveSize) return;\n\n        const containerElement = document.getElementById(wrapperDivId);\n        if (!containerElement) return;\n\n        const resizer = new ResizeSensor(containerElement, newSize => {\n            if (\n                !wrapperSize.current ||\n                wrapperSize.current.height !== newSize.height ||\n                wrapperSize.current.width !== newSize.width\n            ) {\n                wrapperSize.current = newSize;\n                compile();\n            }\n        });\n\n        const parentElement = containerElement.parentElement;\n        if (!parentElement) return;\n\n        const parentResizer = new ResizeSensor(parentElement, newSize => {\n            if (\n                !wrapperParentSize.current ||\n                wrapperParentSize.current.height !== newSize.height ||\n                wrapperParentSize.current.width !== newSize.width\n            ) {\n                wrapperParentSize.current = newSize;\n                compile();\n            }\n        });\n\n        return () => {\n            resizer.detach();\n            parentResizer.detach();\n        };\n    });\n\n    useEffect(() => {\n        compile();\n    }, [props.spec, theme]);\n\n    const responsiveHeight =\n        typeof props.spec?.responsiveSize !== 'object' ? props.spec?.responsiveSize : props.spec.responsiveSize.height;\n\n    // HiGlass component should be mounted only once\n    const higlassComponent = useMemo(\n        () => (\n            <HiGlassComponentWrapper\n                ref={hgRef}\n                viewConfig={viewConfig}\n                size={size}\n                id={wrapperDivId}\n                className={props.className}\n                options={{\n                    padding: props.padding,\n                    border: props.border,\n                    margin: props.margin,\n                    responsiveWidth:\n                        typeof props.spec?.responsiveSize !== 'object'\n                            ? props.spec?.responsiveSize\n                            : props.spec.responsiveSize.width,\n                    responsiveHeight,\n                    background: theme.root.background,\n                    alt: props.spec?.description\n                }}\n            />\n        ),\n        [viewConfig, size, theme, responsiveHeight]\n    );\n\n    return higlassComponent;\n});\n\nGoslingComponent.displayName = 'GoslingComponent';\n\n/** Wraps the `.current` property of a React.RefObject as a readonly object. */\nfunction refAsReadonlyProxy<T extends object>(ref: React.RefObject<T>): Readonly<T> {\n    // Readonly because because we only implement `get`.\n    return new Proxy({} as Readonly<T>, {\n        get(_target, prop, reciever) {\n            if (!ref.current) throw Error('ref is not set!');\n            return Reflect.get(ref.current, prop, reciever);\n        }\n    });\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport type { GoslingSpec } from '@gosling-lang/gosling-schema';\nimport type { HiGlassSpec } from '@gosling-lang/higlass-schema';\n\nimport { validateGoslingSpec } from '@gosling-lang/gosling-schema';\nimport { compile } from '../compiler/compile';\nimport type { UrlToFetchOptions } from './gosling-component';\nimport { getTheme, type Theme } from './utils/theme';\nimport { GoslingTemplates } from './utils/template';\nimport { type GoslingApi, createApi } from '../api/api';\n\nimport {\n    type HiGlassApi,\n    HiGlassComponentWrapper,\n    type HiGlassComponentWrapperProps\n} from './higlass-component-wrapper';\n\nexport type GoslingEmbedOptions = Omit<HiGlassComponentWrapperProps['options'], 'background'> & {\n    id?: string;\n    className?: string;\n    theme?: Theme;\n    urlToFetchOptions?: UrlToFetchOptions;\n};\n\nconst MAX_TRIES = 20;\nconst INTERVAL = 200; // ms\n\n// https://github.com/higlass/higlass/blob/0299ae1229fb57e0ca8da31dff58003c3e5bf1cf/app/scripts/hglib.js#L37A\nconst launchHiglass = (\n    element: HTMLElement,\n    viewConfig: HiGlassSpec,\n    size: { width: number; height: number },\n    opts: GoslingEmbedOptions & { background: string }\n): Promise<HiGlassApi> => {\n    const ref = React.createRef<HiGlassApi>();\n    const component = React.createElement(HiGlassComponentWrapper, {\n        ref,\n        viewConfig,\n        size,\n        id: opts.id,\n        className: opts.className,\n        options: opts\n    });\n\n    createRoot(element).render(component);\n\n    // For some reason our wrapper component fails to initialize the provided `ref`\n    // immediately like `hglib.launch()`. This is a work-around to poll `ref`\n    // until it is initialized by our wrapper. We return a promise for the API once\n    // it is defined or raise an error.\n    // https://github.com/gosling-lang/gosling.js/pull/456#discussion_r687861694\n    return new Promise((resolve, reject) => {\n        let tries = 0;\n        const poll = setInterval(() => {\n            if (ref && ref.current) {\n                clearInterval(poll);\n                resolve(ref.current);\n            }\n            if (tries >= MAX_TRIES) {\n                reject(new Error('Failed to initialize HiGlassApi.'));\n            }\n            tries++;\n        }, INTERVAL);\n    });\n};\n\n/**\n * Embed a Gosling component to a given HTMLElement.\n * @param element\n * @param spec\n */\nexport function embed(element: HTMLElement, spec: GoslingSpec, opts: GoslingEmbedOptions = {}) {\n    return new Promise<GoslingApi>((resolve, reject) => {\n        const valid = validateGoslingSpec(spec);\n\n        if (valid.state === 'error') {\n            reject(new Error('Gosling spec is not valid. Please refer to the console message.'));\n        }\n\n        const theme = getTheme(opts.theme || 'light');\n        const options = {\n            ...opts,\n            background: theme.root.background,\n            alt: opts.alt ?? spec.description ?? 'Gosling visualization'\n        };\n\n        compile(\n            spec,\n            async (hsSpec, size, _, trackInfos, idTable) => {\n                const hg = await launchHiglass(element, hsSpec, size, options);\n                const api = createApi(hg, hsSpec, trackInfos, theme, idTable);\n                resolve(api);\n            },\n            [...GoslingTemplates],\n            theme,\n            {}, // TODO: properly specify this\n            opts.urlToFetchOptions\n        );\n    });\n}\n"],"names":["name","NOMINAL_COLOR","LightThemeMarkCommonStyle","getTheme","config","factory","icon","colorToHex","options","m","d3arc","DEBOUNCE_TIME","Worker","err","sum","parser","mask","varName","tag","func","tempVar","_getPrototypeOf","o","_setPrototypeOf","p","self","_get","Emitter","AbortSignal","toString","AbortController","Request","init","abortableFetch","require$$0","global","AggregateAbortController_1","abortcontroller_ponyfill_1","AggregateStatusReporter_1","__importDefault","this","AbortablePromiseCache_1","require$$1","require$$2","rank","max","min","inflateRaw","getParsers","AbortablePromiseCache","Buffer","d","b","Subscription","Subscriber","ConsumerObserver","SafeSubscriber","Observable","subscribe","observable","Symbol_observable","OperatorSubscriber","RemoteFile","dataConfig","v","group","tileInfo","d3dsvFormat","genomicFields","i","exampleHg","_getTheme","d3min","d3sum","_d","d3max","_a","PubSub","_assembly","width","height","spec","createHiGlassModels","gosling.init","getTrackIds","blob","compile","gosling.validateGoslingSpec","gosling.compile","_b","_c"],"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","x_google_ignoreList":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,93]}